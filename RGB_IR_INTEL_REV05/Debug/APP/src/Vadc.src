	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc7664a --dep-file=APP\\src\\.Vadc.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --make-target=APP\\src\\Vadc.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o APP\\src\\Vadc.src ..\\APP\\src\\Vadc.c"
	.compiler_name		"ctc"
	;source	'..\\APP\\src\\Vadc.c'

	
$TC16X
	
	.sdecl	'.text.Vadc.VadcAutoScan_init',code,cluster('VadcAutoScan_init')
	.sect	'.text.Vadc.VadcAutoScan_init'
	.align	2
	
	.global	VadcAutoScan_init

; ..\APP\src\Vadc.c	     1  /*
; ..\APP\src\Vadc.c	     2   * Vadc.c
; ..\APP\src\Vadc.c	     3   *
; ..\APP\src\Vadc.c	     4   *  Created on: 2019. 10. 24.
; ..\APP\src\Vadc.c	     5   *      Author: junseok.lee
; ..\APP\src\Vadc.c	     6   */
; ..\APP\src\Vadc.c	     7  
; ..\APP\src\Vadc.c	     8  #include "Vadc.h"
; ..\APP\src\Vadc.c	     9  
; ..\APP\src\Vadc.c	    10  App_VadcAutoScan g_VadcAutoScan; /**< \brief Demo information */
; ..\APP\src\Vadc.c	    11  
; ..\APP\src\Vadc.c	    12  uint8 batt_voltage = 0;
; ..\APP\src\Vadc.c	    13  uint8 EMG_Voltage = 0;
; ..\APP\src\Vadc.c	    14  
; ..\APP\src\Vadc.c	    15  void VadcAutoScan_init(void)
; Function VadcAutoScan_init
.L6:
VadcAutoScan_init:	.type	func
	sub.a	a10,#88
.L137:

; ..\APP\src\Vadc.c	    16  {
; ..\APP\src\Vadc.c	    17      /* VADC Configuration */
; ..\APP\src\Vadc.c	    18  
; ..\APP\src\Vadc.c	    19      /* create configuration */
; ..\APP\src\Vadc.c	    20      IfxVadc_Adc_Config adcConfig;
; ..\APP\src\Vadc.c	    21      IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
	mov.aa	a4,a10
.L151:
	movh.a	a5,#61442
	call	IfxVadc_Adc_initModuleConfig
.L152:

; ..\APP\src\Vadc.c	    22  
; ..\APP\src\Vadc.c	    23      adcConfig.supplyVoltage = IfxVadc_LowSupplyVoltageSelect_3V;
	mov	d15,#1
	st.b	[a10]29,d15
.L153:

; ..\APP\src\Vadc.c	    24  
; ..\APP\src\Vadc.c	    25      /* initialize module */
; ..\APP\src\Vadc.c	    26      IfxVadc_Adc_initModule(&g_VadcAutoScan.vadc, &adcConfig);
	movh.a	a15,#@his(g_VadcAutoScan)
	lea	a15,[a15]@los(g_VadcAutoScan)
.L154:
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxVadc_Adc_initModule
.L60:

; ..\APP\src\Vadc.c	    27  
; ..\APP\src\Vadc.c	    28      /* create group config */
; ..\APP\src\Vadc.c	    29      IfxVadc_Adc_GroupConfig adcGroupConfig;
; ..\APP\src\Vadc.c	    30      IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &g_VadcAutoScan.vadc);
	lea	a4,[a10]32
.L155:
	mov.aa	a5,a15
	call	IfxVadc_Adc_initGroupConfig
.L156:

; ..\APP\src\Vadc.c	    31  
; ..\APP\src\Vadc.c	    32      /* with group 1 */
; ..\APP\src\Vadc.c	    33      adcGroupConfig.groupId = IfxVadc_GroupId_1;
	st.b	[a10]36,d15
.L157:

; ..\APP\src\Vadc.c	    34      adcGroupConfig.master  = adcGroupConfig.groupId;
	st.b	[a10]37,d15
.L158:

; ..\APP\src\Vadc.c	    35  
; ..\APP\src\Vadc.c	    36      /* enable scan source */
; ..\APP\src\Vadc.c	    37      adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
	st.b	[a10]80,d15
.L159:

; ..\APP\src\Vadc.c	    38  
; ..\APP\src\Vadc.c	    39      /* enable auto scan */
; ..\APP\src\Vadc.c	    40      adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
	st.b	[a10]52,d15
.L160:

; ..\APP\src\Vadc.c	    41  
; ..\APP\src\Vadc.c	    42      /* enable all gates in "always" mode (no edge detection) */
; ..\APP\src\Vadc.c	    43      adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
	st.b	[a10]56,d15
.L161:

; ..\APP\src\Vadc.c	    44  
; ..\APP\src\Vadc.c	    45      /* initialize the group */
; ..\APP\src\Vadc.c	    46      /*IfxVadc_Adc_Group adcGroup;*/    //declared globally
; ..\APP\src\Vadc.c	    47      IfxVadc_Adc_initGroup(&g_VadcAutoScan.adcGroup, &adcGroupConfig);
	add.a	a15,#4
.L162:
	lea	a5,[a10]32
	mov.aa	a4,a15
	j	IfxVadc_Adc_initGroup
.L57:
	
__VadcAutoScan_init_function_end:
	.size	VadcAutoScan_init,__VadcAutoScan_init_function_end-VadcAutoScan_init
.L25:
	; End of function
	
	.sdecl	'.text.Vadc.calc_batt_voltage',code,cluster('calc_batt_voltage')
	.sect	'.text.Vadc.calc_batt_voltage'
	.align	2
	
	.global	calc_batt_voltage

; ..\APP\src\Vadc.c	    48  }
; ..\APP\src\Vadc.c	    49  
; ..\APP\src\Vadc.c	    50  
; ..\APP\src\Vadc.c	    51  
; ..\APP\src\Vadc.c	    52  uint8 calc_batt_voltage(uint32 volt)
; Function calc_batt_voltage
.L8:
calc_batt_voltage:	.type	func

; ..\APP\src\Vadc.c	    53  {
; ..\APP\src\Vadc.c	    54  	uint8 dc_voltage = 0;
; ..\APP\src\Vadc.c	    55  	volt = (volt * 290); 		/* Q15	((3.3V*242)/(4096*22))*2^15  */
	mov	d15,#290
.L198:
	mul	d4,d15
.L199:

; ..\APP\src\Vadc.c	    56  	dc_voltage = (uint8)(((uint32)volt*10)>>15); 	/* batt_voltage*10	*/
	mul	d15,d4,#10
.L200:

; ..\APP\src\Vadc.c	    57  
; ..\APP\src\Vadc.c	    58  	return  dc_voltage;
; ..\APP\src\Vadc.c	    59  }
	extr.u	d2,d15,#15,#8
	ret
.L133:
	
__calc_batt_voltage_function_end:
	.size	calc_batt_voltage,__calc_batt_voltage_function_end-calc_batt_voltage
.L40:
	; End of function
	
	.sdecl	'.text.Vadc.Adc_Scan',code,cluster('Adc_Scan')
	.sect	'.text.Vadc.Adc_Scan'
	.align	2
	
	.global	Adc_Scan

; ..\APP\src\Vadc.c	    60  
; ..\APP\src\Vadc.c	    61  void Adc_Scan(void)
; Function Adc_Scan
.L10:
Adc_Scan:	.type	func
	sub.a	a10,#96
.L138:

; ..\APP\src\Vadc.c	    62  {
; ..\APP\src\Vadc.c	    63  	uint32 adc_voltage = 0;
; ..\APP\src\Vadc.c	    64  
; ..\APP\src\Vadc.c	    65  	uint32 chnIx;
; ..\APP\src\Vadc.c	    66  	IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; ..\APP\src\Vadc.c	    67  	IfxVadc_Adc_Channel       adcChannel[3];
; ..\APP\src\Vadc.c	    68  
; ..\APP\src\Vadc.c	    69  	chnIx = 0;
; ..\APP\src\Vadc.c	    70  	IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &g_VadcAutoScan.adcGroup);
	fcall	.cocofun_4
.L167:
	mov.aa	a4,a10
.L168:
	mov.aa	a5,a12
	call	IfxVadc_Adc_initChannelConfig
.L169:

; ..\APP\src\Vadc.c	    71  	adcChannelConfig[chnIx].channelId      = (IfxVadc_ChannelId)(chnIx);
	mov	d15,#0
	st.b	[a10]12,d15
.L170:

; ..\APP\src\Vadc.c	    72  	adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx);  /* use dedicated result register */
	st.b	[a10]15,d15
.L171:

; ..\APP\src\Vadc.c	    73  
; ..\APP\src\Vadc.c	    74  	/* initialize the channel */
; ..\APP\src\Vadc.c	    75  	IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
	lea	a4,[a10]72
.L172:
	mov.aa	a5,a10
.L173:
	call	IfxVadc_Adc_initChannel
.L69:

; ..\APP\src\Vadc.c	    76  
; ..\APP\src\Vadc.c	    77  	/* add to scan */
; ..\APP\src\Vadc.c	    78  	unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
	mov	d4,#1
	ld.b	d15,[a10]12
.L73:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1229  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1230  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1232  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1233  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1234      return IfxVadc_getResultBasedOnRequestSource(group->module.vadc, group->group, channel, sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1235  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1237  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1238  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1239  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1240      return IfxVadc_getScanStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1241  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1244  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1245  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1246      return group->module.vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1247  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1250  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1252      IfxVadc_setBackgroundScan(vadc->vadc, group->groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1256  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1257  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1258      IfxVadc_setScan(group->group, channels, mask);
	ld.a	a4,[a15]8
.L74:
	sha	d4,d4,d15
.L83:

; ..\APP\src\Vadc.c	    79  	unsigned mask     = channels;
; ..\APP\src\Vadc.c	    80  	IfxVadc_Adc_setScan(&g_VadcAutoScan.adcGroup, channels, mask);
	mov	d5,d4
	call	IfxVadc_setScan
.L84:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1229  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1230  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1232  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1233  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1234      return IfxVadc_getResultBasedOnRequestSource(group->module.vadc, group->group, channel, sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1235  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1237  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1238  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1239  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1240      return IfxVadc_getScanStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1241  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1244  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1245  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1246      return group->module.vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1247  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1250  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1252      IfxVadc_setBackgroundScan(vadc->vadc, group->groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1256  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1257  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1258      IfxVadc_setScan(group->group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1259  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1262  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1263  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1264      IfxVadc_startBackgroundScan(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1265  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1266  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1268  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1269  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1270      IfxVadc_startQueue(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1271  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1272  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1274  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1275  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1276      IfxVadc_startScan(group->group);
	fcall	.cocofun_5

; ..\APP\src\Vadc.c	    81  
; ..\APP\src\Vadc.c	    82  
; ..\APP\src\Vadc.c	    83      /* start autoscan */
; ..\APP\src\Vadc.c	    84      IfxVadc_Adc_startScan(&g_VadcAutoScan.adcGroup);
; ..\APP\src\Vadc.c	    85  
; ..\APP\src\Vadc.c	    86      unsigned     group   = adcChannel[chnIx].group->groupId;
; ..\APP\src\Vadc.c	    87      unsigned     channel = adcChannel[chnIx].channel;
; ..\APP\src\Vadc.c	    88  
; ..\APP\src\Vadc.c	    89      /* wait for valid result */
; ..\APP\src\Vadc.c	    90      Ifx_VADC_RES conversionResult;
; ..\APP\src\Vadc.c	    91  
; ..\APP\src\Vadc.c	    92      do
; ..\APP\src\Vadc.c	    93      {
; ..\APP\src\Vadc.c	    94          conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; ..\APP\src\Vadc.c	    95      } while (!conversionResult.B.VF);
.L3:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
	ld.a	a15,[a10]76
.L174:
	ld.a	a15,[a15]4
.L175:
	ld.bu	d15,[a10]73
.L176:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     2   * \file IfxVadc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     3   * \brief VADC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    24   * \defgroup IfxLld_Vadc_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    25   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    26   * \defgroup IfxLld_Vadc_Std_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    27   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    28   * \defgroup IfxLld_Vadc_Std_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    29   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    30   * \defgroup IfxLld_Vadc_Std_QueueRequest Queue Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    31   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    32   * \defgroup IfxLld_Vadc_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    33   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    34   * \defgroup IfxLld_Vadc_Std_Frequency Frequency Calculation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    35   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    36   * \defgroup IfxLld_Vadc_Std_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    37   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    38   * \defgroup IfxLld_Vadc_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    39   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    40   * \defgroup IfxLld_Vadc_Std_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    41   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    42   * \defgroup IfxLld_Vadc_Std_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    43   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    46  #ifndef IFXVADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    47  #define IFXVADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    49  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    50  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    51  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    53  #include "_Impl/IfxVadc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    54  #include "_PinMap/IfxVadc_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    55  #include "IfxVadc_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    56  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    57  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    58  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    59  #include "IfxCcu6_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    60  #include "IfxCcu6_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    63  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    64  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    66  /** \addtogroup IfxLld_Vadc_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    67   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    68  /** \brief Defined in MODULE_VADC.G[x].ARBCFG.B.ANONS and ANONC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    69   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    70  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    71  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    72      IfxVadc_AnalogConverterMode_off             = 0, /**< \brief Analog Converter off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    73      IfxVadc_AnalogConverterMode_slowStandby     = 1, /**< \brief Slow Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    74      IfxVadc_AnalogConverterMode_fastStandby     = 2, /**< \brief Fast Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    75      IfxVadc_AnalogConverterMode_normalOperation = 3  /**< \brief Normal operation mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    76  } IfxVadc_AnalogConverterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    78  /** \brief Arbitration round length defined in MODULE_VADC.G[x].ARBCFG.ARBRND(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    82      IfxVadc_ArbitrationRounds_4_slots  = 0,  /**< \brief An arbitration round contains 4 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    83      IfxVadc_ArbitrationRounds_8_slots  = 1,  /**< \brief An arbitration round contains 8 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    84      IfxVadc_ArbitrationRounds_16_slots = 2,  /**< \brief An arbitration round contains 16 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    85      IfxVadc_ArbitrationRounds_20_slots = 3   /**< \brief An arbitration round contains 20 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    86  } IfxVadc_ArbitrationRounds;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    88  /** \brief Boundary Extension defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELX(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    89   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    90  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    91  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    92      IfxVadc_BoundaryExtension_standard            = 0,   /**< \brief Boundary Standard mode. BNDSELU/BNDSELL as Boundaries */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    93      IfxVadc_BoundaryExtension_fastCompareResult1  = 1,   /**< \brief Fast compare mode use as upper boundary  Channel result   1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    94      IfxVadc_BoundaryExtension_fastCompareResult2  = 2,   /**< \brief Fast compare mode use as upper boundary  Channel result   2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    95      IfxVadc_BoundaryExtension_fastCompareResult3  = 3,   /**< \brief Fast compare mode use as upper boundary  Channel result   3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    96      IfxVadc_BoundaryExtension_fastCompareResult4  = 4,   /**< \brief Fast compare mode use as upper boundary  Channel result   4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    97      IfxVadc_BoundaryExtension_fastCompareResult5  = 5,   /**< \brief Fast compare mode use as upper boundary  Channel result   5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    98      IfxVadc_BoundaryExtension_fastCompareResult6  = 6,   /**< \brief Fast compare mode use as upper boundary  Channel result   6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    99      IfxVadc_BoundaryExtension_fastCompareResult7  = 7,   /**< \brief Fast compare mode use as upper boundary  Channel result   7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   100      IfxVadc_BoundaryExtension_fastCompareResult8  = 8,   /**< \brief Fast compare mode use as upper boundary  Channel result   8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   101      IfxVadc_BoundaryExtension_fastCompareResult9  = 9,   /**< \brief Fast compare mode use as upper boundary  Channel result   9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   102      IfxVadc_BoundaryExtension_fastCompareResult10 = 10,  /**< \brief Fast compare mode use as upper boundary  Channel result  10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   103      IfxVadc_BoundaryExtension_fastCompareResult11 = 11,  /**< \brief Fast compare mode use as upper boundary  Channel result  11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   104      IfxVadc_BoundaryExtension_fastCompareResult12 = 12,  /**< \brief Fast compare mode use as upper boundary  Channel result  12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   105      IfxVadc_BoundaryExtension_fastCompareResult13 = 13,  /**< \brief Fast compare mode use as upper boundary  Channel result  13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   106      IfxVadc_BoundaryExtension_fastCompareResult14 = 14,  /**< \brief Fast compare mode use as upper boundary  Channel result  14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   107      IfxVadc_BoundaryExtension_fastCompareResult15 = 15   /**< \brief Fast compare mode use as upper boundary  Channel result  15 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   108  } IfxVadc_BoundaryExtension;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   110  /** \brief BoundarySel defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   112  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   113  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   114      IfxVadc_BoundarySelection_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   115      IfxVadc_BoundarySelection_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   116      IfxVadc_BoundarySelection_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   117      IfxVadc_BoundarySelection_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   118  } IfxVadc_BoundarySelection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   119  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   120  /** \brief VADC Channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   122  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   123  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   124      IfxVadc_ChannelId_none = -1,  /**< \brief None of VADC channels */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   125      IfxVadc_ChannelId_0    = 0,   /**< \brief Channel 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   126      IfxVadc_ChannelId_1    = 1,   /**< \brief Channel 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   127      IfxVadc_ChannelId_2    = 2,   /**< \brief Channel 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   128      IfxVadc_ChannelId_3    = 3,   /**< \brief Channel 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   129      IfxVadc_ChannelId_4    = 4,   /**< \brief Channel 4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   130      IfxVadc_ChannelId_5    = 5,   /**< \brief Channel 5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   131      IfxVadc_ChannelId_6    = 6,   /**< \brief Channel 6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   132      IfxVadc_ChannelId_7    = 7,   /**< \brief Channel 7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   133      IfxVadc_ChannelId_8    = 8,   /**< \brief Channel 8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   134      IfxVadc_ChannelId_9    = 9,   /**< \brief Channel 9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   135      IfxVadc_ChannelId_10   = 10,  /**< \brief Channel 10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   136      IfxVadc_ChannelId_11   = 11   /**< \brief Channel 11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   137  } IfxVadc_ChannelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   139  /** \brief ADC channel reference defined in MODULE_VADC.G[x].CHCTR[y].B.REFSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   140   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   141  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   142  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   143      IfxVadc_ChannelReference_standard = 0,  /**< \brief use Varef as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   144      IfxVadc_ChannelReference_channel0 = 1   /**< \brief use CH0 as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   145  } IfxVadc_ChannelReference;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   146  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   147  /** \brief ADC channel resolution defined in MODULE_VADC.G[x].CHCTR[y].B.ICLASS[y].B.CMS(x=0,1,...,11;y=0,1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   149  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   151      IfxVadc_ChannelResolution_12bit     = 0, /**< \brief 12-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   152      IfxVadc_ChannelResolution_10bit     = 1, /**< \brief 10-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   153      IfxVadc_ChannelResolution_8bit      = 2, /**< \brief 8-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   154      IfxVadc_ChannelResolution_10bitFast = 5  /**< \brief 10-bit cfast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   155  } IfxVadc_ChannelResolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   157  /** \brief Channel Result defined in MODULE_VADC.G[x].CHCTR[y].B.RESREG(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   161      IfxVadc_ChannelResult_0 = 0,      /**< \brief Use Channel result 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   162      IfxVadc_ChannelResult_1,          /**< \brief Use Channel result 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   163      IfxVadc_ChannelResult_2,          /**< \brief Use Channel result 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   164      IfxVadc_ChannelResult_3,          /**< \brief Use Channel result 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   165      IfxVadc_ChannelResult_4,          /**< \brief Use Channel result 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   166      IfxVadc_ChannelResult_5,          /**< \brief Use Channel result 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   167      IfxVadc_ChannelResult_6,          /**< \brief Use Channel result 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   168      IfxVadc_ChannelResult_7,          /**< \brief Use Channel result 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   169      IfxVadc_ChannelResult_8,          /**< \brief Use Channel result 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   170      IfxVadc_ChannelResult_9,          /**< \brief Use Channel result 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   171      IfxVadc_ChannelResult_10,         /**< \brief Use Channel result 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   172      IfxVadc_ChannelResult_11,         /**< \brief Use Channel result 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   173      IfxVadc_ChannelResult_12,         /**< \brief Use Channel result 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   174      IfxVadc_ChannelResult_13,         /**< \brief Use Channel result 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   175      IfxVadc_ChannelResult_14,         /**< \brief Use Channel result 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   176      IfxVadc_ChannelResult_15          /**< \brief Use Channel result 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   177  } IfxVadc_ChannelResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   179  /** \brief External Multiplexer Channel Selection Style as defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   180   * Ifx_VADC.G[x].EMUXCTR.B.EMXCSS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   181   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   182  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   184      IfxVadc_ChannelSelectionStyle_channelNumber = 0,  /**< \brief selects an arbitrary channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   185      IfxVadc_ChannelSelectionStyle_binary        = 1   /**< \brief Each bit of bitfield EMUXCH selects the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   186                                                         * associated channel for EMUX control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   187  } IfxVadc_ChannelSelectionStyle;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   189  /** \brief type of conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   193      IfxVadc_ConversionType_Compatible = 0  /**< \brief Compatible Timing Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   194  } IfxVadc_ConversionType;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   196  /** \brief Specifies the External Coding scheme(binary/gray)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   197   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXCOD
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   198   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   199  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   200  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   201      IfxVadc_EmuxCodingScheme_binary = 0,  /**< \brief Output the Channel Number in Binary code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   202      IfxVadc_EmuxCodingScheme_gray   = 1   /**< \brief Output the channel number in gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   203  } IfxVadc_EmuxCodingScheme;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   205  /** \brief Specifies the Emux interface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   209      IfxVadc_EmuxInterface_0 = 0,  /**< \brief Emux Interface 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   210      IfxVadc_EmuxInterface_1 = 1   /**< \brief Emux Interface 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   211  } IfxVadc_EmuxInterface;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   213  /** \brief External Multiplexer sample time control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   214   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXST
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   216  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   217  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   218      IfxVadc_EmuxSampleTimeControl_settingChanges = 0,  /**< \brief Use STCE Whenever Setting Changes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   219      IfxVadc_EmuxSampleTimeControl_always         = 1   /**< \brief Use STCE for each conversion of an external channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   220  } IfxVadc_EmuxSampleTimeControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   222  /** \brief specifies the External Channel Start select value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   223   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMUXSET
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   225  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   226  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   227      IfxVadc_EmuxSelectValue_0 = 0,      /**< \brief Start Selection Value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   228      IfxVadc_EmuxSelectValue_1,          /**< \brief Start Selection Value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   229      IfxVadc_EmuxSelectValue_2,          /**< \brief Start Selection Value 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   230      IfxVadc_EmuxSelectValue_3,          /**< \brief Start Selection Value 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   231      IfxVadc_EmuxSelectValue_4,          /**< \brief Start Selection Value 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   232      IfxVadc_EmuxSelectValue_5,          /**< \brief Start Selection Value 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   233      IfxVadc_EmuxSelectValue_6,          /**< \brief Start Selection Value 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   234      IfxVadc_EmuxSelectValue_7           /**< \brief Start Selection Value 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   235  } IfxVadc_EmuxSelectValue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   237  /** \brief Specifies External Multiplexer Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   238   * define in Ifx_VADC.G[x].EMUXCTR.B.EMUXMODE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   240  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   242      IfxVadc_ExternalMultiplexerMode_softwareControl = 0,  /**< \brief Disable The Emux Control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   243      IfxVadc_ExternalMultiplexerMode_steady          = 1,  /**< \brief select steady mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   244      IfxVadc_ExternalMultiplexerMode_singleStep      = 2,  /**< \brief Select single step mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   245      IfxVadc_ExternalMultiplexerMode_sequence        = 3   /**< \brief Select Sequence Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   246  } IfxVadc_ExternalMultiplexerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   248  /** \brief FIFO mode enable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   250  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   252      IfxVadc_FifoMode_seperateResultRegister = 0,  /**< \brief seperate Result Register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   253      IfxVadc_FifoMode_fifoStructure          = 1,  /**< \brief fifoStructure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   254      IfxVadc_FifoMode_maximumMode            = 2,  /**< \brief copy new result if bigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   255      IfxVadc_FifoMode_minimumMode            = 3   /**< \brief copy new result if it is smaller */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   256  } IfxVadc_FifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   258  /** \brief gating mode defined in MODULE_VADC.BRSMR.ENGT
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   260  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   261  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   262      IfxVadc_GatingMode_disabled   = 0,  /**< \brief Gating is disabled, no conversion request are issued */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   263      IfxVadc_GatingMode_always     = 1,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   264      IfxVadc_GatingMode_gatingHigh = 2,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   265      IfxVadc_GatingMode_gatingLow  = 3   /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is low */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   266  } IfxVadc_GatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   268  /** \brief External trigger gating defined in MODULE_VADC.G[x].QCTRLy.GTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   270  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   272      IfxVadc_GatingSource_0 = 0,      /**< \brief Input signal REQGTx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   273      IfxVadc_GatingSource_1,          /**< \brief Input signal REQGTx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   274      IfxVadc_GatingSource_2,          /**< \brief Input signal REQGTx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   275      IfxVadc_GatingSource_3,          /**< \brief Input signal REQGTx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   276      IfxVadc_GatingSource_4,          /**< \brief Input signal REQGTx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   277      IfxVadc_GatingSource_5,          /**< \brief Input signal REQGTx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   278      IfxVadc_GatingSource_6,          /**< \brief Input signal REQGTx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   279      IfxVadc_GatingSource_7,          /**< \brief Input signal REQGTx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   280      IfxVadc_GatingSource_8,          /**< \brief Input signal REQGTx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   281      IfxVadc_GatingSource_9,          /**< \brief Input signal REQGTx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   282      IfxVadc_GatingSource_10,         /**< \brief Input signal REQGTx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   283      IfxVadc_GatingSource_11,         /**< \brief Input signal REQGTx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   284      IfxVadc_GatingSource_12,         /**< \brief Input signal REQGTx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   285      IfxVadc_GatingSource_13,         /**< \brief Input signal REQGTx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   286      IfxVadc_GatingSource_14,         /**< \brief Input signal REQGTx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   287      IfxVadc_GatingSource_15          /**< \brief Input signal REQGTx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   288  } IfxVadc_GatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   290  /** \brief inputClass defined in MODULE_VADC.G[x].CHCTR[y].B.ICLSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   292  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   293  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   294      IfxVadc_InputClasses_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   295      IfxVadc_InputClasses_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   296      IfxVadc_InputClasses_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   297      IfxVadc_InputClasses_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   298  } IfxVadc_InputClasses;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   300  /** \brief ADC channel limit check defined in MODULE_VADC.G[x].CHCTR[y].B.CHEVMODE(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   301   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   302  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   303  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   304      IfxVadc_LimitCheck_noCheck            = 0,  /**< \brief Normal compare mode Event Never Fast Compare mode Event Never */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   305      IfxVadc_LimitCheck_eventIfInArea      = 1,  /**< \brief Normal compare mode Event If result is inside the boundary band    Fast Compare mode Event If result switches to high (above comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   306      IfxVadc_LimitCheck_eventIfOutsideArea = 2,  /**< \brief Normal compare mode Event If result is outside the boundary band   Fast Compare mode Event If result switches to low (below comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   307      IfxVadc_LimitCheck_always             = 3   /**< \brief Normal compare mode Event Always   Fast Compare mode Event Always */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   308  } IfxVadc_LimitCheck;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   310  /** \brief Low Power Supply Voltage Select
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   312  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   314      IfxVadc_LowSupplyVoltageSelect_5V = 0,  /**< \brief 5V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   315      IfxVadc_LowSupplyVoltageSelect_3V = 1   /**< \brief 3.3V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   316  } IfxVadc_LowSupplyVoltageSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   318  /** \brief Access protection for Group registers defined in MODULE_VADC.ACCPROT0.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   319   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   320  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   321  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   322      IfxVadc_Protection_channelControl0       = 0,   /**< \brief Access control for GxCHCTR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   323      IfxVadc_Protection_channelControl1       = 1,   /**< \brief Access control for GxCHCTR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   324      IfxVadc_Protection_channelControl2       = 2,   /**< \brief Access control for GxCHCTR2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   325      IfxVadc_Protection_channelControl3       = 3,   /**< \brief Access control for GxCHCTR3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   326      IfxVadc_Protection_channelControl4       = 4,   /**< \brief Access control for GxCHCTR4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   327      IfxVadc_Protection_channelControl5       = 5,   /**< \brief Access control for GxCHCTR5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   328      IfxVadc_Protection_channelControl6       = 6,   /**< \brief Access control for GxCHCTR6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   329      IfxVadc_Protection_channelControl7       = 7,   /**< \brief Access control for GxCHCTR7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   330      IfxVadc_Protection_channelControl8       = 8,   /**< \brief Access control for GxCHCTR8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   331      IfxVadc_Protection_channelControl9       = 9,   /**< \brief Access control for GxCHCTR9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   332      IfxVadc_Protection_channelControl10      = 10,  /**< \brief Access control for GxCHCTR10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   333      IfxVadc_Protection_channelControl11      = 11,  /**< \brief Access control for GxCHCTR11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   334      IfxVadc_Protection_channelControl12      = 12,  /**< \brief Access control for GxCHCTR12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   335      IfxVadc_Protection_channelControl13      = 13,  /**< \brief Access control for GxCHCTR13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   336      IfxVadc_Protection_channelControl14      = 14,  /**< \brief Access control for GxCHCTR14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   337      IfxVadc_Protection_externalMultiplexer   = 15,  /**< \brief Access control for EMUXSEL, GxEMUXCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   338      IfxVadc_Protection_initGroup0            = 16,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   339      IfxVadc_Protection_initGroup1            = 17,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   340      IfxVadc_Protection_initGroup2            = 18,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   341      IfxVadc_Protection_initGroup3            = 19,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   342      IfxVadc_Protection_initGroup4            = 20,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   343      IfxVadc_Protection_initGroup5            = 21,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   344      IfxVadc_Protection_initGroup6            = 22,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   345      IfxVadc_Protection_initGroup7            = 23,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   346      IfxVadc_Protection_initGroup8            = 24,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   347      IfxVadc_Protection_initGroup9            = 25,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   348      IfxVadc_Protection_initGroup10           = 26,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   349      IfxVadc_Protection_initGroup11           = 27,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   350      IfxVadc_Protection_initGroup12           = 28,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   351      IfxVadc_Protection_initGroup13           = 29,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   352      IfxVadc_Protection_initGroup14           = 30,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   353      IfxVadc_Protection_globalConfig          = 31,  /**< \brief Access control for GLOBCFG */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   354      IfxVadc_Protection_serviceGroup0         = 32,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   355      IfxVadc_Protection_serviceGroup1         = 33,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   356      IfxVadc_Protection_serviceGroup2         = 34,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   357      IfxVadc_Protection_serviceGroup3         = 35,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   358      IfxVadc_Protection_serviceGroup4         = 36,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   359      IfxVadc_Protection_serviceGroup5         = 37,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   360      IfxVadc_Protection_serviceGroup6         = 38,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   361      IfxVadc_Protection_serviceGroup7         = 39,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   362      IfxVadc_Protection_serviceGroup8         = 40,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   363      IfxVadc_Protection_serviceGroup9         = 41,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   364      IfxVadc_Protection_serviceGroup10        = 42,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   365      IfxVadc_Protection_serviceGroup11        = 43,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   366      IfxVadc_Protection_serviceGroup12        = 44,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   367      IfxVadc_Protection_serviceGroup13        = 45,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   368      IfxVadc_Protection_serviceGroup14        = 46,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   369      IfxVadc_Protection_testFunction          = 47,  /**< \brief Access control for GLOBTF */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   370      IfxVadc_Protection_resultRegisterGroup0  = 48,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   371      IfxVadc_Protection_resultRegisterGroup1  = 49,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   372      IfxVadc_Protection_resultRegisterGroup2  = 50,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   373      IfxVadc_Protection_resultRegisterGroup3  = 51,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   374      IfxVadc_Protection_resultRegisterGroup4  = 52,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   375      IfxVadc_Protection_resultRegisterGroup5  = 53,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   376      IfxVadc_Protection_resultRegisterGroup6  = 54,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   377      IfxVadc_Protection_resultRegisterGroup7  = 55,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   378      IfxVadc_Protection_resultRegisterGroup8  = 56,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   379      IfxVadc_Protection_resultRegisterGroup9  = 57,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   380      IfxVadc_Protection_resultRegisterGroup10 = 58,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   381      IfxVadc_Protection_resultRegisterGroup11 = 59,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   382      IfxVadc_Protection_resultRegisterGroup12 = 60,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   383      IfxVadc_Protection_resultRegisterGroup13 = 61,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   384      IfxVadc_Protection_resultRegisterGroup14 = 62   /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   385  } IfxVadc_Protection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   387  /** \brief Arbitration priority, Group x,defined in MODULE_VADC.G[x].ARBPR.PRIOy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   389  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   390  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   391      IfxVadc_RequestSlotPriority_lowest  = 0, /**< \brief Lowest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   392      IfxVadc_RequestSlotPriority_low     = 1, /**< \brief Lowpriority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   393      IfxVadc_RequestSlotPriority_high    = 2, /**< \brief High priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   394      IfxVadc_RequestSlotPriority_highest = 3  /**< \brief Highest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   395  } IfxVadc_RequestSlotPriority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   397  /** \brief Request source start mode defined in MODULE_VADC.G[x].ARBPR.CSMy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   398   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   399  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   400  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   401      IfxVadc_RequestSlotStartMode_waitForStart       = 0, /**< \brief Wait for start */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   402      IfxVadc_RequestSlotStartMode_cancelInjectRepeat = 1  /**< \brief Cancel-Inject-Repeat */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   403  } IfxVadc_RequestSlotStartMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   405  /** \brief Request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   406   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   407  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   408  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   409      IfxVadc_RequestSource_queue      = 0, /**< \brief 8 stage Queue request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   410      IfxVadc_RequestSource_scan       = 1, /**< \brief scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   411      IfxVadc_RequestSource_background = 2  /**< \brief background scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   412  } IfxVadc_RequestSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   414  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   415   * Definition in Ifx_VADC.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   417  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   419      IfxVadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   420      IfxVadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   421  } IfxVadc_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   423  /** \brief Service Node defined in MODULE_VADC.G[x].SRACT.U(x= 0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   425  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   426  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   427      IfxVadc_SrcNr_group0  = 0,  /**< \brief service request line 0 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   428      IfxVadc_SrcNr_group1  = 1,  /**< \brief service request line 1 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   429      IfxVadc_SrcNr_group2  = 2,  /**< \brief service request line 2 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   430      IfxVadc_SrcNr_group3  = 3,  /**< \brief service request line 3 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   431      IfxVadc_SrcNr_shared0 = 4,  /**< \brief Select shared service request line 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   432      IfxVadc_SrcNr_shared1 = 5,  /**< \brief Select shared service request line 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   433      IfxVadc_SrcNr_shared2 = 6,  /**< \brief Select shared service request line 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   434      IfxVadc_SrcNr_shared3 = 7   /**< \brief Select shared service request line 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   435  } IfxVadc_SrcNr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   437  /** \brief API return values defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   438   * MODULE_VADC.G[x].QSR0.U,MODULE_VADC.G[x].ASPND.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   439   * MODULE_VADC.BRSPND[x](x=0,1,...,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   440   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   441  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   442  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   443      IfxVadc_Status_noError              = 0, /**< \brief No error during api execution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   444      IfxVadc_Status_notInitialised       = 1, /**< \brief Appropriate initialisation not done */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   445      IfxVadc_Status_invalidGroup         = 2, /**< \brief Invalid group number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   446      IfxVadc_Status_invalidChannel       = 3, /**< \brief Invalid channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   447      IfxVadc_Status_queueFull            = 4, /**< \brief Queue is full */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   448      IfxVadc_Status_noAccess             = 5, /**< \brief Access to the group/channel is disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   449      IfxVadc_Status_channelsStillPending = 6  /**< \brief Conversion for some of the channels are still pending */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   450  } IfxVadc_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   452  /** \brief trigger definition defined in MODULE_VADC.G[x].QCTRL0.XTMODE(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   453   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   454  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   455  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   456      IfxVadc_TriggerMode_noExternalTrigger = 0,  /**< \brief No external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   457      IfxVadc_TriggerMode_uponFallingEdge   = 1,  /**< \brief Trigger event upon a falling edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   458      IfxVadc_TriggerMode_uponRisingEdge    = 2,  /**< \brief Trigger event upon a rising edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   459      IfxVadc_TriggerMode_uponAnyEdge       = 3   /**< \brief Trigger event upon any edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   460  } IfxVadc_TriggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   462  /** \brief Trigger request source defined in MODULE_VADC.G[x].QCTRLy.XTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   463   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   464  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   466      IfxVadc_TriggerSource_0 = 0,      /**< \brief Input signal REQTRx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   467      IfxVadc_TriggerSource_1,          /**< \brief Input signal REQTRx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   468      IfxVadc_TriggerSource_2,          /**< \brief Input signal REQTRx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   469      IfxVadc_TriggerSource_3,          /**< \brief Input signal REQTRx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   470      IfxVadc_TriggerSource_4,          /**< \brief Input signal REQTRx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   471      IfxVadc_TriggerSource_5,          /**< \brief Input signal REQTRx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   472      IfxVadc_TriggerSource_6,          /**< \brief Input signal REQTRx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   473      IfxVadc_TriggerSource_7,          /**< \brief Input signal REQTRx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   474      IfxVadc_TriggerSource_8,          /**< \brief Input signal REQTRx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   475      IfxVadc_TriggerSource_9,          /**< \brief Input signal REQTRx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   476      IfxVadc_TriggerSource_10,         /**< \brief Input signal REQTRx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   477      IfxVadc_TriggerSource_11,         /**< \brief Input signal REQTRx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   478      IfxVadc_TriggerSource_12,         /**< \brief Input signal REQTRx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   479      IfxVadc_TriggerSource_13,         /**< \brief Input signal REQTRx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   480      IfxVadc_TriggerSource_14,         /**< \brief Input signal REQTRx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   481      IfxVadc_TriggerSource_15          /**< \brief Input signal REQTRx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   482  } IfxVadc_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   484  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   486  /** \addtogroup IfxLld_Vadc_Std_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   487   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   489  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   490  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   491  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   492  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   493  /** \brief access function to enable/disable  wait for read mode for result registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   494   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   495   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   496   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   499  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   501  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   502   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   503   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   504   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   505   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   506  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   508  /** \brief Enables the background sacn external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   509   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   510   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   511   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   512  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   514  /** \brief Gets the background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   515   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   516   * \return background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   518  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   520  /** \brief Gets the gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   521   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   522   * \return background scan gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   523   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   524  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   526  /** \brief Gets the requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   527   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   528   * \return requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   529   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   530  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   532  /** \brief Gets the requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   533   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   534   * \return requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   535   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   536  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   537  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   538  /** \brief Gets the background scan trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   539   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   540   * \return Gets the background scan external trigger source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   541   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   542  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   543  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   544  /** \brief Gets the background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   545   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   546   * \return background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   547   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   548  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   549  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   550  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   551   * \param vadc Pointer to the VADC Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   552   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   553   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   555  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   557  /** \brief return conversion result stored in the Global result Register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   558   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   559   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   560   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   561   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   562   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   563   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   564   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   565   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   567   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   568   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   569   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   570   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   571   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   572   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   573   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   574   * IfxVadc_SetAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   575   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   576   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   577   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   579   * Ifx_VADC_GLOBRES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   580   * result = IfxVadc_getGlobalResult (vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   582   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   583   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   584   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   585  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   586  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   587  /** \brief get global input class sample time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   588   * \param vadc Pointer to the VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   589   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   590   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   591   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   592   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   593  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   594  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   595  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   596   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   597   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   598   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   599   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   600   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   601   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   602   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   603   * Ifx_VADC* vadc = &MODULE_VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   604   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   605   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   606   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   607   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   608   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   609   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   610   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   611   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   612   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   613   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   614   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   615   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   616   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   617   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   618   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   619   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   620   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   621   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   622   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   623   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   624   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   625   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   626   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   627   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   628   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   629  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   630  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   631  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   632   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   633   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   634   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   635   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   636   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   637   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   638   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   639   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   640   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   641   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   642   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   643   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   644   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   645   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   646   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   647   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   648   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   649   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   650   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   651   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   652   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   653   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   654   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   655   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   656   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   657   * // fetch the result of conversion from result register 0 for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   658   * Ifx_VADC_RES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   659   * result = IfxVadc_getResult(group, IfxVadc_ChannelResult0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   660   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   661   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   662   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   663  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   665  /** \brief Returns the auto background scan status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   666   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   667   * \return TRUE if enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   668   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   669  IFX_INLINE boolean IfxVadc_isAutoBackgroundScanEnabled(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   671  /** \brief Returns the background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   672   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   673   * \return background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   675  IFX_INLINE boolean IfxVadc_isRequestBackgroundScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   677  /** \brief Enables/Disables continuous background auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   678   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   679   * \param autoBackgroundScanEnable whether auto background scan enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   680   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   681   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   682  IFX_INLINE void IfxVadc_setAutoBackgroundScan(Ifx_VADC *vadc, boolean autoBackgroundScanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   684  /** \brief configures a background scan; can also stop autoscan if all channels are 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   685   * \param vadc pointer to the VADC module registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   686   * \param groupId group index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   687   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   688   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   689   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   691   * Background scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   692   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   693   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   694   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   695   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   696   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   697   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   698   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   699   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   700   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   701   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   702   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   703   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   704   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   705   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   706   * IfxVadc_setAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   707   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   708   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   709   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   710   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   711   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   712   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   713  IFX_INLINE void IfxVadc_setBackgroundScan(Ifx_VADC *vadc, IfxVadc_GroupId groupId, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   715  /** \brief Sets the background scan slot gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   716   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   717   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   718   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   719   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   720   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   721  IFX_INLINE void IfxVadc_setBackgroundScanSlotGatingConfig(Ifx_VADC *vadc, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   722  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   723  /** \brief Sets the background scan exteranal trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   724   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   725   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   726   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   727   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   728   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   729  IFX_INLINE void IfxVadc_setBackgroundScanSlotTriggerConfig(Ifx_VADC *vadc, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   731  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   732   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   733   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   734   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   735   * \see IfxVadc_setBackgroundScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   736   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   737   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   738  IFX_INLINE void IfxVadc_startBackgroundScan(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   739  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   740  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   741  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   742  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   743  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   744  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   745   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   746   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   747   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   748  IFX_EXTERN IfxVadc_Status IfxVadc_getBackgroundScanStatus(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   750  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   751   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   752   * \param vadc VADC module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   753   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   754   * \param channel channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   755   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   756   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   757   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   758   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   759   * Ifx_VADC vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   760   * vadc.vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   761   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   762   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   763   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   764   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   765   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   766   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   767   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   768   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   769   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   770   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   771   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   772   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   773   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   774   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   775   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   776   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   777   * // fetch the result of conversion for channel 2 of group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   778   * Ifx_VADC_RESresult2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   779   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   780   * Ifx_VADC_RESresult5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   781   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId5, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   782   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   783   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   785  IFX_EXTERN Ifx_VADC_RES IfxVadc_getResultBasedOnRequestSource(Ifx_VADC *vadc, Ifx_VADC_G *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   787  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   789  /** \addtogroup IfxLld_Vadc_Std_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   790   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   792  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   793  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   795  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   796  /** \brief Disables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   797   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   798   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   799   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   800  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   801  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   802  /** \brief Enables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   803   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   806  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   808  /** \brief Gets the request scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   809   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   810   * \return requested scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   811   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   812  IFX_INLINE IfxVadc_GatingMode IfxVadc_getScanSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   813  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   814  /** \brief Gets the request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   815   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   816   * \return request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   818  IFX_INLINE IfxVadc_GatingSource IfxVadc_getScanSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   820  /** \brief Gets the request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   821   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   822   * \return request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   823   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   824  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   825  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   826  /** \brief Gets the request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   827   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   828   * \return request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   829   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   830  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   832  /** \brief Gets the requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   833   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   834   * \return requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   835   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   836  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getScanSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   838  /** \brief Gets the requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   839   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   840   * \return requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   841   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   842  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getScanSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   844  /** \brief Gets the auto scan enable status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   845   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   846   * \return TRUE if auto scan enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   847   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   848  IFX_INLINE boolean IfxVadc_isAutoScanEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   850  /** \brief Returns the scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   851   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   852   * \return TRUE if scan slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   853   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   854  IFX_INLINE boolean IfxVadc_isRequestScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   856  /** \brief Enables/Disables continuous auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   857   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   858   * \param autoscanEnable whether autoscan is enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   859   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   860   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   861  IFX_INLINE void IfxVadc_setAutoScan(Ifx_VADC_G *vadcG, boolean autoscanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   862  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   863  /** \brief Sets the scan slot gating configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   864   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   865   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   866   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   867   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   868   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   869  IFX_INLINE void IfxVadc_setScanSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   870  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   871  /** \brief Sets the scan slot trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   872   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   873   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   874   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   875   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   877  IFX_INLINE void IfxVadc_setScanSlotTriggerConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   879  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   880   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   881   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   882   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   883   * See \ref IfxVadc_setScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   884   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   886  IFX_INLINE void IfxVadc_startScan(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   888  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   889  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   890  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   891  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   892  /** \brief Gives the scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   893   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   894   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   895   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   896  IFX_EXTERN IfxVadc_Status IfxVadc_getScanStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   897  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   898  /** \brief Configures an (auto-)scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   899   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   900   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   901   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   902   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   903   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   904   * (Auto-)Scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   905   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   906   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   907   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   908   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   909   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   910   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   911   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   912   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   913   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   914   * // enable Auto-Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   915   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   916   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   917   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   918   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   919   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   920   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   922  IFX_EXTERN void IfxVadc_setScan(Ifx_VADC_G *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   924  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   926  /** \addtogroup IfxLld_Vadc_Std_QueueRequest
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   927   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   929  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   930  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   931  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   932  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   933  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   934   * refill incase of aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   935   * source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   936   * external trigger control of the aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   937   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   938   * \param channel specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   939   * \param options specifies the refill, source interrupt enable/disable and external trigger control selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   940   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   941   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   942   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   944   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   945   * IfxVadc_ChannelId channel = 1; // for channel 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   946   * // Add channel 1 to queue of group 0 with the refill turned on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   947   * IfxVadc_addToQueue(qroup, channel, (1<<IFX_VADC_G_QBUR0_RF_OFF));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   948   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   949   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   950   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   951  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   952  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   953  /** \brief Clears all the queue entries including backup stage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   954   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   955   * \param flushQueue Whether queue is cleared or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   956   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   957   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   958  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   959  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   960  /** \brief Disables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   961   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   962   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   964  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   966  /** \brief Enables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   967   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   968   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   969   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   970  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   972  /** \brief Gets the requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   973   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   974   * \return requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   975   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   976  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   977  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   978  /** \brief Gets the requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   979   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   980   * \return requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   981   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   982  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   983  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   984  /** \brief Gets the request queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   985   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   986   * \return requested queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   988  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   990  /** \brief Gets the requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   991   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   992   * \return requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   994  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   996  /** \brief Gets the requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   997   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   998   * \return requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1000  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1002  /** \brief Gets the requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1003   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1004   * \return requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1005   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1006  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1008  /** \brief Returns the queue slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1009   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1010   * \return TRUE if queue slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1012  IFX_INLINE boolean IfxVadc_isRequestQueueSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1014  /** \brief Sets the gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1015   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1016   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1017   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1020  IFX_INLINE void IfxVadc_setQueueSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1022  /** \brief Sets the trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1023   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1024   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1025   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1026   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1027   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1028  IFX_INLINE void IfxVadc_setQueueSlotTriggerOperatingConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1030  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1031   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1032   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1033   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1034  IFX_INLINE void IfxVadc_startQueue(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1036  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1038  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1040  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1041   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1042   * \return status of the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1043   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1044   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1045   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1046   * boolean queueFull = (IfxVadc_getQueueStatus(group)==IfxVadc_Status_queueFull)?TRUE:FALSE; // get Queue status for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1047   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1050  IFX_EXTERN IfxVadc_Status IfxVadc_getQueueStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1052  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1054  /** \addtogroup IfxLld_Vadc_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1055   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1056  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1057  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1058  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1059  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1061  /** \brief Initializes a EMUX output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1062   * \param emux the Emux Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1063   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1064   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1066   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1067  IFX_INLINE void IfxVadc_initEmuxPin(const IfxVadc_Emux_Out *emux, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1068  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1069  /** \brief Initializes a GxBFL output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1070   * \param gxBfl the GxBFL Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1071   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1072   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1073   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1074   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1075  IFX_INLINE void IfxVadc_initGxBflPin(const IfxVadc_GxBfl_Out *gxBfl, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1077  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1078  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1079  /** \addtogroup IfxLld_Vadc_Std_Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1080   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1081  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1082  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1083  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1084  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1085  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1086  /** \brief Calculate the time using analog frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1087   * \param analogFrequency analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1088   * \param sampleTime sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1089   * \return sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1090   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1091  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1092  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1093  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1094  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1095  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1096  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1097  /** \brief Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1098   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1099   * \return Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1101  IFX_EXTERN float32 IfxVadc_getAdcAnalogFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1103  /** \brief Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1104   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1105   * \return Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1107  IFX_EXTERN float32 IfxVadc_getAdcDigitalFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1109  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1111  /** \addtogroup IfxLld_Vadc_Std_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1112   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1115  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1118  /** \brief Clears the all group requests.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1119   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1120   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1122  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1124  /** \brief Gets the ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1125   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1126   * \return ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1127   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1128  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1130  /** \brief Gets the channel esult service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1131   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1132   * \return channel result service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1133   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1134  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1135  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1136  /** \brief Gets the channel esult service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1137   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1138   * \return channel result service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1139   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1140  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1141  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1142  /** \brief Gets the channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1143   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1144   * \return channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1146  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1148  /** \brief Gets the configured master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1149   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1150   * \return configured master kernel index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1152  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1154  /** \brief Resets the ADC group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1155   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1156   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1158  IFX_INLINE void IfxVadc_resetGroup(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1160  /** \brief Sets analog converter group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1161   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1162   * \param analogConverterMode group analog converter mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1163   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1164   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1165  IFX_INLINE void IfxVadc_setAnalogConvertControl(Ifx_VADC_G *vadcG, IfxVadc_AnalogConverterMode analogConverterMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1167  /** \brief Sets the arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1168   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1169   * \param arbiterRoundLength arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1172  IFX_INLINE void IfxVadc_setArbitrationRoundLength(Ifx_VADC_G *vadcG, IfxVadc_ArbitrationRounds arbiterRoundLength);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1174  /** \brief Sets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1175   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1176   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1177   * \param resolution ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1178   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1180  IFX_INLINE void IfxVadc_setGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1182  /** \brief Sets the ADC input class sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1183   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1184   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1185   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1186   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1187   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1188   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1189  IFX_INLINE void IfxVadc_setGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1190  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1191  /** \brief Sets the master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1192   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1193   * \param masterIndex master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1194   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1195   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1196  IFX_INLINE void IfxVadc_setMasterIndex(Ifx_VADC_G *vadcG, uint8 masterIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1197  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1198  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1199  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1200  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1202  /** \brief Sets the Arbiter slot configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1203   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1204   * \param slotEnable enable/disable of slot.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1205   * \param prio channel request priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1206   * \param mode Channel Slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1207   * \param slot channel slot Request source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1208   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1210  IFX_EXTERN void IfxVadc_setArbiterPriority(Ifx_VADC_G *vadcG, boolean slotEnable, IfxVadc_RequestSlotPriority prio, IfxVadc_RequestSlotStartMode mode, IfxVadc_RequestSource slot);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1212  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1213  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1214  /** \addtogroup IfxLld_Vadc_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1215   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1217  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1218  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1219  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1221  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1222   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1225  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1226  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1227  /** \brief Enable VADC kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1228   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1231  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1233  /** \brief gets ADC Calibration Flag CAL status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1234   * \param vadc pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1235   * \param adcCalGroupNum ADC CAL group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1236   * \return CAL group status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1238  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1240  /** \brief Gets the global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1241   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1242   * \return global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1243   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1244  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1246  /** \brief get SUCAL bit field status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1247   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1248   * \return Indicate the start-up calibration phase
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1250  IFX_INLINE boolean IfxVadc_getStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1252  /** \brief initiates the calibration pulse phase.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1253   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1256  IFX_INLINE void IfxVadc_initiateStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1258  /** \brief Sets the channel conversion mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1259   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1260   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1261   * \param resolution ADC channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1264  IFX_INLINE void IfxVadc_setGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1266  /** \brief Sets the sample time of ADC global class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1267   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1268   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1269   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1270   * \param sampleTime the requested sample time for input class in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1271   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1272   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1273  IFX_INLINE void IfxVadc_setGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1275  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1276   * \param vadc pointer to VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1277   * \param mode mode selection (enable/disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1280  IFX_INLINE void IfxVadc_setSleepMode(Ifx_VADC *vadc, IfxVadc_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1282  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1283  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1284  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1286  /** \brief Disable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1287   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1288   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1289   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1290   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1291  IFX_EXTERN void IfxVadc_disableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1293  /** \brief Disables the post calibration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1294   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1295   * \param group Index of the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1296   * \param disable disable or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1299  IFX_EXTERN void IfxVadc_disablePostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group, boolean disable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1301  /** \brief Enable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1302   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1303   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1306  IFX_EXTERN void IfxVadc_enableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1308  /** \brief Enables the CCU6 based ADC group synchronisation as workaround for Erratum ADC_TC.068
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1309   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1310   * \param ccu6Num selects CCU60 or CCU61
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1311   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1313  IFX_EXTERN void IfxVadc_enableGroupSync(Ifx_VADC *vadc, uint32 ccu6Num);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1315  /** \brief Module Frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1316   * \return Module Frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1318  IFX_EXTERN float32 IfxVadc_getAdcModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1320  /** \brief Gives the SRC source address.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1321   * \param group Index of the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1322   * \param index SRC number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1323   * \return SRC source address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1325  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxVadc_getSrcAddress(IfxVadc_GroupId group, IfxVadc_SrcNr index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1327  /** \brief Initialises ADC arbiter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1328   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1329   * \param arbiterClockDivider ADC arbiter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1330   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1331   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1332  IFX_EXTERN void IfxVadc_initialiseAdcArbiterClock(Ifx_VADC *vadc, uint32 arbiterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1334  /** \brief Initialises the ADC Converter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1335   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1336   * \param converterClockDivider ADC converter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1339  IFX_EXTERN void IfxVadc_initialiseAdcConverterClock(Ifx_VADC *vadc, uint32 converterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1341  /** \brief Configure the FadcD vadc digital clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1342   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1343   * \param fAdcD ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1344   * \return calculated ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1346  IFX_EXTERN uint32 IfxVadc_initializeFAdcD(Ifx_VADC *vadc, uint32 fAdcD);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1348  /** \brief Configure the ADC analog clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1349   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1350   * \param fAdcI ADC analog clock clock frequency in Hz. Range = [5000000, 10000000].
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1351   * \return ADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1352   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1353  IFX_EXTERN uint32 IfxVadc_initializeFAdcI(Ifx_VADC *vadc, uint32 fAdcI);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1355  /** \brief Return the post calibration status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1356   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1357   * \param group specifies Group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1358   * \return TRUE if the post calibration is enabled for the group else false
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1359   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1360  IFX_EXTERN boolean IfxVadc_isPostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1361  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1362  /** \brief Resets the kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1363   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1364   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1366  IFX_EXTERN void IfxVadc_resetKernel(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1368  /** \brief Select Low Power Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1369   * \param vadc Pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1370   * \param supplyVoltage Select Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1373  IFX_EXTERN void IfxVadc_selectPowerSupplyVoltage(Ifx_VADC *vadc, IfxVadc_LowSupplyVoltageSelect supplyVoltage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1375  /** \brief Starts ADC calibration and wait for the end of the calibration process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1376   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1377   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1379  IFX_EXTERN void IfxVadc_startupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1381  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1382  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1383  /** \addtogroup IfxLld_Vadc_Std_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1384   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1386  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1387  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1388  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1389  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1390  /** \brief Clears the channel request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1391   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1392   * \param channelId channel id whose request to be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1393   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1394   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1395  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1397  /** \brief Enables the FIFO mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1398   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1399   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1400   * \param fifoMode FIFO mode .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1401   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1402   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1403  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1405  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1406   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1407   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1410  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1412  /** \brief Gets the group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1413   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1414   * \return group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1416  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1418  /** \brief Gets the current ADC channel control configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1419   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1420   * \param channelIndex ADC channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1421   * \return current ADC channel control configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1422   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1423  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1425  /** \brief Gets the channel input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1426   * \param vadcG pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1427   * \param channelIndex specifies channel ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1428   * \return Input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1429   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1430  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1431  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1432  /** \brief Gets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1433   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1434   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1435   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1437  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1439  /** \brief Gets the ADC input class channel sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1440   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1441   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1442   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1443   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1444   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1445  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1446  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1447  /** \brief Sets the channels with low priority as background channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1448   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1449   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1452  IFX_INLINE void IfxVadc_setBackgroundPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1454  /** \brief Sets the target for result background source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1455   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1456   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1457   * \param globalResultUsage whether storage in global result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1458   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1459   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1460  IFX_INLINE void IfxVadc_setBackgroundResultTarget(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean globalResultUsage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1462  /** \brief Selects boundary extension.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1463   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1464   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1465   * \param boundaryMode boundary extension mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1466   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1468  IFX_INLINE void IfxVadc_setBoundaryMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundaryExtension boundaryMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1470  /** \brief Sets the channel event service request line.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1471   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1472   * \param channelSrcNr channel event Service Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1473   * \param channel channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1475   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1476  IFX_INLINE void IfxVadc_setChannelEventNodePointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1477  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1478  /** \brief Sets the channel input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1479   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1480   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1481   * \param inputClass group input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1482   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1483   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1484  IFX_INLINE void IfxVadc_setChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_InputClasses inputClass);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1486  /** \brief Sets the channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1487   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1488   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1489   * \param limitCheck channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1490   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1491   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1492  IFX_INLINE void IfxVadc_setChannelLimitCheckMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_LimitCheck limitCheck);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1493  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1494  /** \brief Sets channel as priority channel with in the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1495   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1496   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1499  IFX_INLINE void IfxVadc_setGroupPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1501  /** \brief Sets group's lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1502   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1503   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1504   * \param lowerBoundary group lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1505   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1506   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1507  IFX_INLINE void IfxVadc_setLowerBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection lowerBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1509  /** \brief Selects the refernce input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1510   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1511   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1512   * \param reference reference input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1513   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1514   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1515  IFX_INLINE void IfxVadc_setReferenceInput(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelReference reference);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1516  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1517  /** \brief Sets result event node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1518   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1519   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1520   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1521   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1522   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1523  IFX_INLINE void IfxVadc_setResultNodeEventPointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1524  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1525  /** \brief Sets result event node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1526   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1527   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1528   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1529   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1530   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1531  IFX_INLINE void IfxVadc_setResultNodeEventPointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1532  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1533  /** \brief Sets result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1534   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1535   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1536   * \param rightAlignedStorage result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1537   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1538   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1539  IFX_INLINE void IfxVadc_setResultPosition(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean rightAlignedStorage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1540  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1541  /** \brief Sets channel synchronization request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1542   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1543   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1544   * \param synchonize whether channel synchronize or stand alone operation.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1547  IFX_INLINE void IfxVadc_setSyncRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean synchonize);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1549  /** \brief Sets group's upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1550   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1551   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1552   * \param upperBoundary group upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1553   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1555  IFX_INLINE void IfxVadc_setUpperBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection upperBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1557  /** \brief Sets the group result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1558   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1559   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1560   * \param resultRegister result register for group result storage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1561   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1562   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1563  IFX_INLINE void IfxVadc_storeGroupResult(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1566  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1569  /** \brief get channel conversion timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1570   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1571   * \param group specifies the Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1572   * \param inputClass Input class used
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1573   * \param analogFrequency ADC module analog frequency fadci in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1574   * \param moduleFrequency ADC module frequency fvadc in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1575   * \param conversionMode specifies the conversion mode (Standard conversion mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1576   * \return Channel conversion Time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1577   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1578  IFX_EXTERN float32 IfxVadc_getChannelConversionTime(Ifx_VADC *vadc, IfxVadc_GroupId group, IfxVadc_InputClasses inputClass, float32 analogFrequency, float32 moduleFrequency, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1579  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1580  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1581  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1582  /** \addtogroup IfxLld_Vadc_Std_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1583   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1584  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1585  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1586  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1587  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1589  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1590   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1591   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1592   * \return External channel resolution for global input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1593   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1594  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1595  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1596  /** \brief Get the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1597   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1598   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1599   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1600   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1601   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1602  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1603  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1604  /** \brief get the external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1605   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1606   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1607   * \return Adc input class External channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1608   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1609  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1610  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1611  /** \brief Gets the ADC input class sample time of external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1612   * \param vadcG Pointer to Register Group space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1613   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1614   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1615   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1616   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1617  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1618  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1619  /** \brief set the external channel resolution of Global class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1620   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1621   * \param inputClassNum Global Input Class Number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1622   * \param resolution External Channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1623   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1624   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1625  IFX_INLINE void IfxVadc_setEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1627  /** \brief Sets the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1628   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1629   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1630   * \param analogFrequency ADC analog Frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1631   * \param sampleTime the requested sample time for input class in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1632   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1633   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1634  IFX_INLINE void IfxVadc_setEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1636  /** \brief set the external channel resolution of ADC input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1637   * \param vadcG pointer to VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1638   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1639   * \param resolution input class external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1640   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1641   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1642  IFX_INLINE void IfxVadc_setEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1643  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1644  /** \brief Sets the ADC input class sample time for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1645   * \param vadcG Pointer to VADC Group Register Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1646   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1647   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1648   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1651  IFX_INLINE void IfxVadc_setEmuxGroupSampletime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1653  /** \brief Sets the Emux Interface for a particular group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1654   * \param vadc Pointer to VADC Module Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1655   * \param emuxInterface specifies the EmuxInterface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1656   * \param group specifies the group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1657   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1658   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1659  IFX_INLINE void IfxVadc_setEmuxInterfaceForGroup(Ifx_VADC *vadc, IfxVadc_EmuxInterface emuxInterface, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1660  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1661  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1662  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1663  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1665  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1666   * \param vadc pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1667   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1668   * \param mode External Multiplexer mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1669   * \param channels Specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1670   * \param startChannel specifies the external channel value from which conversion to be carried out
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1671   * \param code Output the channel number in binary code/gray code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1672   * \param sampleTimeControl specifies when to use a sample time for external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1673   * \param channelSelectionStyle External Multiplexer Channel Selection Style
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1674   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1675   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1676  IFX_EXTERN void IfxVadc_configExternalMultiplexerMode(Ifx_VADC *vadc, Ifx_VADC_G *vadcG, IfxVadc_ExternalMultiplexerMode mode, uint8 channels, IfxVadc_EmuxSelectValue startChannel, IfxVadc_EmuxCodingScheme code, IfxVadc_EmuxSampleTimeControl sampleTimeControl, IfxVadc_ChannelSelectionStyle channelSelectionStyle);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1677  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1678  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1679  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1680  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1681  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1682  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1684  /** \brief get channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1685   * \param vadcG Pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1686   * \return channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1687   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1688  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1689  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1690  /** \brief set channel event node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1691   * \param vadcG Pointer to the Vadc group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1692   * \param channelSrcNr Service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1693   * \param channel specifies channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1694   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1695   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1696  IFX_INLINE void IfxVadc_setChannelEventNodePointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1697  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1698  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1699  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1700  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1701  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1702  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1703  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1704      group->QINR0.U = channel | options;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1705  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1707  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1708  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1709  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1710      uint32 ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1711  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1712      ticks = (uint32)(sampleTime * analogFrequency) - 2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1713  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1714      if (ticks > 31)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1715      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1716          ticks = (ticks / 16) + 15;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1717      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1719      ticks = __minu(ticks, 0xFFu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1720  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1721      return ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1722  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1723  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1724  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1725  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1726  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1727      vadcG->REFCLR.U = 0x0000FFFFu;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1728  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1729  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1731  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1732  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1733      vadcG->CEFCLR.U = 1 << channelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1734  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1735  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1737  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1738  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1739      vadcG->QMR0.B.FLUSH = flushQueue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1740  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1741  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1742  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1743  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1744  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1745      group->RCR[resultIdx].B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1746  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1747  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1748  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1749  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1750  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1751      vadc->GLOBRCR.B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1752  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1753  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1754  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1755  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1756  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1757      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1758      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1759      vadc->CLC.B.DISR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1760      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1761  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1762  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1763  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1764  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1765  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1766      vadcG->QMR0.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1767  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1768  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1770  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1771  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1772      vadcG->ASMR.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1773  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1774  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1775  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1776  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1777  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1778      vadc->BRSMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1779  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1782  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1783  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1784      vadcG->RCR[resultRegister].B.FEN = fifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1785  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1787  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1788  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1789  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1790      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1792      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1793      vadc->CLC.U = 0x00000000;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1794      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1795  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1796  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1798  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1799  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1800      vadcG->QMR0.B.ENTR = 1;     /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1801  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1802  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1804  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1805  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1806      vadcG->ASMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1807  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1808  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1810  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1811  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1812      vadcG->RCR[resultRegister].B.SRGEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1813  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1816  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1817  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1818      uint8 status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1819      status = vadc->G[adcCalGroupNum].ARBCFG.B.CAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1820      return status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1821  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1823  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1824  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1825  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1826      return (IfxVadc_ArbitrationRounds)vadcG->ARBCFG.B.ARBRND;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1827  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1828  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1830  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1831  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1832      Ifx_VADC_G_CHASS assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1833      assignChannels.U = vadcG->CHASS.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1834      return assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1835  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1838  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1839  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1840      return (IfxVadc_GatingMode)vadc->BRSMR.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1841  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1844  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1845  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1846      return (IfxVadc_GatingSource)vadc->BRSCTRL.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1847  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1850  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1851  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1852      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1853  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1856  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1857  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1858      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1859  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1862  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1863  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1864      return (IfxVadc_TriggerSource)vadc->BRSCTRL.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1865  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1867  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1868  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1869  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1870      return (IfxVadc_TriggerMode)vadc->BRSCTRL.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1871  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1874  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1875  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1876      Ifx_VADC_CHCTR tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1877      tempChctr.U = vadcG->CHCTR[channelIndex].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1878      return tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1879  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1881  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1882  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1883  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1884      return (IfxVadc_InputClasses)vadcG->CHCTR[channelIndex].B.ICLSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1885  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1886  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1888  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1889  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1890      Ifx_VADC_G_REVNP0 resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1891      resultServiceRequestNodePtr0.U = vadcG->REVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1892      return resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1893  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1895  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1896  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1897  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1898      Ifx_VADC_G_REVNP1 resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1899      resultServiceRequestNodePtr1.U = vadcG->REVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1900      return resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1901  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1904  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1905  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1906      Ifx_VADC_G_CEVNP0 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1907      serviceRequestNodePtr.U = vadcG->CEVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1908      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1909  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1910  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1911  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1912  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1913  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1914      Ifx_VADC_G_CEVNP1 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1915      serviceRequestNodePtr.U = vadcG->CEVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1916      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1917  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1918  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1919  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1920  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1921  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1922      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1923  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1924  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1926  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1927  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1928      return (float32)(IFXVADC_SAMPLETIME_MIN + vadc->GLOBICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1929  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1930  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1931  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1932  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1933  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1934      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1935  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1937  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1938  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1939  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1940      return (float32)(IFXVADC_SAMPLETIME_MIN + vadcG->ICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1941  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1943  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1944  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1945  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1946      Ifx_VADC_GLOBCFG globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1947      globCfg.U = vadc->GLOBCFG.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1948      return globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1949  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1950  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1952  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1953  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1954      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1955  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1956  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1957  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1958  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1959  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1960      Ifx_VADC_GLOBRES tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1962      tmpGlobalResult.U = vadc->GLOBRES.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1963  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1964      return tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1965  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1966  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1967  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1968  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1969  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1970      uint32 sampleTime = vadc->GLOBICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1972      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1973      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1974          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1975      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1976  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1977      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1978  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1979  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1981  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1982  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1983      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1984  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1985  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1986  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1987  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1988  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1989      uint32 idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1990  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1991      for (idx = 0; idx < numResults; idx++)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1992      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1993          results[idx].U = group->RES[resultOffset + idx].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1994      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1995  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1996  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1997  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1998  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1999  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2000      uint32 sampleTime = vadcG->ICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2002      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2003      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2004          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2005      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2006  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2007      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2008  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2009  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2010  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2011  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2012  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2013      uint8 masterIndex = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2014      masterIndex = vadcG->SYNCTR.B.STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2015      return masterIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2016  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2017  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2019  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2020  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2021      return (IfxVadc_GatingMode)vadcG->QMR0.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2022  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2023  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2025  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2026  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2027      return (IfxVadc_GatingSource)vadcG->QCTRL0.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2028  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2031  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2032  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2033      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2034  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2036  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2037  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2038  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2039      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2040  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2041  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2043  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2044  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2045      return (IfxVadc_TriggerSource)vadcG->QCTRL0.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2046  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2047  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2049  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2050  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2051      return (IfxVadc_TriggerMode)vadcG->QCTRL0.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2052  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2055  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2056  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2057      Ifx_VADC_RES tmpResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2058  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2059      tmpResult.U = group->RES[resultIdx].U;
	addsc.a	a15,a15,d15,#2
.L177:
	ld.w	d15,[a15]640
.L140:
	extr.u	d0,d15,#24,#8
.L93:
	jz.t	d0:7,.L3
.L98:

; ..\APP\src\Vadc.c	    96  
; ..\APP\src\Vadc.c	    97      adc_voltage = conversionResult.B.RESULT;
	extr.u	d4,d15,#0,#16
	call	calc_batt_voltage
.L99:

; ..\APP\src\Vadc.c	    98      batt_voltage = calc_batt_voltage(adc_voltage);
	st.b	batt_voltage,d2
.L178:

; ..\APP\src\Vadc.c	    99  
; ..\APP\src\Vadc.c	   100  
; ..\APP\src\Vadc.c	   101  
; ..\APP\src\Vadc.c	   102  }
	ret
.L63:
	
__Adc_Scan_function_end:
	.size	Adc_Scan,__Adc_Scan_function_end-Adc_Scan
.L30:
	; End of function
	
	.sdecl	'.text.Vadc..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.Vadc..cocofun_5'
	.align	2
; Function .cocofun_5
.L12:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1229  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1230  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1232  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1233  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1234      return IfxVadc_getResultBasedOnRequestSource(group->module.vadc, group->group, channel, sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1235  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1237  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1238  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1239  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1240      return IfxVadc_getScanStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1241  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1244  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1245  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1246      return group->module.vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1247  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1250  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1252      IfxVadc_setBackgroundScan(vadc->vadc, group->groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1256  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1257  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1258      IfxVadc_setScan(group->group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1259  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1262  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1263  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1264      IfxVadc_startBackgroundScan(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1265  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1266  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1268  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1269  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1270      IfxVadc_startQueue(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1271  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1272  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1274  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1275  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1276      IfxVadc_startScan(group->group);
	ld.a	a15,[a12]4
.L211:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     2   * \file IfxVadc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     3   * \brief VADC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    24   * \defgroup IfxLld_Vadc_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    25   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    26   * \defgroup IfxLld_Vadc_Std_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    27   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    28   * \defgroup IfxLld_Vadc_Std_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    29   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    30   * \defgroup IfxLld_Vadc_Std_QueueRequest Queue Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    31   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    32   * \defgroup IfxLld_Vadc_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    33   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    34   * \defgroup IfxLld_Vadc_Std_Frequency Frequency Calculation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    35   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    36   * \defgroup IfxLld_Vadc_Std_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    37   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    38   * \defgroup IfxLld_Vadc_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    39   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    40   * \defgroup IfxLld_Vadc_Std_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    41   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    42   * \defgroup IfxLld_Vadc_Std_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    43   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    46  #ifndef IFXVADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    47  #define IFXVADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    49  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    50  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    51  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    53  #include "_Impl/IfxVadc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    54  #include "_PinMap/IfxVadc_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    55  #include "IfxVadc_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    56  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    57  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    58  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    59  #include "IfxCcu6_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    60  #include "IfxCcu6_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    63  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    64  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    66  /** \addtogroup IfxLld_Vadc_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    67   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    68  /** \brief Defined in MODULE_VADC.G[x].ARBCFG.B.ANONS and ANONC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    69   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    70  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    71  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    72      IfxVadc_AnalogConverterMode_off             = 0, /**< \brief Analog Converter off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    73      IfxVadc_AnalogConverterMode_slowStandby     = 1, /**< \brief Slow Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    74      IfxVadc_AnalogConverterMode_fastStandby     = 2, /**< \brief Fast Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    75      IfxVadc_AnalogConverterMode_normalOperation = 3  /**< \brief Normal operation mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    76  } IfxVadc_AnalogConverterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    78  /** \brief Arbitration round length defined in MODULE_VADC.G[x].ARBCFG.ARBRND(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    82      IfxVadc_ArbitrationRounds_4_slots  = 0,  /**< \brief An arbitration round contains 4 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    83      IfxVadc_ArbitrationRounds_8_slots  = 1,  /**< \brief An arbitration round contains 8 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    84      IfxVadc_ArbitrationRounds_16_slots = 2,  /**< \brief An arbitration round contains 16 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    85      IfxVadc_ArbitrationRounds_20_slots = 3   /**< \brief An arbitration round contains 20 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    86  } IfxVadc_ArbitrationRounds;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    88  /** \brief Boundary Extension defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELX(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    89   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    90  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    91  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    92      IfxVadc_BoundaryExtension_standard            = 0,   /**< \brief Boundary Standard mode. BNDSELU/BNDSELL as Boundaries */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    93      IfxVadc_BoundaryExtension_fastCompareResult1  = 1,   /**< \brief Fast compare mode use as upper boundary  Channel result   1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    94      IfxVadc_BoundaryExtension_fastCompareResult2  = 2,   /**< \brief Fast compare mode use as upper boundary  Channel result   2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    95      IfxVadc_BoundaryExtension_fastCompareResult3  = 3,   /**< \brief Fast compare mode use as upper boundary  Channel result   3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    96      IfxVadc_BoundaryExtension_fastCompareResult4  = 4,   /**< \brief Fast compare mode use as upper boundary  Channel result   4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    97      IfxVadc_BoundaryExtension_fastCompareResult5  = 5,   /**< \brief Fast compare mode use as upper boundary  Channel result   5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    98      IfxVadc_BoundaryExtension_fastCompareResult6  = 6,   /**< \brief Fast compare mode use as upper boundary  Channel result   6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    99      IfxVadc_BoundaryExtension_fastCompareResult7  = 7,   /**< \brief Fast compare mode use as upper boundary  Channel result   7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   100      IfxVadc_BoundaryExtension_fastCompareResult8  = 8,   /**< \brief Fast compare mode use as upper boundary  Channel result   8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   101      IfxVadc_BoundaryExtension_fastCompareResult9  = 9,   /**< \brief Fast compare mode use as upper boundary  Channel result   9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   102      IfxVadc_BoundaryExtension_fastCompareResult10 = 10,  /**< \brief Fast compare mode use as upper boundary  Channel result  10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   103      IfxVadc_BoundaryExtension_fastCompareResult11 = 11,  /**< \brief Fast compare mode use as upper boundary  Channel result  11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   104      IfxVadc_BoundaryExtension_fastCompareResult12 = 12,  /**< \brief Fast compare mode use as upper boundary  Channel result  12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   105      IfxVadc_BoundaryExtension_fastCompareResult13 = 13,  /**< \brief Fast compare mode use as upper boundary  Channel result  13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   106      IfxVadc_BoundaryExtension_fastCompareResult14 = 14,  /**< \brief Fast compare mode use as upper boundary  Channel result  14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   107      IfxVadc_BoundaryExtension_fastCompareResult15 = 15   /**< \brief Fast compare mode use as upper boundary  Channel result  15 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   108  } IfxVadc_BoundaryExtension;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   110  /** \brief BoundarySel defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   112  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   113  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   114      IfxVadc_BoundarySelection_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   115      IfxVadc_BoundarySelection_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   116      IfxVadc_BoundarySelection_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   117      IfxVadc_BoundarySelection_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   118  } IfxVadc_BoundarySelection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   119  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   120  /** \brief VADC Channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   122  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   123  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   124      IfxVadc_ChannelId_none = -1,  /**< \brief None of VADC channels */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   125      IfxVadc_ChannelId_0    = 0,   /**< \brief Channel 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   126      IfxVadc_ChannelId_1    = 1,   /**< \brief Channel 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   127      IfxVadc_ChannelId_2    = 2,   /**< \brief Channel 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   128      IfxVadc_ChannelId_3    = 3,   /**< \brief Channel 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   129      IfxVadc_ChannelId_4    = 4,   /**< \brief Channel 4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   130      IfxVadc_ChannelId_5    = 5,   /**< \brief Channel 5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   131      IfxVadc_ChannelId_6    = 6,   /**< \brief Channel 6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   132      IfxVadc_ChannelId_7    = 7,   /**< \brief Channel 7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   133      IfxVadc_ChannelId_8    = 8,   /**< \brief Channel 8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   134      IfxVadc_ChannelId_9    = 9,   /**< \brief Channel 9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   135      IfxVadc_ChannelId_10   = 10,  /**< \brief Channel 10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   136      IfxVadc_ChannelId_11   = 11   /**< \brief Channel 11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   137  } IfxVadc_ChannelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   139  /** \brief ADC channel reference defined in MODULE_VADC.G[x].CHCTR[y].B.REFSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   140   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   141  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   142  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   143      IfxVadc_ChannelReference_standard = 0,  /**< \brief use Varef as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   144      IfxVadc_ChannelReference_channel0 = 1   /**< \brief use CH0 as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   145  } IfxVadc_ChannelReference;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   146  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   147  /** \brief ADC channel resolution defined in MODULE_VADC.G[x].CHCTR[y].B.ICLASS[y].B.CMS(x=0,1,...,11;y=0,1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   149  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   151      IfxVadc_ChannelResolution_12bit     = 0, /**< \brief 12-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   152      IfxVadc_ChannelResolution_10bit     = 1, /**< \brief 10-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   153      IfxVadc_ChannelResolution_8bit      = 2, /**< \brief 8-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   154      IfxVadc_ChannelResolution_10bitFast = 5  /**< \brief 10-bit cfast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   155  } IfxVadc_ChannelResolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   157  /** \brief Channel Result defined in MODULE_VADC.G[x].CHCTR[y].B.RESREG(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   161      IfxVadc_ChannelResult_0 = 0,      /**< \brief Use Channel result 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   162      IfxVadc_ChannelResult_1,          /**< \brief Use Channel result 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   163      IfxVadc_ChannelResult_2,          /**< \brief Use Channel result 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   164      IfxVadc_ChannelResult_3,          /**< \brief Use Channel result 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   165      IfxVadc_ChannelResult_4,          /**< \brief Use Channel result 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   166      IfxVadc_ChannelResult_5,          /**< \brief Use Channel result 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   167      IfxVadc_ChannelResult_6,          /**< \brief Use Channel result 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   168      IfxVadc_ChannelResult_7,          /**< \brief Use Channel result 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   169      IfxVadc_ChannelResult_8,          /**< \brief Use Channel result 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   170      IfxVadc_ChannelResult_9,          /**< \brief Use Channel result 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   171      IfxVadc_ChannelResult_10,         /**< \brief Use Channel result 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   172      IfxVadc_ChannelResult_11,         /**< \brief Use Channel result 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   173      IfxVadc_ChannelResult_12,         /**< \brief Use Channel result 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   174      IfxVadc_ChannelResult_13,         /**< \brief Use Channel result 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   175      IfxVadc_ChannelResult_14,         /**< \brief Use Channel result 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   176      IfxVadc_ChannelResult_15          /**< \brief Use Channel result 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   177  } IfxVadc_ChannelResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   179  /** \brief External Multiplexer Channel Selection Style as defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   180   * Ifx_VADC.G[x].EMUXCTR.B.EMXCSS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   181   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   182  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   184      IfxVadc_ChannelSelectionStyle_channelNumber = 0,  /**< \brief selects an arbitrary channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   185      IfxVadc_ChannelSelectionStyle_binary        = 1   /**< \brief Each bit of bitfield EMUXCH selects the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   186                                                         * associated channel for EMUX control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   187  } IfxVadc_ChannelSelectionStyle;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   189  /** \brief type of conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   193      IfxVadc_ConversionType_Compatible = 0  /**< \brief Compatible Timing Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   194  } IfxVadc_ConversionType;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   196  /** \brief Specifies the External Coding scheme(binary/gray)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   197   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXCOD
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   198   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   199  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   200  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   201      IfxVadc_EmuxCodingScheme_binary = 0,  /**< \brief Output the Channel Number in Binary code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   202      IfxVadc_EmuxCodingScheme_gray   = 1   /**< \brief Output the channel number in gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   203  } IfxVadc_EmuxCodingScheme;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   205  /** \brief Specifies the Emux interface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   209      IfxVadc_EmuxInterface_0 = 0,  /**< \brief Emux Interface 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   210      IfxVadc_EmuxInterface_1 = 1   /**< \brief Emux Interface 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   211  } IfxVadc_EmuxInterface;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   213  /** \brief External Multiplexer sample time control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   214   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXST
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   216  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   217  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   218      IfxVadc_EmuxSampleTimeControl_settingChanges = 0,  /**< \brief Use STCE Whenever Setting Changes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   219      IfxVadc_EmuxSampleTimeControl_always         = 1   /**< \brief Use STCE for each conversion of an external channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   220  } IfxVadc_EmuxSampleTimeControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   222  /** \brief specifies the External Channel Start select value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   223   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMUXSET
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   225  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   226  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   227      IfxVadc_EmuxSelectValue_0 = 0,      /**< \brief Start Selection Value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   228      IfxVadc_EmuxSelectValue_1,          /**< \brief Start Selection Value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   229      IfxVadc_EmuxSelectValue_2,          /**< \brief Start Selection Value 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   230      IfxVadc_EmuxSelectValue_3,          /**< \brief Start Selection Value 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   231      IfxVadc_EmuxSelectValue_4,          /**< \brief Start Selection Value 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   232      IfxVadc_EmuxSelectValue_5,          /**< \brief Start Selection Value 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   233      IfxVadc_EmuxSelectValue_6,          /**< \brief Start Selection Value 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   234      IfxVadc_EmuxSelectValue_7           /**< \brief Start Selection Value 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   235  } IfxVadc_EmuxSelectValue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   237  /** \brief Specifies External Multiplexer Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   238   * define in Ifx_VADC.G[x].EMUXCTR.B.EMUXMODE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   240  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   242      IfxVadc_ExternalMultiplexerMode_softwareControl = 0,  /**< \brief Disable The Emux Control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   243      IfxVadc_ExternalMultiplexerMode_steady          = 1,  /**< \brief select steady mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   244      IfxVadc_ExternalMultiplexerMode_singleStep      = 2,  /**< \brief Select single step mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   245      IfxVadc_ExternalMultiplexerMode_sequence        = 3   /**< \brief Select Sequence Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   246  } IfxVadc_ExternalMultiplexerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   248  /** \brief FIFO mode enable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   250  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   252      IfxVadc_FifoMode_seperateResultRegister = 0,  /**< \brief seperate Result Register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   253      IfxVadc_FifoMode_fifoStructure          = 1,  /**< \brief fifoStructure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   254      IfxVadc_FifoMode_maximumMode            = 2,  /**< \brief copy new result if bigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   255      IfxVadc_FifoMode_minimumMode            = 3   /**< \brief copy new result if it is smaller */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   256  } IfxVadc_FifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   258  /** \brief gating mode defined in MODULE_VADC.BRSMR.ENGT
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   260  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   261  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   262      IfxVadc_GatingMode_disabled   = 0,  /**< \brief Gating is disabled, no conversion request are issued */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   263      IfxVadc_GatingMode_always     = 1,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   264      IfxVadc_GatingMode_gatingHigh = 2,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   265      IfxVadc_GatingMode_gatingLow  = 3   /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is low */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   266  } IfxVadc_GatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   268  /** \brief External trigger gating defined in MODULE_VADC.G[x].QCTRLy.GTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   270  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   272      IfxVadc_GatingSource_0 = 0,      /**< \brief Input signal REQGTx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   273      IfxVadc_GatingSource_1,          /**< \brief Input signal REQGTx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   274      IfxVadc_GatingSource_2,          /**< \brief Input signal REQGTx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   275      IfxVadc_GatingSource_3,          /**< \brief Input signal REQGTx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   276      IfxVadc_GatingSource_4,          /**< \brief Input signal REQGTx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   277      IfxVadc_GatingSource_5,          /**< \brief Input signal REQGTx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   278      IfxVadc_GatingSource_6,          /**< \brief Input signal REQGTx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   279      IfxVadc_GatingSource_7,          /**< \brief Input signal REQGTx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   280      IfxVadc_GatingSource_8,          /**< \brief Input signal REQGTx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   281      IfxVadc_GatingSource_9,          /**< \brief Input signal REQGTx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   282      IfxVadc_GatingSource_10,         /**< \brief Input signal REQGTx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   283      IfxVadc_GatingSource_11,         /**< \brief Input signal REQGTx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   284      IfxVadc_GatingSource_12,         /**< \brief Input signal REQGTx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   285      IfxVadc_GatingSource_13,         /**< \brief Input signal REQGTx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   286      IfxVadc_GatingSource_14,         /**< \brief Input signal REQGTx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   287      IfxVadc_GatingSource_15          /**< \brief Input signal REQGTx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   288  } IfxVadc_GatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   290  /** \brief inputClass defined in MODULE_VADC.G[x].CHCTR[y].B.ICLSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   292  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   293  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   294      IfxVadc_InputClasses_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   295      IfxVadc_InputClasses_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   296      IfxVadc_InputClasses_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   297      IfxVadc_InputClasses_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   298  } IfxVadc_InputClasses;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   300  /** \brief ADC channel limit check defined in MODULE_VADC.G[x].CHCTR[y].B.CHEVMODE(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   301   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   302  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   303  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   304      IfxVadc_LimitCheck_noCheck            = 0,  /**< \brief Normal compare mode Event Never Fast Compare mode Event Never */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   305      IfxVadc_LimitCheck_eventIfInArea      = 1,  /**< \brief Normal compare mode Event If result is inside the boundary band    Fast Compare mode Event If result switches to high (above comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   306      IfxVadc_LimitCheck_eventIfOutsideArea = 2,  /**< \brief Normal compare mode Event If result is outside the boundary band   Fast Compare mode Event If result switches to low (below comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   307      IfxVadc_LimitCheck_always             = 3   /**< \brief Normal compare mode Event Always   Fast Compare mode Event Always */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   308  } IfxVadc_LimitCheck;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   310  /** \brief Low Power Supply Voltage Select
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   312  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   314      IfxVadc_LowSupplyVoltageSelect_5V = 0,  /**< \brief 5V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   315      IfxVadc_LowSupplyVoltageSelect_3V = 1   /**< \brief 3.3V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   316  } IfxVadc_LowSupplyVoltageSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   318  /** \brief Access protection for Group registers defined in MODULE_VADC.ACCPROT0.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   319   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   320  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   321  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   322      IfxVadc_Protection_channelControl0       = 0,   /**< \brief Access control for GxCHCTR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   323      IfxVadc_Protection_channelControl1       = 1,   /**< \brief Access control for GxCHCTR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   324      IfxVadc_Protection_channelControl2       = 2,   /**< \brief Access control for GxCHCTR2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   325      IfxVadc_Protection_channelControl3       = 3,   /**< \brief Access control for GxCHCTR3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   326      IfxVadc_Protection_channelControl4       = 4,   /**< \brief Access control for GxCHCTR4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   327      IfxVadc_Protection_channelControl5       = 5,   /**< \brief Access control for GxCHCTR5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   328      IfxVadc_Protection_channelControl6       = 6,   /**< \brief Access control for GxCHCTR6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   329      IfxVadc_Protection_channelControl7       = 7,   /**< \brief Access control for GxCHCTR7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   330      IfxVadc_Protection_channelControl8       = 8,   /**< \brief Access control for GxCHCTR8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   331      IfxVadc_Protection_channelControl9       = 9,   /**< \brief Access control for GxCHCTR9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   332      IfxVadc_Protection_channelControl10      = 10,  /**< \brief Access control for GxCHCTR10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   333      IfxVadc_Protection_channelControl11      = 11,  /**< \brief Access control for GxCHCTR11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   334      IfxVadc_Protection_channelControl12      = 12,  /**< \brief Access control for GxCHCTR12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   335      IfxVadc_Protection_channelControl13      = 13,  /**< \brief Access control for GxCHCTR13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   336      IfxVadc_Protection_channelControl14      = 14,  /**< \brief Access control for GxCHCTR14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   337      IfxVadc_Protection_externalMultiplexer   = 15,  /**< \brief Access control for EMUXSEL, GxEMUXCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   338      IfxVadc_Protection_initGroup0            = 16,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   339      IfxVadc_Protection_initGroup1            = 17,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   340      IfxVadc_Protection_initGroup2            = 18,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   341      IfxVadc_Protection_initGroup3            = 19,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   342      IfxVadc_Protection_initGroup4            = 20,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   343      IfxVadc_Protection_initGroup5            = 21,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   344      IfxVadc_Protection_initGroup6            = 22,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   345      IfxVadc_Protection_initGroup7            = 23,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   346      IfxVadc_Protection_initGroup8            = 24,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   347      IfxVadc_Protection_initGroup9            = 25,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   348      IfxVadc_Protection_initGroup10           = 26,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   349      IfxVadc_Protection_initGroup11           = 27,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   350      IfxVadc_Protection_initGroup12           = 28,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   351      IfxVadc_Protection_initGroup13           = 29,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   352      IfxVadc_Protection_initGroup14           = 30,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   353      IfxVadc_Protection_globalConfig          = 31,  /**< \brief Access control for GLOBCFG */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   354      IfxVadc_Protection_serviceGroup0         = 32,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   355      IfxVadc_Protection_serviceGroup1         = 33,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   356      IfxVadc_Protection_serviceGroup2         = 34,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   357      IfxVadc_Protection_serviceGroup3         = 35,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   358      IfxVadc_Protection_serviceGroup4         = 36,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   359      IfxVadc_Protection_serviceGroup5         = 37,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   360      IfxVadc_Protection_serviceGroup6         = 38,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   361      IfxVadc_Protection_serviceGroup7         = 39,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   362      IfxVadc_Protection_serviceGroup8         = 40,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   363      IfxVadc_Protection_serviceGroup9         = 41,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   364      IfxVadc_Protection_serviceGroup10        = 42,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   365      IfxVadc_Protection_serviceGroup11        = 43,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   366      IfxVadc_Protection_serviceGroup12        = 44,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   367      IfxVadc_Protection_serviceGroup13        = 45,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   368      IfxVadc_Protection_serviceGroup14        = 46,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   369      IfxVadc_Protection_testFunction          = 47,  /**< \brief Access control for GLOBTF */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   370      IfxVadc_Protection_resultRegisterGroup0  = 48,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   371      IfxVadc_Protection_resultRegisterGroup1  = 49,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   372      IfxVadc_Protection_resultRegisterGroup2  = 50,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   373      IfxVadc_Protection_resultRegisterGroup3  = 51,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   374      IfxVadc_Protection_resultRegisterGroup4  = 52,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   375      IfxVadc_Protection_resultRegisterGroup5  = 53,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   376      IfxVadc_Protection_resultRegisterGroup6  = 54,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   377      IfxVadc_Protection_resultRegisterGroup7  = 55,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   378      IfxVadc_Protection_resultRegisterGroup8  = 56,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   379      IfxVadc_Protection_resultRegisterGroup9  = 57,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   380      IfxVadc_Protection_resultRegisterGroup10 = 58,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   381      IfxVadc_Protection_resultRegisterGroup11 = 59,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   382      IfxVadc_Protection_resultRegisterGroup12 = 60,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   383      IfxVadc_Protection_resultRegisterGroup13 = 61,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   384      IfxVadc_Protection_resultRegisterGroup14 = 62   /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   385  } IfxVadc_Protection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   387  /** \brief Arbitration priority, Group x,defined in MODULE_VADC.G[x].ARBPR.PRIOy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   389  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   390  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   391      IfxVadc_RequestSlotPriority_lowest  = 0, /**< \brief Lowest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   392      IfxVadc_RequestSlotPriority_low     = 1, /**< \brief Lowpriority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   393      IfxVadc_RequestSlotPriority_high    = 2, /**< \brief High priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   394      IfxVadc_RequestSlotPriority_highest = 3  /**< \brief Highest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   395  } IfxVadc_RequestSlotPriority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   397  /** \brief Request source start mode defined in MODULE_VADC.G[x].ARBPR.CSMy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   398   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   399  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   400  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   401      IfxVadc_RequestSlotStartMode_waitForStart       = 0, /**< \brief Wait for start */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   402      IfxVadc_RequestSlotStartMode_cancelInjectRepeat = 1  /**< \brief Cancel-Inject-Repeat */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   403  } IfxVadc_RequestSlotStartMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   405  /** \brief Request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   406   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   407  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   408  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   409      IfxVadc_RequestSource_queue      = 0, /**< \brief 8 stage Queue request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   410      IfxVadc_RequestSource_scan       = 1, /**< \brief scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   411      IfxVadc_RequestSource_background = 2  /**< \brief background scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   412  } IfxVadc_RequestSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   414  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   415   * Definition in Ifx_VADC.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   417  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   419      IfxVadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   420      IfxVadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   421  } IfxVadc_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   423  /** \brief Service Node defined in MODULE_VADC.G[x].SRACT.U(x= 0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   425  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   426  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   427      IfxVadc_SrcNr_group0  = 0,  /**< \brief service request line 0 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   428      IfxVadc_SrcNr_group1  = 1,  /**< \brief service request line 1 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   429      IfxVadc_SrcNr_group2  = 2,  /**< \brief service request line 2 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   430      IfxVadc_SrcNr_group3  = 3,  /**< \brief service request line 3 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   431      IfxVadc_SrcNr_shared0 = 4,  /**< \brief Select shared service request line 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   432      IfxVadc_SrcNr_shared1 = 5,  /**< \brief Select shared service request line 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   433      IfxVadc_SrcNr_shared2 = 6,  /**< \brief Select shared service request line 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   434      IfxVadc_SrcNr_shared3 = 7   /**< \brief Select shared service request line 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   435  } IfxVadc_SrcNr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   437  /** \brief API return values defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   438   * MODULE_VADC.G[x].QSR0.U,MODULE_VADC.G[x].ASPND.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   439   * MODULE_VADC.BRSPND[x](x=0,1,...,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   440   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   441  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   442  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   443      IfxVadc_Status_noError              = 0, /**< \brief No error during api execution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   444      IfxVadc_Status_notInitialised       = 1, /**< \brief Appropriate initialisation not done */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   445      IfxVadc_Status_invalidGroup         = 2, /**< \brief Invalid group number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   446      IfxVadc_Status_invalidChannel       = 3, /**< \brief Invalid channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   447      IfxVadc_Status_queueFull            = 4, /**< \brief Queue is full */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   448      IfxVadc_Status_noAccess             = 5, /**< \brief Access to the group/channel is disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   449      IfxVadc_Status_channelsStillPending = 6  /**< \brief Conversion for some of the channels are still pending */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   450  } IfxVadc_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   452  /** \brief trigger definition defined in MODULE_VADC.G[x].QCTRL0.XTMODE(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   453   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   454  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   455  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   456      IfxVadc_TriggerMode_noExternalTrigger = 0,  /**< \brief No external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   457      IfxVadc_TriggerMode_uponFallingEdge   = 1,  /**< \brief Trigger event upon a falling edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   458      IfxVadc_TriggerMode_uponRisingEdge    = 2,  /**< \brief Trigger event upon a rising edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   459      IfxVadc_TriggerMode_uponAnyEdge       = 3   /**< \brief Trigger event upon any edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   460  } IfxVadc_TriggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   462  /** \brief Trigger request source defined in MODULE_VADC.G[x].QCTRLy.XTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   463   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   464  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   466      IfxVadc_TriggerSource_0 = 0,      /**< \brief Input signal REQTRx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   467      IfxVadc_TriggerSource_1,          /**< \brief Input signal REQTRx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   468      IfxVadc_TriggerSource_2,          /**< \brief Input signal REQTRx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   469      IfxVadc_TriggerSource_3,          /**< \brief Input signal REQTRx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   470      IfxVadc_TriggerSource_4,          /**< \brief Input signal REQTRx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   471      IfxVadc_TriggerSource_5,          /**< \brief Input signal REQTRx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   472      IfxVadc_TriggerSource_6,          /**< \brief Input signal REQTRx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   473      IfxVadc_TriggerSource_7,          /**< \brief Input signal REQTRx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   474      IfxVadc_TriggerSource_8,          /**< \brief Input signal REQTRx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   475      IfxVadc_TriggerSource_9,          /**< \brief Input signal REQTRx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   476      IfxVadc_TriggerSource_10,         /**< \brief Input signal REQTRx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   477      IfxVadc_TriggerSource_11,         /**< \brief Input signal REQTRx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   478      IfxVadc_TriggerSource_12,         /**< \brief Input signal REQTRx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   479      IfxVadc_TriggerSource_13,         /**< \brief Input signal REQTRx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   480      IfxVadc_TriggerSource_14,         /**< \brief Input signal REQTRx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   481      IfxVadc_TriggerSource_15          /**< \brief Input signal REQTRx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   482  } IfxVadc_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   484  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   486  /** \addtogroup IfxLld_Vadc_Std_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   487   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   489  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   490  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   491  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   492  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   493  /** \brief access function to enable/disable  wait for read mode for result registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   494   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   495   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   496   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   499  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   501  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   502   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   503   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   504   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   505   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   506  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   508  /** \brief Enables the background sacn external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   509   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   510   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   511   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   512  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   514  /** \brief Gets the background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   515   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   516   * \return background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   518  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   520  /** \brief Gets the gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   521   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   522   * \return background scan gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   523   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   524  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   526  /** \brief Gets the requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   527   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   528   * \return requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   529   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   530  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   532  /** \brief Gets the requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   533   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   534   * \return requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   535   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   536  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   537  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   538  /** \brief Gets the background scan trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   539   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   540   * \return Gets the background scan external trigger source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   541   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   542  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   543  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   544  /** \brief Gets the background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   545   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   546   * \return background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   547   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   548  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   549  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   550  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   551   * \param vadc Pointer to the VADC Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   552   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   553   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   555  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   557  /** \brief return conversion result stored in the Global result Register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   558   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   559   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   560   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   561   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   562   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   563   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   564   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   565   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   567   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   568   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   569   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   570   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   571   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   572   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   573   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   574   * IfxVadc_SetAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   575   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   576   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   577   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   579   * Ifx_VADC_GLOBRES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   580   * result = IfxVadc_getGlobalResult (vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   582   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   583   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   584   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   585  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   586  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   587  /** \brief get global input class sample time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   588   * \param vadc Pointer to the VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   589   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   590   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   591   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   592   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   593  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   594  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   595  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   596   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   597   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   598   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   599   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   600   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   601   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   602   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   603   * Ifx_VADC* vadc = &MODULE_VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   604   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   605   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   606   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   607   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   608   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   609   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   610   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   611   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   612   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   613   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   614   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   615   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   616   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   617   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   618   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   619   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   620   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   621   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   622   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   623   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   624   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   625   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   626   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   627   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   628   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   629  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   630  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   631  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   632   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   633   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   634   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   635   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   636   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   637   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   638   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   639   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   640   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   641   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   642   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   643   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   644   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   645   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   646   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   647   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   648   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   649   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   650   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   651   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   652   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   653   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   654   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   655   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   656   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   657   * // fetch the result of conversion from result register 0 for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   658   * Ifx_VADC_RES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   659   * result = IfxVadc_getResult(group, IfxVadc_ChannelResult0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   660   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   661   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   662   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   663  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   665  /** \brief Returns the auto background scan status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   666   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   667   * \return TRUE if enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   668   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   669  IFX_INLINE boolean IfxVadc_isAutoBackgroundScanEnabled(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   671  /** \brief Returns the background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   672   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   673   * \return background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   675  IFX_INLINE boolean IfxVadc_isRequestBackgroundScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   677  /** \brief Enables/Disables continuous background auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   678   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   679   * \param autoBackgroundScanEnable whether auto background scan enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   680   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   681   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   682  IFX_INLINE void IfxVadc_setAutoBackgroundScan(Ifx_VADC *vadc, boolean autoBackgroundScanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   684  /** \brief configures a background scan; can also stop autoscan if all channels are 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   685   * \param vadc pointer to the VADC module registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   686   * \param groupId group index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   687   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   688   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   689   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   691   * Background scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   692   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   693   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   694   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   695   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   696   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   697   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   698   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   699   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   700   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   701   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   702   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   703   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   704   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   705   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   706   * IfxVadc_setAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   707   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   708   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   709   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   710   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   711   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   712   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   713  IFX_INLINE void IfxVadc_setBackgroundScan(Ifx_VADC *vadc, IfxVadc_GroupId groupId, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   715  /** \brief Sets the background scan slot gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   716   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   717   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   718   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   719   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   720   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   721  IFX_INLINE void IfxVadc_setBackgroundScanSlotGatingConfig(Ifx_VADC *vadc, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   722  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   723  /** \brief Sets the background scan exteranal trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   724   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   725   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   726   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   727   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   728   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   729  IFX_INLINE void IfxVadc_setBackgroundScanSlotTriggerConfig(Ifx_VADC *vadc, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   731  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   732   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   733   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   734   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   735   * \see IfxVadc_setBackgroundScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   736   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   737   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   738  IFX_INLINE void IfxVadc_startBackgroundScan(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   739  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   740  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   741  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   742  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   743  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   744  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   745   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   746   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   747   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   748  IFX_EXTERN IfxVadc_Status IfxVadc_getBackgroundScanStatus(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   750  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   751   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   752   * \param vadc VADC module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   753   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   754   * \param channel channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   755   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   756   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   757   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   758   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   759   * Ifx_VADC vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   760   * vadc.vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   761   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   762   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   763   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   764   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   765   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   766   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   767   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   768   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   769   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   770   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   771   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   772   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   773   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   774   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   775   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   776   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   777   * // fetch the result of conversion for channel 2 of group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   778   * Ifx_VADC_RESresult2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   779   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   780   * Ifx_VADC_RESresult5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   781   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId5, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   782   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   783   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   785  IFX_EXTERN Ifx_VADC_RES IfxVadc_getResultBasedOnRequestSource(Ifx_VADC *vadc, Ifx_VADC_G *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   787  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   789  /** \addtogroup IfxLld_Vadc_Std_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   790   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   792  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   793  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   795  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   796  /** \brief Disables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   797   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   798   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   799   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   800  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   801  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   802  /** \brief Enables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   803   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   806  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   808  /** \brief Gets the request scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   809   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   810   * \return requested scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   811   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   812  IFX_INLINE IfxVadc_GatingMode IfxVadc_getScanSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   813  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   814  /** \brief Gets the request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   815   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   816   * \return request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   818  IFX_INLINE IfxVadc_GatingSource IfxVadc_getScanSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   820  /** \brief Gets the request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   821   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   822   * \return request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   823   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   824  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   825  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   826  /** \brief Gets the request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   827   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   828   * \return request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   829   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   830  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   832  /** \brief Gets the requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   833   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   834   * \return requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   835   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   836  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getScanSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   838  /** \brief Gets the requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   839   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   840   * \return requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   841   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   842  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getScanSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   844  /** \brief Gets the auto scan enable status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   845   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   846   * \return TRUE if auto scan enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   847   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   848  IFX_INLINE boolean IfxVadc_isAutoScanEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   850  /** \brief Returns the scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   851   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   852   * \return TRUE if scan slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   853   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   854  IFX_INLINE boolean IfxVadc_isRequestScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   856  /** \brief Enables/Disables continuous auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   857   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   858   * \param autoscanEnable whether autoscan is enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   859   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   860   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   861  IFX_INLINE void IfxVadc_setAutoScan(Ifx_VADC_G *vadcG, boolean autoscanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   862  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   863  /** \brief Sets the scan slot gating configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   864   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   865   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   866   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   867   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   868   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   869  IFX_INLINE void IfxVadc_setScanSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   870  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   871  /** \brief Sets the scan slot trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   872   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   873   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   874   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   875   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   877  IFX_INLINE void IfxVadc_setScanSlotTriggerConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   879  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   880   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   881   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   882   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   883   * See \ref IfxVadc_setScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   884   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   886  IFX_INLINE void IfxVadc_startScan(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   888  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   889  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   890  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   891  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   892  /** \brief Gives the scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   893   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   894   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   895   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   896  IFX_EXTERN IfxVadc_Status IfxVadc_getScanStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   897  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   898  /** \brief Configures an (auto-)scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   899   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   900   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   901   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   902   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   903   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   904   * (Auto-)Scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   905   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   906   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   907   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   908   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   909   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   910   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   911   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   912   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   913   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   914   * // enable Auto-Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   915   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   916   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   917   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   918   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   919   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   920   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   922  IFX_EXTERN void IfxVadc_setScan(Ifx_VADC_G *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   924  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   926  /** \addtogroup IfxLld_Vadc_Std_QueueRequest
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   927   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   929  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   930  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   931  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   932  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   933  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   934   * refill incase of aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   935   * source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   936   * external trigger control of the aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   937   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   938   * \param channel specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   939   * \param options specifies the refill, source interrupt enable/disable and external trigger control selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   940   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   941   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   942   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   944   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   945   * IfxVadc_ChannelId channel = 1; // for channel 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   946   * // Add channel 1 to queue of group 0 with the refill turned on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   947   * IfxVadc_addToQueue(qroup, channel, (1<<IFX_VADC_G_QBUR0_RF_OFF));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   948   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   949   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   950   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   951  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   952  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   953  /** \brief Clears all the queue entries including backup stage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   954   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   955   * \param flushQueue Whether queue is cleared or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   956   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   957   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   958  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   959  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   960  /** \brief Disables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   961   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   962   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   964  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   966  /** \brief Enables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   967   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   968   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   969   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   970  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   972  /** \brief Gets the requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   973   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   974   * \return requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   975   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   976  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   977  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   978  /** \brief Gets the requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   979   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   980   * \return requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   981   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   982  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   983  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   984  /** \brief Gets the request queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   985   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   986   * \return requested queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   988  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   990  /** \brief Gets the requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   991   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   992   * \return requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   994  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   996  /** \brief Gets the requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   997   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   998   * \return requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1000  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1002  /** \brief Gets the requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1003   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1004   * \return requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1005   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1006  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1008  /** \brief Returns the queue slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1009   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1010   * \return TRUE if queue slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1012  IFX_INLINE boolean IfxVadc_isRequestQueueSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1014  /** \brief Sets the gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1015   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1016   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1017   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1020  IFX_INLINE void IfxVadc_setQueueSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1022  /** \brief Sets the trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1023   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1024   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1025   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1026   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1027   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1028  IFX_INLINE void IfxVadc_setQueueSlotTriggerOperatingConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1030  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1031   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1032   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1033   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1034  IFX_INLINE void IfxVadc_startQueue(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1036  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1038  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1040  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1041   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1042   * \return status of the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1043   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1044   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1045   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1046   * boolean queueFull = (IfxVadc_getQueueStatus(group)==IfxVadc_Status_queueFull)?TRUE:FALSE; // get Queue status for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1047   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1050  IFX_EXTERN IfxVadc_Status IfxVadc_getQueueStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1052  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1054  /** \addtogroup IfxLld_Vadc_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1055   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1056  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1057  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1058  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1059  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1061  /** \brief Initializes a EMUX output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1062   * \param emux the Emux Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1063   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1064   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1066   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1067  IFX_INLINE void IfxVadc_initEmuxPin(const IfxVadc_Emux_Out *emux, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1068  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1069  /** \brief Initializes a GxBFL output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1070   * \param gxBfl the GxBFL Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1071   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1072   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1073   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1074   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1075  IFX_INLINE void IfxVadc_initGxBflPin(const IfxVadc_GxBfl_Out *gxBfl, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1077  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1078  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1079  /** \addtogroup IfxLld_Vadc_Std_Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1080   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1081  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1082  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1083  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1084  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1085  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1086  /** \brief Calculate the time using analog frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1087   * \param analogFrequency analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1088   * \param sampleTime sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1089   * \return sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1090   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1091  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1092  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1093  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1094  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1095  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1096  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1097  /** \brief Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1098   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1099   * \return Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1101  IFX_EXTERN float32 IfxVadc_getAdcAnalogFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1103  /** \brief Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1104   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1105   * \return Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1107  IFX_EXTERN float32 IfxVadc_getAdcDigitalFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1109  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1111  /** \addtogroup IfxLld_Vadc_Std_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1112   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1115  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1118  /** \brief Clears the all group requests.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1119   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1120   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1122  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1124  /** \brief Gets the ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1125   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1126   * \return ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1127   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1128  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1130  /** \brief Gets the channel esult service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1131   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1132   * \return channel result service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1133   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1134  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1135  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1136  /** \brief Gets the channel esult service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1137   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1138   * \return channel result service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1139   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1140  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1141  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1142  /** \brief Gets the channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1143   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1144   * \return channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1146  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1148  /** \brief Gets the configured master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1149   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1150   * \return configured master kernel index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1152  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1154  /** \brief Resets the ADC group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1155   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1156   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1158  IFX_INLINE void IfxVadc_resetGroup(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1160  /** \brief Sets analog converter group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1161   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1162   * \param analogConverterMode group analog converter mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1163   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1164   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1165  IFX_INLINE void IfxVadc_setAnalogConvertControl(Ifx_VADC_G *vadcG, IfxVadc_AnalogConverterMode analogConverterMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1167  /** \brief Sets the arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1168   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1169   * \param arbiterRoundLength arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1172  IFX_INLINE void IfxVadc_setArbitrationRoundLength(Ifx_VADC_G *vadcG, IfxVadc_ArbitrationRounds arbiterRoundLength);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1174  /** \brief Sets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1175   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1176   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1177   * \param resolution ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1178   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1180  IFX_INLINE void IfxVadc_setGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1182  /** \brief Sets the ADC input class sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1183   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1184   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1185   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1186   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1187   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1188   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1189  IFX_INLINE void IfxVadc_setGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1190  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1191  /** \brief Sets the master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1192   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1193   * \param masterIndex master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1194   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1195   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1196  IFX_INLINE void IfxVadc_setMasterIndex(Ifx_VADC_G *vadcG, uint8 masterIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1197  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1198  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1199  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1200  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1202  /** \brief Sets the Arbiter slot configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1203   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1204   * \param slotEnable enable/disable of slot.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1205   * \param prio channel request priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1206   * \param mode Channel Slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1207   * \param slot channel slot Request source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1208   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1210  IFX_EXTERN void IfxVadc_setArbiterPriority(Ifx_VADC_G *vadcG, boolean slotEnable, IfxVadc_RequestSlotPriority prio, IfxVadc_RequestSlotStartMode mode, IfxVadc_RequestSource slot);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1212  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1213  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1214  /** \addtogroup IfxLld_Vadc_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1215   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1217  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1218  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1219  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1221  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1222   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1225  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1226  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1227  /** \brief Enable VADC kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1228   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1231  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1233  /** \brief gets ADC Calibration Flag CAL status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1234   * \param vadc pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1235   * \param adcCalGroupNum ADC CAL group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1236   * \return CAL group status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1238  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1240  /** \brief Gets the global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1241   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1242   * \return global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1243   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1244  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1246  /** \brief get SUCAL bit field status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1247   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1248   * \return Indicate the start-up calibration phase
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1250  IFX_INLINE boolean IfxVadc_getStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1252  /** \brief initiates the calibration pulse phase.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1253   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1256  IFX_INLINE void IfxVadc_initiateStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1258  /** \brief Sets the channel conversion mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1259   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1260   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1261   * \param resolution ADC channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1264  IFX_INLINE void IfxVadc_setGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1266  /** \brief Sets the sample time of ADC global class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1267   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1268   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1269   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1270   * \param sampleTime the requested sample time for input class in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1271   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1272   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1273  IFX_INLINE void IfxVadc_setGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1275  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1276   * \param vadc pointer to VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1277   * \param mode mode selection (enable/disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1280  IFX_INLINE void IfxVadc_setSleepMode(Ifx_VADC *vadc, IfxVadc_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1282  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1283  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1284  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1286  /** \brief Disable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1287   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1288   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1289   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1290   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1291  IFX_EXTERN void IfxVadc_disableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1293  /** \brief Disables the post calibration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1294   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1295   * \param group Index of the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1296   * \param disable disable or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1299  IFX_EXTERN void IfxVadc_disablePostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group, boolean disable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1301  /** \brief Enable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1302   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1303   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1306  IFX_EXTERN void IfxVadc_enableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1308  /** \brief Enables the CCU6 based ADC group synchronisation as workaround for Erratum ADC_TC.068
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1309   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1310   * \param ccu6Num selects CCU60 or CCU61
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1311   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1313  IFX_EXTERN void IfxVadc_enableGroupSync(Ifx_VADC *vadc, uint32 ccu6Num);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1315  /** \brief Module Frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1316   * \return Module Frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1318  IFX_EXTERN float32 IfxVadc_getAdcModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1320  /** \brief Gives the SRC source address.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1321   * \param group Index of the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1322   * \param index SRC number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1323   * \return SRC source address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1325  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxVadc_getSrcAddress(IfxVadc_GroupId group, IfxVadc_SrcNr index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1327  /** \brief Initialises ADC arbiter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1328   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1329   * \param arbiterClockDivider ADC arbiter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1330   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1331   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1332  IFX_EXTERN void IfxVadc_initialiseAdcArbiterClock(Ifx_VADC *vadc, uint32 arbiterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1334  /** \brief Initialises the ADC Converter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1335   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1336   * \param converterClockDivider ADC converter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1339  IFX_EXTERN void IfxVadc_initialiseAdcConverterClock(Ifx_VADC *vadc, uint32 converterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1341  /** \brief Configure the FadcD vadc digital clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1342   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1343   * \param fAdcD ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1344   * \return calculated ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1346  IFX_EXTERN uint32 IfxVadc_initializeFAdcD(Ifx_VADC *vadc, uint32 fAdcD);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1348  /** \brief Configure the ADC analog clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1349   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1350   * \param fAdcI ADC analog clock clock frequency in Hz. Range = [5000000, 10000000].
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1351   * \return ADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1352   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1353  IFX_EXTERN uint32 IfxVadc_initializeFAdcI(Ifx_VADC *vadc, uint32 fAdcI);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1355  /** \brief Return the post calibration status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1356   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1357   * \param group specifies Group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1358   * \return TRUE if the post calibration is enabled for the group else false
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1359   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1360  IFX_EXTERN boolean IfxVadc_isPostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1361  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1362  /** \brief Resets the kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1363   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1364   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1366  IFX_EXTERN void IfxVadc_resetKernel(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1368  /** \brief Select Low Power Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1369   * \param vadc Pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1370   * \param supplyVoltage Select Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1373  IFX_EXTERN void IfxVadc_selectPowerSupplyVoltage(Ifx_VADC *vadc, IfxVadc_LowSupplyVoltageSelect supplyVoltage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1375  /** \brief Starts ADC calibration and wait for the end of the calibration process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1376   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1377   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1379  IFX_EXTERN void IfxVadc_startupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1381  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1382  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1383  /** \addtogroup IfxLld_Vadc_Std_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1384   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1386  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1387  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1388  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1389  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1390  /** \brief Clears the channel request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1391   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1392   * \param channelId channel id whose request to be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1393   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1394   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1395  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1397  /** \brief Enables the FIFO mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1398   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1399   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1400   * \param fifoMode FIFO mode .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1401   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1402   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1403  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1405  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1406   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1407   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1410  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1412  /** \brief Gets the group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1413   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1414   * \return group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1416  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1418  /** \brief Gets the current ADC channel control configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1419   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1420   * \param channelIndex ADC channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1421   * \return current ADC channel control configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1422   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1423  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1425  /** \brief Gets the channel input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1426   * \param vadcG pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1427   * \param channelIndex specifies channel ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1428   * \return Input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1429   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1430  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1431  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1432  /** \brief Gets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1433   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1434   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1435   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1437  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1439  /** \brief Gets the ADC input class channel sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1440   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1441   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1442   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1443   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1444   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1445  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1446  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1447  /** \brief Sets the channels with low priority as background channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1448   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1449   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1452  IFX_INLINE void IfxVadc_setBackgroundPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1454  /** \brief Sets the target for result background source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1455   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1456   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1457   * \param globalResultUsage whether storage in global result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1458   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1459   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1460  IFX_INLINE void IfxVadc_setBackgroundResultTarget(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean globalResultUsage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1462  /** \brief Selects boundary extension.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1463   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1464   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1465   * \param boundaryMode boundary extension mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1466   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1468  IFX_INLINE void IfxVadc_setBoundaryMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundaryExtension boundaryMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1470  /** \brief Sets the channel event service request line.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1471   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1472   * \param channelSrcNr channel event Service Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1473   * \param channel channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1475   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1476  IFX_INLINE void IfxVadc_setChannelEventNodePointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1477  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1478  /** \brief Sets the channel input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1479   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1480   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1481   * \param inputClass group input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1482   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1483   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1484  IFX_INLINE void IfxVadc_setChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_InputClasses inputClass);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1486  /** \brief Sets the channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1487   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1488   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1489   * \param limitCheck channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1490   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1491   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1492  IFX_INLINE void IfxVadc_setChannelLimitCheckMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_LimitCheck limitCheck);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1493  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1494  /** \brief Sets channel as priority channel with in the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1495   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1496   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1499  IFX_INLINE void IfxVadc_setGroupPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1501  /** \brief Sets group's lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1502   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1503   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1504   * \param lowerBoundary group lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1505   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1506   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1507  IFX_INLINE void IfxVadc_setLowerBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection lowerBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1509  /** \brief Selects the refernce input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1510   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1511   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1512   * \param reference reference input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1513   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1514   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1515  IFX_INLINE void IfxVadc_setReferenceInput(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelReference reference);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1516  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1517  /** \brief Sets result event node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1518   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1519   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1520   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1521   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1522   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1523  IFX_INLINE void IfxVadc_setResultNodeEventPointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1524  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1525  /** \brief Sets result event node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1526   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1527   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1528   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1529   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1530   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1531  IFX_INLINE void IfxVadc_setResultNodeEventPointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1532  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1533  /** \brief Sets result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1534   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1535   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1536   * \param rightAlignedStorage result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1537   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1538   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1539  IFX_INLINE void IfxVadc_setResultPosition(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean rightAlignedStorage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1540  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1541  /** \brief Sets channel synchronization request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1542   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1543   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1544   * \param synchonize whether channel synchronize or stand alone operation.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1547  IFX_INLINE void IfxVadc_setSyncRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean synchonize);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1549  /** \brief Sets group's upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1550   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1551   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1552   * \param upperBoundary group upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1553   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1555  IFX_INLINE void IfxVadc_setUpperBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection upperBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1557  /** \brief Sets the group result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1558   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1559   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1560   * \param resultRegister result register for group result storage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1561   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1562   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1563  IFX_INLINE void IfxVadc_storeGroupResult(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1566  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1569  /** \brief get channel conversion timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1570   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1571   * \param group specifies the Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1572   * \param inputClass Input class used
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1573   * \param analogFrequency ADC module analog frequency fadci in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1574   * \param moduleFrequency ADC module frequency fvadc in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1575   * \param conversionMode specifies the conversion mode (Standard conversion mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1576   * \return Channel conversion Time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1577   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1578  IFX_EXTERN float32 IfxVadc_getChannelConversionTime(Ifx_VADC *vadc, IfxVadc_GroupId group, IfxVadc_InputClasses inputClass, float32 analogFrequency, float32 moduleFrequency, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1579  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1580  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1581  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1582  /** \addtogroup IfxLld_Vadc_Std_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1583   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1584  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1585  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1586  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1587  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1589  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1590   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1591   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1592   * \return External channel resolution for global input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1593   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1594  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1595  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1596  /** \brief Get the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1597   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1598   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1599   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1600   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1601   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1602  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1603  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1604  /** \brief get the external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1605   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1606   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1607   * \return Adc input class External channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1608   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1609  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1610  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1611  /** \brief Gets the ADC input class sample time of external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1612   * \param vadcG Pointer to Register Group space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1613   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1614   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1615   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1616   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1617  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1618  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1619  /** \brief set the external channel resolution of Global class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1620   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1621   * \param inputClassNum Global Input Class Number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1622   * \param resolution External Channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1623   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1624   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1625  IFX_INLINE void IfxVadc_setEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1627  /** \brief Sets the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1628   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1629   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1630   * \param analogFrequency ADC analog Frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1631   * \param sampleTime the requested sample time for input class in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1632   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1633   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1634  IFX_INLINE void IfxVadc_setEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1636  /** \brief set the external channel resolution of ADC input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1637   * \param vadcG pointer to VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1638   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1639   * \param resolution input class external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1640   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1641   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1642  IFX_INLINE void IfxVadc_setEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1643  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1644  /** \brief Sets the ADC input class sample time for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1645   * \param vadcG Pointer to VADC Group Register Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1646   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1647   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1648   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1651  IFX_INLINE void IfxVadc_setEmuxGroupSampletime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1653  /** \brief Sets the Emux Interface for a particular group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1654   * \param vadc Pointer to VADC Module Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1655   * \param emuxInterface specifies the EmuxInterface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1656   * \param group specifies the group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1657   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1658   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1659  IFX_INLINE void IfxVadc_setEmuxInterfaceForGroup(Ifx_VADC *vadc, IfxVadc_EmuxInterface emuxInterface, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1660  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1661  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1662  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1663  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1665  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1666   * \param vadc pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1667   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1668   * \param mode External Multiplexer mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1669   * \param channels Specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1670   * \param startChannel specifies the external channel value from which conversion to be carried out
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1671   * \param code Output the channel number in binary code/gray code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1672   * \param sampleTimeControl specifies when to use a sample time for external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1673   * \param channelSelectionStyle External Multiplexer Channel Selection Style
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1674   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1675   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1676  IFX_EXTERN void IfxVadc_configExternalMultiplexerMode(Ifx_VADC *vadc, Ifx_VADC_G *vadcG, IfxVadc_ExternalMultiplexerMode mode, uint8 channels, IfxVadc_EmuxSelectValue startChannel, IfxVadc_EmuxCodingScheme code, IfxVadc_EmuxSampleTimeControl sampleTimeControl, IfxVadc_ChannelSelectionStyle channelSelectionStyle);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1677  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1678  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1679  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1680  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1681  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1682  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1684  /** \brief get channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1685   * \param vadcG Pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1686   * \return channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1687   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1688  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1689  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1690  /** \brief set channel event node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1691   * \param vadcG Pointer to the Vadc group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1692   * \param channelSrcNr Service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1693   * \param channel specifies channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1694   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1695   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1696  IFX_INLINE void IfxVadc_setChannelEventNodePointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1697  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1698  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1699  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1700  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1701  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1702  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1703  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1704      group->QINR0.U = channel | options;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1705  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1707  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1708  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1709  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1710      uint32 ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1711  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1712      ticks = (uint32)(sampleTime * analogFrequency) - 2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1713  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1714      if (ticks > 31)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1715      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1716          ticks = (ticks / 16) + 15;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1717      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1719      ticks = __minu(ticks, 0xFFu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1720  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1721      return ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1722  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1723  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1724  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1725  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1726  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1727      vadcG->REFCLR.U = 0x0000FFFFu;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1728  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1729  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1731  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1732  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1733      vadcG->CEFCLR.U = 1 << channelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1734  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1735  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1737  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1738  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1739      vadcG->QMR0.B.FLUSH = flushQueue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1740  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1741  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1742  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1743  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1744  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1745      group->RCR[resultIdx].B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1746  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1747  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1748  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1749  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1750  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1751      vadc->GLOBRCR.B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1752  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1753  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1754  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1755  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1756  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1757      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1758      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1759      vadc->CLC.B.DISR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1760      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1761  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1762  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1763  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1764  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1765  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1766      vadcG->QMR0.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1767  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1768  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1770  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1771  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1772      vadcG->ASMR.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1773  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1774  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1775  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1776  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1777  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1778      vadc->BRSMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1779  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1782  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1783  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1784      vadcG->RCR[resultRegister].B.FEN = fifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1785  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1787  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1788  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1789  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1790      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1792      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1793      vadc->CLC.U = 0x00000000;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1794      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1795  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1796  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1798  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1799  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1800      vadcG->QMR0.B.ENTR = 1;     /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1801  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1802  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1804  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1805  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1806      vadcG->ASMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1807  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1808  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1810  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1811  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1812      vadcG->RCR[resultRegister].B.SRGEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1813  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1816  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1817  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1818      uint8 status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1819      status = vadc->G[adcCalGroupNum].ARBCFG.B.CAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1820      return status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1821  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1823  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1824  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1825  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1826      return (IfxVadc_ArbitrationRounds)vadcG->ARBCFG.B.ARBRND;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1827  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1828  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1830  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1831  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1832      Ifx_VADC_G_CHASS assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1833      assignChannels.U = vadcG->CHASS.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1834      return assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1835  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1838  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1839  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1840      return (IfxVadc_GatingMode)vadc->BRSMR.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1841  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1844  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1845  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1846      return (IfxVadc_GatingSource)vadc->BRSCTRL.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1847  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1850  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1851  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1852      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1853  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1856  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1857  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1858      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1859  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1862  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1863  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1864      return (IfxVadc_TriggerSource)vadc->BRSCTRL.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1865  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1867  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1868  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1869  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1870      return (IfxVadc_TriggerMode)vadc->BRSCTRL.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1871  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1874  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1875  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1876      Ifx_VADC_CHCTR tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1877      tempChctr.U = vadcG->CHCTR[channelIndex].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1878      return tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1879  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1881  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1882  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1883  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1884      return (IfxVadc_InputClasses)vadcG->CHCTR[channelIndex].B.ICLSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1885  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1886  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1888  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1889  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1890      Ifx_VADC_G_REVNP0 resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1891      resultServiceRequestNodePtr0.U = vadcG->REVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1892      return resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1893  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1895  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1896  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1897  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1898      Ifx_VADC_G_REVNP1 resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1899      resultServiceRequestNodePtr1.U = vadcG->REVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1900      return resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1901  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1904  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1905  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1906      Ifx_VADC_G_CEVNP0 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1907      serviceRequestNodePtr.U = vadcG->CEVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1908      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1909  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1910  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1911  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1912  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1913  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1914      Ifx_VADC_G_CEVNP1 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1915      serviceRequestNodePtr.U = vadcG->CEVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1916      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1917  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1918  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1919  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1920  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1921  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1922      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1923  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1924  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1926  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1927  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1928      return (float32)(IFXVADC_SAMPLETIME_MIN + vadc->GLOBICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1929  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1930  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1931  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1932  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1933  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1934      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1935  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1937  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1938  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1939  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1940      return (float32)(IFXVADC_SAMPLETIME_MIN + vadcG->ICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1941  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1943  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1944  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1945  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1946      Ifx_VADC_GLOBCFG globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1947      globCfg.U = vadc->GLOBCFG.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1948      return globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1949  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1950  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1952  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1953  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1954      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1955  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1956  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1957  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1958  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1959  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1960      Ifx_VADC_GLOBRES tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1962      tmpGlobalResult.U = vadc->GLOBRES.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1963  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1964      return tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1965  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1966  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1967  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1968  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1969  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1970      uint32 sampleTime = vadc->GLOBICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1972      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1973      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1974          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1975      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1976  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1977      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1978  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1979  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1981  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1982  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1983      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1984  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1985  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1986  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1987  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1988  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1989      uint32 idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1990  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1991      for (idx = 0; idx < numResults; idx++)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1992      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1993          results[idx].U = group->RES[resultOffset + idx].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1994      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1995  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1996  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1997  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1998  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1999  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2000      uint32 sampleTime = vadcG->ICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2002      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2003      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2004          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2005      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2006  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2007      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2008  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2009  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2010  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2011  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2012  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2013      uint8 masterIndex = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2014      masterIndex = vadcG->SYNCTR.B.STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2015      return masterIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2016  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2017  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2019  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2020  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2021      return (IfxVadc_GatingMode)vadcG->QMR0.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2022  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2023  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2025  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2026  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2027      return (IfxVadc_GatingSource)vadcG->QCTRL0.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2028  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2031  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2032  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2033      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2034  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2036  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2037  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2038  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2039      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2040  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2041  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2043  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2044  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2045      return (IfxVadc_TriggerSource)vadcG->QCTRL0.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2046  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2047  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2049  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2050  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2051      return (IfxVadc_TriggerMode)vadcG->QCTRL0.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2052  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2055  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2056  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2057      Ifx_VADC_RES tmpResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2058  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2059      tmpResult.U = group->RES[resultIdx].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2061      return tmpResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2062  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2063  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2064  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2065  IFX_INLINE IfxVadc_GatingMode IfxVadc_getScanSlotGatingMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2066  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2067      return (IfxVadc_GatingMode)vadcG->ASMR.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2068  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2069  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2070  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2071  IFX_INLINE IfxVadc_GatingSource IfxVadc_getScanSlotGatingSource(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2072  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2073      return (IfxVadc_GatingSource)vadcG->ASCTRL.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2074  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2075  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2077  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getScanSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2078  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2079      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2080  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2081  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2082  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2083  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getScanSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2084  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2085      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2086  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2087  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2088  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2089  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getScanSlotTriggerInput(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2090  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2091      return (IfxVadc_TriggerSource)vadcG->ASCTRL.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2092  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2094  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2095  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getScanSlotTriggerMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2096  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2097      return (IfxVadc_TriggerMode)vadcG->ASCTRL.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2098  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2099  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2100  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2101  IFX_INLINE boolean IfxVadc_getStartupCalibration(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2102  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2103      return (boolean)vadc->GLOBCFG.B.SUCAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2104  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2105  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2106  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2107  IFX_INLINE void IfxVadc_initEmuxPin(const IfxVadc_Emux_Out *emux, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2108  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2109      IfxPort_setPinModeOutput(emux->pin.port, emux->pin.pinIndex, outputMode, emux->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2110      IfxPort_setPinPadDriver(emux->pin.port, emux->pin.pinIndex, padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2111  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2114  IFX_INLINE void IfxVadc_initGxBflPin(const IfxVadc_GxBfl_Out *gxBfl, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2115  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2116      IfxPort_setPinModeOutput(gxBfl->pin.port, gxBfl->pin.pinIndex, outputMode, gxBfl->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2117      IfxPort_setPinPadDriver(gxBfl->pin.port, gxBfl->pin.pinIndex, padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2118  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2119  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2121  IFX_INLINE void IfxVadc_initiateStartupCalibration(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2122  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2123      vadc->GLOBCFG.B.SUCAL = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2124  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2127  IFX_INLINE boolean IfxVadc_isAutoBackgroundScanEnabled(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2129      return (boolean)vadc->BRSMR.B.SCAN;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2130  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2131  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2133  IFX_INLINE boolean IfxVadc_isAutoScanEnabled(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2134  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2135      return (boolean)vadcG->ASMR.B.SCAN;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2136  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2139  IFX_INLINE boolean IfxVadc_isRequestBackgroundScanSlotEnabled(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2141      return (boolean)vadcG->ARBPR.B.ASEN2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2142  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2145  IFX_INLINE boolean IfxVadc_isRequestQueueSlotEnabled(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2146  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2147      return (boolean)vadcG->ARBPR.B.ASEN0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2148  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2150  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2151  IFX_INLINE boolean IfxVadc_isRequestScanSlotEnabled(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2153      return (boolean)vadcG->ARBPR.B.ASEN1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2154  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2157  IFX_INLINE void IfxVadc_resetGroup(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2159      vadcG->ARBCFG.B.ANONC = IfxVadc_AnalogConverterMode_off;   /* turn off group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2160  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2162  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2163  IFX_INLINE void IfxVadc_setAnalogConvertControl(Ifx_VADC_G *vadcG, IfxVadc_AnalogConverterMode analogConverterMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2164  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2165      vadcG->ARBCFG.B.ANONC = analogConverterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2166  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2169  IFX_INLINE void IfxVadc_setArbitrationRoundLength(Ifx_VADC_G *vadcG, IfxVadc_ArbitrationRounds arbiterRoundLength)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2170  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2171      vadcG->ARBCFG.B.ARBRND = arbiterRoundLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2172  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2175  IFX_INLINE void IfxVadc_setAutoBackgroundScan(Ifx_VADC *vadc, boolean autoBackgroundScanEnable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2177      vadc->BRSMR.B.SCAN = autoBackgroundScanEnable;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2178  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2181  IFX_INLINE void IfxVadc_setAutoScan(Ifx_VADC_G *vadcG, boolean autoscanEnable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2182  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2183      vadcG->ASMR.B.SCAN = autoscanEnable;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2184  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2185  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2187  IFX_INLINE void IfxVadc_setBackgroundPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2188  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2189      vadcG->CHASS.U &= ~(1 << channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2190  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2191  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2193  IFX_INLINE void IfxVadc_setBackgroundResultTarget(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean globalResultUsage)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2194  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2195      vadcG->CHCTR[channelIndex].B.RESTBS = globalResultUsage;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2196  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2197  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2199  IFX_INLINE void IfxVadc_setBackgroundScan(Ifx_VADC *vadc, IfxVadc_GroupId groupId, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2200  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2201      channels                = (vadc->BRSSEL[groupId].U & ~mask) | channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2202      vadc->BRSSEL[groupId].U = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2206  IFX_INLINE void IfxVadc_setBackgroundScanSlotGatingConfig(Ifx_VADC *vadc, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2208      Ifx_VADC_BRSCTRL brsctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2209      brsctrl.U          = vadc->BRSCTRL.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2210      brsctrl.B.GTWC     = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2211      brsctrl.B.GTSEL    = gatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2212      vadc->BRSCTRL.U    = brsctrl.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2213      vadc->BRSMR.B.ENGT = gatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2214  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2215  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2217  IFX_INLINE void IfxVadc_setBackgroundScanSlotTriggerConfig(Ifx_VADC *vadc, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2218  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2219      Ifx_VADC_BRSCTRL brsctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2220      brsctrl.U        = vadc->BRSCTRL.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2221      brsctrl.B.XTWC   = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2222      brsctrl.B.XTMODE = triggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2223      brsctrl.B.XTSEL  = triggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2224      vadc->BRSCTRL.U  = brsctrl.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2225  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2226  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2228  IFX_INLINE void IfxVadc_setBoundaryMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundaryExtension boundaryMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2229  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2230      vadcG->CHCTR[channelIndex].B.BNDSELX = boundaryMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2231  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2234  IFX_INLINE void IfxVadc_setChannelEventNodePointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2235  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2236      vadcG->CEVNP0.U &= ~(IFX_VADC_G_CEVNP0_CEV0NP_MSK << (channel * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2237      vadcG->CEVNP0.U |= (channelSrcNr << (channel * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2238  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2241  IFX_INLINE void IfxVadc_setChannelEventNodePointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2242  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2243      vadcG->CEVNP1.U &= ~(IFX_VADC_G_CEVNP1_CEV8NP_MSK << (channel * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2244      vadcG->CEVNP1.U |= (channelSrcNr << (channel * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2248  IFX_INLINE void IfxVadc_setChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_InputClasses inputClass)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2249  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2250      vadcG->CHCTR[channelIndex].B.ICLSEL = inputClass;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2251  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2254  IFX_INLINE void IfxVadc_setChannelLimitCheckMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_LimitCheck limitCheck)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2255  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2256      vadcG->CHCTR[channelIndex].B.CHEVMODE = limitCheck;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2257  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2258  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2260  IFX_INLINE void IfxVadc_setEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2261  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2262      vadc->GLOBICLASS[inputClassNum].B.CME = resolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2263  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2266  IFX_INLINE void IfxVadc_setEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2267  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2268      vadc->GLOBICLASS[inputClassNum].B.STCE = IfxVadc_calculateSampleTime(analogFrequency, sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2269  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2272  IFX_INLINE void IfxVadc_setEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2273  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2274      vadcG->ICLASS[inputClassNum].B.CME = resolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2275  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2276  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2278  IFX_INLINE void IfxVadc_setEmuxGroupSampletime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2279  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2280      vadcG->ICLASS[inputClassNum].B.STCE = IfxVadc_calculateSampleTime(analogFrequency, sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2281  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2283  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2284  IFX_INLINE void IfxVadc_setEmuxInterfaceForGroup(Ifx_VADC *vadc, IfxVadc_EmuxInterface emuxInterface, IfxVadc_GroupId group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2286      if (emuxInterface == IfxVadc_EmuxInterface_0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2287      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2288          vadc->EMUXSEL.B.EMUXGRP0 = group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2289      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2290      else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2291      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2292          vadc->EMUXSEL.B.EMUXGRP1 = group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2293      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2297  IFX_INLINE void IfxVadc_setGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2298  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2299      vadc->GLOBICLASS[inputClassNum].B.CMS = resolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2300  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2303  IFX_INLINE void IfxVadc_setGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2304  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2305      vadc->GLOBICLASS[inputClassNum].B.STCS = IfxVadc_calculateSampleTime(analogFrequency, sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2306  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2309  IFX_INLINE void IfxVadc_setGroupPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2310  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2311      vadcG->CHASS.U |= (1 << channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2312  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2315  IFX_INLINE void IfxVadc_setGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2316  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2317      vadcG->ICLASS[inputClassNum].B.CMS = resolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2318  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2321  IFX_INLINE void IfxVadc_setGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2322  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2323      vadcG->ICLASS[inputClassNum].B.STCS = IfxVadc_calculateSampleTime(analogFrequency, sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2324  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2327  IFX_INLINE void IfxVadc_setLowerBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection lowerBoundary)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2328  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2329      vadcG->CHCTR[channelIndex].B.BNDSELL = lowerBoundary;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2330  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2333  IFX_INLINE void IfxVadc_setMasterIndex(Ifx_VADC_G *vadcG, uint8 masterIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2335      vadcG->SYNCTR.B.STSEL = (masterIndex % 4);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2336      vadcG->SYNCTR.U      |= (0x00000008U << (masterIndex % 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2337  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2339  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2340  IFX_INLINE void IfxVadc_setQueueSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2342      Ifx_VADC_G_QCTRL0 qctrl0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2343      qctrl0.U           = vadcG->QCTRL0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2344      qctrl0.B.GTWC      = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2345      qctrl0.B.GTSEL     = gatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2346      vadcG->QCTRL0.U    = qctrl0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2347      vadcG->QMR0.B.ENGT = gatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2348  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2349  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2351  IFX_INLINE void IfxVadc_setQueueSlotTriggerOperatingConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2352  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2353      Ifx_VADC_G_QCTRL0 qctrl0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2354      qctrl0.U        = vadcG->QCTRL0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2355      qctrl0.B.XTWC   = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2356      qctrl0.B.XTMODE = triggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2357      qctrl0.B.XTSEL  = triggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2358      vadcG->QCTRL0.U = qctrl0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2359  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2360  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2361  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2362  IFX_INLINE void IfxVadc_setReferenceInput(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelReference reference)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2363  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2364      vadcG->CHCTR[channelIndex].B.REFSEL = reference;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2365  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2368  IFX_INLINE void IfxVadc_setResultNodeEventPointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2370      vadcG->REVNP0.U &= ~(IFX_VADC_G_REVNP0_REV0NP_MSK << (resultRegister * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2371      vadcG->REVNP0.U |= (resultSrcNr << (resultRegister * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2372  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2375  IFX_INLINE void IfxVadc_setResultNodeEventPointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2377      vadcG->REVNP1.U &= ~(IFX_VADC_G_REVNP1_REV8NP_MSK << ((resultRegister - IfxVadc_ChannelResult_8) * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2378      vadcG->REVNP1.U |= (resultSrcNr << ((resultRegister - IfxVadc_ChannelResult_8) * 4));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2379  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2381  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2382  IFX_INLINE void IfxVadc_setResultPosition(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean rightAlignedStorage)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2383  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2384      vadcG->CHCTR[channelIndex].B.RESPOS = rightAlignedStorage;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2385  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2388  IFX_INLINE void IfxVadc_setScanSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2389  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2390      Ifx_VADC_G_ASCTRL asctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2391      asctrl.U           = vadcG->ASCTRL.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2392      asctrl.B.GTWC      = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2393      asctrl.B.GTSEL     = gatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2394      vadcG->ASCTRL.U    = asctrl.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2395      vadcG->ASMR.B.ENGT = gatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2396  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2399  IFX_INLINE void IfxVadc_setScanSlotTriggerConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2400  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2401      Ifx_VADC_G_ASCTRL asctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2402      asctrl.U        = vadcG->ASCTRL.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2403      asctrl.B.XTWC   = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2404      asctrl.B.XTMODE = triggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2405      asctrl.B.XTSEL  = triggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2406      vadcG->ASCTRL.U = asctrl.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2407  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2408  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2409  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2410  IFX_INLINE void IfxVadc_setSleepMode(Ifx_VADC *vadc, IfxVadc_SleepMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2411  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2412      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2413      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2414      vadc->CLC.B.EDIS = mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2415      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2416  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2418  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2419  IFX_INLINE void IfxVadc_setSyncRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean synchonize)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2420  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2421      vadcG->CHCTR[channelIndex].B.SYNC = synchonize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2422  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2425  IFX_INLINE void IfxVadc_setUpperBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection upperBoundary)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2426  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2427      vadcG->CHCTR[channelIndex].B.BNDSELU = upperBoundary;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2428  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2429  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2431  IFX_INLINE void IfxVadc_startBackgroundScan(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2432  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2433      vadc->BRSMR.B.LDEV = 1;     /* execute Load event to start the conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2434  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2435  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2437  IFX_INLINE void IfxVadc_startQueue(Ifx_VADC_G *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2439      group->QMR0.B.TREV = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2443  IFX_INLINE void IfxVadc_startScan(Ifx_VADC_G *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2445      group->ASMR.B.LDEV = 1;     /* set Load event. Channels stored in ASSEL will be copied into pending register and conversion will start */
	ld.bu	d15,[a15]165
.L212:
	or	d15,#2
	st.b	[a15]165,d15
.L139:
	fret
.L50:
	; End of function
	.sdecl	'.text.Vadc..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.Vadc..cocofun_4'
	.align	2
; Function .cocofun_4
.L14:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	movh.a	a15,#@his(g_VadcAutoScan)
	lea	a15,[a15]@los(g_VadcAutoScan)
.L205:
	lea	a12,[a15]4
.L206:
	fret
.L45:
	; End of function
	.sdecl	'.text.Vadc.EMG_Volt_Scan',code,cluster('EMG_Volt_Scan')
	.sect	'.text.Vadc.EMG_Volt_Scan'
	.align	2
	
	.global	EMG_Volt_Scan

; ..\APP\src\Vadc.c	   103  
; ..\APP\src\Vadc.c	   104  void EMG_Volt_Scan(void)
; Function EMG_Volt_Scan
.L16:
EMG_Volt_Scan:	.type	func
	sub.a	a10,#96
.L141:

; ..\APP\src\Vadc.c	   105  {
; ..\APP\src\Vadc.c	   106  	uint32 adc_voltage = 0;
; ..\APP\src\Vadc.c	   107  
; ..\APP\src\Vadc.c	   108  	uint32 chnIx;
; ..\APP\src\Vadc.c	   109  	IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; ..\APP\src\Vadc.c	   110  	IfxVadc_Adc_Channel       adcChannel[3];
; ..\APP\src\Vadc.c	   111  
; ..\APP\src\Vadc.c	   112  	chnIx = 1;
; ..\APP\src\Vadc.c	   113  	IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &g_VadcAutoScan.adcGroup);
	fcall	.cocofun_4
.L183:
	lea	a4,[a10]24
.L184:
	mov.aa	a5,a12
	call	IfxVadc_Adc_initChannelConfig
.L185:

; ..\APP\src\Vadc.c	   114  	adcChannelConfig[chnIx].channelId      = (IfxVadc_ChannelId)(chnIx);
	mov	d15,#1
	st.b	[a10]36,d15
.L186:

; ..\APP\src\Vadc.c	   115  	adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx);  /* use dedicated result register */
	st.b	[a10]39,d15
.L187:

; ..\APP\src\Vadc.c	   116  
; ..\APP\src\Vadc.c	   117  	/* initialize the channel */
; ..\APP\src\Vadc.c	   118  	IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
	lea	a4,[a10]80
.L188:
	lea	a5,[a10]24
	call	IfxVadc_Adc_initChannel
.L111:

; ..\APP\src\Vadc.c	   119  
; ..\APP\src\Vadc.c	   120  	/* add to scan */
; ..\APP\src\Vadc.c	   121  	unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
	mov	d4,#1
	ld.b	d15,[a10]36
.L113:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1229  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1230  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1232  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1233  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1234      return IfxVadc_getResultBasedOnRequestSource(group->module.vadc, group->group, channel, sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1235  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1237  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1238  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1239  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1240      return IfxVadc_getScanStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1241  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1244  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1245  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1246      return group->module.vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1247  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1250  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1252      IfxVadc_setBackgroundScan(vadc->vadc, group->groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1256  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1257  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1258      IfxVadc_setScan(group->group, channels, mask);
	ld.a	a4,[a15]8
.L114:
	sha	d4,d4,d15
.L119:

; ..\APP\src\Vadc.c	   122  	unsigned mask     = channels;
; ..\APP\src\Vadc.c	   123  	IfxVadc_Adc_setScan(&g_VadcAutoScan.adcGroup, channels, mask);
	mov	d5,d4
	call	IfxVadc_setScan
.L120:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1229  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1230  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1232  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1233  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1234      return IfxVadc_getResultBasedOnRequestSource(group->module.vadc, group->group, channel, sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1235  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1237  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1238  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1239  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1240      return IfxVadc_getScanStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1241  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1244  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1245  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1246      return group->module.vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1247  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1250  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1252      IfxVadc_setBackgroundScan(vadc->vadc, group->groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1256  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1257  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1258      IfxVadc_setScan(group->group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1259  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1262  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1263  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1264      IfxVadc_startBackgroundScan(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1265  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1266  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1268  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1269  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1270      IfxVadc_startQueue(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1271  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1272  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1274  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1275  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1276      IfxVadc_startScan(group->group);
	fcall	.cocofun_5

; ..\APP\src\Vadc.c	   124  
; ..\APP\src\Vadc.c	   125  
; ..\APP\src\Vadc.c	   126      /* start autoscan */
; ..\APP\src\Vadc.c	   127      IfxVadc_Adc_startScan(&g_VadcAutoScan.adcGroup);
; ..\APP\src\Vadc.c	   128  
; ..\APP\src\Vadc.c	   129      unsigned     group   = adcChannel[chnIx].group->groupId;
; ..\APP\src\Vadc.c	   130      unsigned     channel = adcChannel[chnIx].channel;
; ..\APP\src\Vadc.c	   131  
; ..\APP\src\Vadc.c	   132      /* wait for valid result */
; ..\APP\src\Vadc.c	   133      Ifx_VADC_RES conversionResult;
; ..\APP\src\Vadc.c	   134  
; ..\APP\src\Vadc.c	   135      do
; ..\APP\src\Vadc.c	   136      {
; ..\APP\src\Vadc.c	   137          conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; ..\APP\src\Vadc.c	   138      } while (!conversionResult.B.VF);
.L4:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     2   * \file IfxVadc_Adc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     3   * \brief VADC ADC details
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    24   * \defgroup IfxLld_Vadc_Adc_Usage How to use the VADC ADC Interface driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    25   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    27   * VADC comprises of independent analog channels with Analog/Digital converters to convert analog input to discrete digital output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    31   * \section IfxLld_Vadc_Adc_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    32   * \subsection IfxLld_Vadc_Adc_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    37   * #include <Vadc/Adc/IfxVadc_Adc.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    39   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    41   * \subsection IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    44   * // VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    45   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    46   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    47   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    49   * \subsection IfxLld_Vadc_Adc_ModuleInitialisation Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    50   * The module initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    51   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    52   *     // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    53   *     IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    54   *     IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    56   *     // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    57   *     // IfxVadc_Adc vadc; // declared globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    58   *     IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    59   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    61   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    62   * \subsection IfxLld_Vadc_Adc_GroupInitialisation Group Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    63   * The group initialisation can be done in the same function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    64   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    65   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    66   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    67   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    69   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    70   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    72   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    73   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    75   *     // enable all arbiter request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    76   *     adcGroupConfig.arbiter.requestSlotQueueEnabled          = TRUE; // enable Queue mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    77   *     adcGroupConfig.arbiter.requestSlotScanEnabled           = TRUE; // enable Scan mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    78   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled = TRUE; // enable Background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    80   *     // enable all gates in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    81   *     adcGroupConfig.queueRequest.triggerConfig.gatingMode          = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    82   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode           = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    83   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    84   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    85   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    86   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    87   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    89   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    90   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    91   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    93   * \subsection IfxLld_Vadc_Adc_QueuedTransfers Queued Transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    94   * Now, VADC is initialised. Here,Three channels are used for queued transfers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    95   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    96   *     // IMPORTANT: for deterministic results we have to disable the queue gate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    97   *     // while filling the queue, otherwise results could be output in the wrong order
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    98   *        IfxVadc_GatingMode savedGate = IfxVadc_getQueueSlotGatingMode(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	    99   *        IfxVadc_GatingSource gatingSource=IfxVadc_getQueueSlotGatingSource(adcGroup.group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   101   *        IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, IfxVadc_GatingMode_disabled );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   102   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   103   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   104   *     IfxVadc_Adc_Channel adcChannel[3];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   105   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   106   *     for(int chnIx=0; chnIx<3; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   107   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   109   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   110   *         adcChannelConfig[chnIx].resultRegister = IfxVadc_ChannelResult_1; // use result register #1 for all channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   111   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   112   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   113   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   115   *         // Add channel to queue with refill enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   116   *         IfxVadc_Adc_addToQueue(&adcChannel[chnIx], IFXVADC_QUEUE_REFILL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   118   *         // restore previous gate config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   120   *         IfxVadc_setQueueSlotGatingConfig(adcGroup.group, gatingSource, savedGate );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   121   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   122   *         // start the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   123   *         IfxVadc_Adc_startQueue(&adcGroup); // just for the case that somebody copy&pastes the code - the queue has already been started in previous test
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   125   *         // get 10 results for all 3 channels and store in temporary buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   126   *         // (the usage of a buffer is required, since the print statements used by the checks take more time than the conversions)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   127   *         Ifx_VADC_RES resultTrace[3*10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   128   *         for(int i=0; i<3*10; ++i)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   129   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   130   *             unsigned chnIx = i % 3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   132   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   133   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   134   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   135   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   136   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   138   *             // store result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   139   *             resultTrace[i] = conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   140   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   141   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   142   *         // stop the queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   143   *         IfxVadc_Adc_clearQueue(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   145   *         // check results in buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   146   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   147   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   148   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   150   * \subsection IfxLld_Vadc_Adc_AutoScan Auto Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   151   * Autoscan of 5 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   152   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   153   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   154   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   155   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   156   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   157   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   158   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   159   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   160   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   161   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   163   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   164   *     adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   165   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   166   *     // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   167   *     adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   168   *     adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   170   *     // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   171   *     //IfxVadc_Adc_Group adcGroup; // no need to create a new one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   172   *     IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   174   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   175   *         // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   176   *         IfxVadc_Adc_ChannelConfig adcChannelConfig[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   177   *         IfxVadc_Adc_Channel adcChannel[5];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   179   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   180   *             IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   181   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   182   *             adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   183   *             adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(chnIx); // use dedicated result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   184   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   185   *             // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   186   *             IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   187   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   188   *             // add to scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   189   *             unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   190   *             unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   191   *             IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   192   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   194   *         // start scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   195   *         IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   196   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   197   *         // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   198   *         for(int chnIx=0; chnIx<5; ++chnIx) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   199   *             unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   200   *             unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   201   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   202   *             // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   203   *             Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   204   *             do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   205   *                 conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   206   *             } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   207   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   209   *         }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   210   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   211   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   212   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   213   * \subsection IfxLld_Vadc_Adc_BackGroundScan Background Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   214   * Background Scan of 2 channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   216   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   217   *     // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   218   *     IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   219   *     IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   220   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   221   *     // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   222   *     adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   223   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   224   *     // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   225   *     adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   226   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   227   *     // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   228   *     adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   229   *     adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   230   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   231   *     // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   232   *     adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   233   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   234   *     // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   235   *     IfxVadc_Adc_ChannelConfig adcChannelConfig[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   236   *     IfxVadc_Adc_Channel adcChannel[2];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   237   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   238   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   239   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   240   *         IfxVadc_Adc_initChannelConfig(&adcChannelConfig[chnIx], &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   241   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   242   *         adcChannelConfig[chnIx].channelId = (IfxVadc_ChannelId)(chnIx + 5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   243   *         adcChannelConfig[chnIx].resultRegister = (IfxVadc_ChannelResult)(5 + chnIx); // use register #5 and 6 for results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   244   *         adcChannelConfig[chnIx].backgroundChannel = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   245   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   246   *         // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   247   *         IfxVadc_Adc_initChannel(&adcChannel[chnIx], &adcChannelConfig[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   248   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   249   *         // add to background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   250   *         unsigned channels = (1 << adcChannelConfig[chnIx].channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   251   *         unsigned mask = channels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   252   *         IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   253   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   254   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   255   *     // start autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   256   *     IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   258   *     // check results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   259   *     for(int chnIx=0; chnIx<2; ++chnIx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   260   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   261   *         unsigned group = adcChannel[chnIx].group->groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   262   *         unsigned channel = adcChannel[chnIx].channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   263   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   264   *         // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   265   *         Ifx_VADC_RES conversionResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   266   *         do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   267   *         {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   268   *             conversionResult = IfxVadc_Adc_getResult(&adcChannel[chnIx]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   269   *         } while( !conversionResult.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   270   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   271   *         // check with expected value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   272   *  // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   273   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   274   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   276   * \subsection IfxLld_Vadc_Adc_EmuxConfiguration External Multiplexer Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   277   * External Configuration of 3 channels at channel 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   278   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   279   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   280   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   281   *       IfxVadc_Adc_EmuxControl emuxConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   282   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   283   *         IfxVadc_Adc_initExternalMultiplexerModeConfig(&emuxConfig,vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   284   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   285   *         emuxConfig.groupId           = IfxVadc_GroupId_1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   286   *         emuxConfig.channels          = (uint8)IfxVadc_ChannelId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   287   *         emuxConfig.startChannel   = IfxVadc_EmuxSelectValue_2; // it will take 0 to 2 external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   289   *         emuxConfig.sampleTimeControl = IfxVadc_EmuxSampleTimeControl_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   290   *         emuxConfig.mode              = IfxVadc_ExternalMultiplexerMode_steady;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   291   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   292   *         IfxVadc_Adc_EmuxPinConfig pinsConfig ={
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   293   *  .pins={ &IfxVadc_EMUX00_P02_6_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   294   *          &IfxVadc_EMUX01_P02_7_OUT,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   295   *          &IfxVadc_EMUX02_P02_8_OUT},
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   297   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   298   *         .outputMode = IfxPort_OutputMode_pushPull,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   299   *         .padDriver  = IfxPort_PadDriver_cmosAutomotiveSpeed1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   300   *  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   301   *         emuxConfig.emuxOutPinConfig = pinsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   302   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   303   *         IfxVadc_Adc_initExternalMultiplexerMode(vadc, &emuxConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   304   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   305   *         IfxVadc_setEmuxGroupResolution(&vadc->G[emuxConfig.groupId], 0, IfxVadc_ChannelResolution_12bit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   306   *         IfxVadc_setEmuxGroupSampletime(&vadc->G[emuxConfig.groupId], 0, 50000, 1.0e-6);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   308   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   309   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   310   * \defgroup IfxLld_Vadc_Adc Interface Driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   311   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   312   * \defgroup IfxLld_Vadc_Adc_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   313   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   314   * \defgroup IfxLld_Vadc_Adc_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   315   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   316   * \defgroup IfxLld_Vadc_Adc_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   317   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   318   * \defgroup IfxLld_Vadc_Adc_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   319   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   320   * \defgroup IfxLld_Vadc_Adc_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   321   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   322   * \defgroup IfxLld_Vadc_Adc_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   323   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   324   * \defgroup IfxLld_Vadc_Adc_Queue Queue Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   325   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   326   * \defgroup IfxLld_Vadc_Adc_Clock Clock Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   327   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   328   * \defgroup IfxLld_Vadc_Adc_Interrupt Interrupt Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   329   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   330   * \defgroup IfxLld_Vadc_Adc_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   331   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   332   * \defgroup IfxLld_Vadc_Adc_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   333   * \ingroup IfxLld_Vadc_Adc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   334   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   336  #ifndef IFXVADC_ADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   337  #define IFXVADC_ADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   340  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   343  #include "Vadc/Std/IfxVadc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   345  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   346  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   347  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   349  typedef uint8 IfxVadc_Adc_SYNCTR_STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   352  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   353  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   355  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   356   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   357  /** \brief VADC handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   358   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   359  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   360  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   361      Ifx_VADC *vadc;     /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   362  } IfxVadc_Adc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   363  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   364  /** \brief Gating/Trigger configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   366  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   367  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   368      IfxVadc_GatingSource  gatingSource;      /**< \brief Specifies used gate input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   369      IfxVadc_TriggerSource triggerSource;     /**< \brief Specifies used Trigger input for group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   370      IfxVadc_GatingMode    gatingMode;        /**< \brief Specifies gating mode. High level, Low Level  or Gating disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   371      IfxVadc_TriggerMode   triggerMode;       /**< \brief Specifies trigger mode. Rising, falling any edge leads to an trigger event */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   372  } IfxVadc_Adc_GatingTriggerConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   374  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   375  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   376  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   377   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   378  /** \brief Arbiter configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   379   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   380  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   381  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   382      IfxVadc_ArbitrationRounds arbiterRoundLength;                   /**< \brief Specifies arbiter round length. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   383      boolean                   requestSlotQueueEnabled;              /**< \brief request queue if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   384      boolean                   requestSlotScanEnabled;               /**< \brief request scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   385      boolean                   requestSlotBackgroundScanEnabled;     /**< \brief request background scan if enabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   386  } IfxVadc_Adc_ArbiterConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   387  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   388  /** \brief Background scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   390  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   391  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   392      boolean                         autoBackgroundScanEnabled;     /**< \brief background autoscan functionality enable or disable. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   393      IfxVadc_Adc_GatingTriggerConfig triggerConfig;                 /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   394      IfxVadc_RequestSlotPriority     requestSlotPrio;               /**< \brief priority of used background scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   395      IfxVadc_RequestSlotStartMode    requestSlotStartMode;          /**< \brief start mode for request background scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   396  } IfxVadc_Adc_BackgroundScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   398  /** \brief Input class configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   400  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   401  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   402      float32                   sampleTime;     /**< \brief Specifies the requested sample time for input class */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   403      IfxVadc_ChannelResolution resolution;     /**< \brief Specifies the conversion Mode 8,10,12Bit or 10bit fast compare */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   404  } IfxVadc_Adc_ClassConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   405  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   406  /** \brief Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   407   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   408  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   409  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   410      IfxVadc_Adc     module;      /**< \brief The VADC handle structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   411      Ifx_VADC_G     *group;       /**< \brief Pointer to the group registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   412      IfxVadc_GroupId groupId;     /**< \brief Specifies the group index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   413  } IfxVadc_Adc_Group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   415  /** \brief Queue configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   417  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   419      boolean                         flushQueueAfterInit;      /**< \brief Specifies if the queue is flushed after configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   420      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief trigger and gating configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   421      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  queue request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   422      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request queue source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   423  } IfxVadc_Adc_QueueConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   425  /** \brief Scan mode configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   426   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   427  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   428  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   429      boolean                         autoscanEnabled;          /**< \brief Specifies autoscan functionality. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   430      IfxVadc_Adc_GatingTriggerConfig triggerConfig;            /**< \brief Specifies trigger and gating configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   431      IfxVadc_RequestSlotPriority     requestSlotPrio;          /**< \brief priority of used  scan request slot. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   432      IfxVadc_RequestSlotStartMode    requestSlotStartMode;     /**< \brief start mode for request scan source. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   433  } IfxVadc_Adc_ScanConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   435  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   437  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   438  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   439      IfxVadc_Emux_Out  *pins[3];        /**< \brief Emux Pins configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   440      IfxPort_OutputMode outputMode;     /**< \brief the pin output mode which should be configured */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   441      IfxPort_PadDriver  padDriver;      /**< \brief Pad driver */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   442  } IfxVadc_Adc_EmuxPinConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   444  /** \addtogroup IfxLld_Vadc_Adc_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   445   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   446  /** \brief Channel handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   447   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   448  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   449  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   450      IfxVadc_ChannelId        channel;       /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   451      IfxVadc_ChannelResult    resultreg;     /**< \brief Specifies allocated result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   452      const IfxVadc_Adc_Group *group;         /**< \brief Specifies the group of the channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   453  } IfxVadc_Adc_Channel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   455  /** \brief Channel configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   456   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   457  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   459      boolean                   globalResultUsage;       /**< \brief Specifies storage in global result register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   460      boolean                   synchonize;              /**< \brief Specifies synchronized conversion channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   461      boolean                   backgroundChannel;       /**< \brief Specifies channel is used as background channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   462      boolean                   rightAlignedStorage;     /**< \brief Specifies result is right aligned */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   463      Ifx_Priority              resultPriority;          /**< \brief Interrupt priority of the result trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   464      Ifx_Priority              channelPriority;         /**< \brief Interrupt priority of the channel trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   465      IfxSrc_Tos                resultServProvider;      /**< \brief Interrupt service provider for the result trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   466      IfxSrc_Tos                channelServProvider;     /**< \brief Interrupt service provider for the channel trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   467      IfxVadc_SrcNr             resultSrcNr;             /**< \brief Service node of the result trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   468      IfxVadc_SrcNr             channelSrcNr;            /**< \brief Service node of the channel trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   469      IfxVadc_ChannelId         channelId;               /**< \brief Specifies the channel index */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   470      IfxVadc_InputClasses      inputClass;              /**< \brief Specifies input class selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   471      IfxVadc_ChannelReference  reference;               /**< \brief Specifies Reference selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   472      IfxVadc_ChannelResult     resultRegister;          /**< \brief Specifies Result register selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   473      IfxVadc_BoundarySelection lowerBoundary;           /**< \brief Specifies lower boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   474      IfxVadc_BoundarySelection upperBoundary;           /**< \brief Specifies upper boundary selection */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   475      IfxVadc_BoundaryExtension boundaryMode;            /**< \brief Specifies Standard mode of fast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   476      IfxVadc_LimitCheck        limitCheck;              /**< \brief Specifies boundary band selection upper/lower */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   477      const IfxVadc_Adc_Group  *group;                   /**< \brief Specifies pointer to the IfxVadc_Adc_Group group handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   478  } IfxVadc_Adc_ChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   479  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   480  /** \brief VADC module configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   481   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   482  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   483  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   484      Ifx_VADC               *vadc;                                                         /**< \brief Specifies the pointer to the VADC module registers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   485      IfxVadc_Adc_ClassConfig globalInputClass[IFXVADC_NUM_GLOBAL_INPUTCLASSES];            /**< \brief Specifies the global conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   486      float32                 digitalFrequency;                                             /**< \brief Specifies digital ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   487      float32                 analogFrequency;                                              /**< \brief Specifies analog ADC Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   488      float32                 moduleFrequency;                                              /**< \brief module Frequency in Hz. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   489      boolean                 startupCalibration;                                           /**< \brief Can be enabled to execute a startup calibration (disabled by default).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   490                                                                                             * Note that this option will also enable all converter groups.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   491                                                                                             * If this isn't desired, don't use this option, but execute IfxVadc_Adc_startupCalibration() after all ADC groups have been initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   492      IfxVadc_LowSupplyVoltageSelect supplyVoltage;                                         /**< \brief Select Low Power Supply Voltage */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   493  } IfxVadc_Adc_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   495  /** \brief Emux Control Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   496   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   497  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   499      Ifx_VADC                       *vadc;                      /**< \brief pointer to Module Configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   500      IfxVadc_ExternalMultiplexerMode mode;                      /**< \brief Specifies the External Multiplexer mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   501      IfxVadc_EmuxSelectValue         startChannel;              /**< \brief specifies the external channel start value(EMUX[x:0])
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   502                                                                  * x- specifies external channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   503      IfxVadc_EmuxCodingScheme        code;                      /**< \brief specifes binary/gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   504      IfxVadc_EmuxSampleTimeControl   sampleTimeControl;         /**< \brief specifies when to use sample time control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   505      IfxVadc_GroupId                 groupId;                   /**< \brief specifies groupId */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   506      uint8                           channels;                  /**< \brief specifies channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   507      IfxVadc_EmuxInterface           emuxInterface;             /**< \brief specifies the Emux interface */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   508      IfxVadc_Adc_EmuxPinConfig       emuxOutPinConfig;          /**< \brief configure the emux output pin */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   509      IfxVadc_ChannelSelectionStyle   channelSelectionStyle;     /**< \brief External Multiplexer Channel Selection Style */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   510  } IfxVadc_Adc_EmuxControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   512  /** \brief Group configuration structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   513   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   514  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   515  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   516      const IfxVadc_Adc               *module;                                   /**< \brief Specifies pointer to the IfxVadc_Adc module handle */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   517      IfxVadc_GroupId                  groupId;                                  /**< \brief Specifies the group/kernel id */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   518      IfxVadc_GroupId                  master;                                   /**< \brief Specifies the master group. If master is different from groupId, then the group is configured as slave. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   519      IfxVadc_Adc_ClassConfig          inputClass[IFXVADC_NUM_INPUTCLASSES];     /**< \brief Specifies conversion settings one and two */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   520      IfxVadc_Adc_ScanConfig           scanRequest;                              /**< \brief Specifies scan mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   521      IfxVadc_Adc_QueueConfig          queueRequest;                             /**< \brief Specifies queued mode configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   522      IfxVadc_Adc_BackgroundScanConfig backgroundScanRequest;                    /**< \brief Specifies back ground scan configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   523      boolean                          disablePostCalibration;                   /**< \brief Specifies if calibration after conversion (post calibration) should be disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   524      IfxVadc_Adc_ArbiterConfig        arbiter;                                  /**< \brief Arbiter configuration structure. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   525  } IfxVadc_Adc_GroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   527  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   528  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   529  /** \addtogroup IfxLld_Vadc_Adc_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   530   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   532  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   533  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   534  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   535  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   536  /** \brief Reset the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   537   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   539   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   540   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   541   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   542   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   543  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   545  /** \brief Get the current VADC configuration (e.g. VADC frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   546   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   547   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   548   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   549   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   550   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   551   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   553  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   555  /** \brief Get conversion result based on the Request Source. (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   556   * value = raw * gain + offset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   557   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   558   * \param channel channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   559   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   560   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   561   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   562   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   563   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   564   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   565   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   567   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   568   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   569   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   570   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   571   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   572   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   573   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   574   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   575   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   576   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   577   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   579   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   580   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   582   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   583   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   584   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   585   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   586   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   587   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   588   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   589   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   590   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   591   * IfxVadc_Adc_ChannelConfig adcChannelConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   592   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   593   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   594   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   595   * adcChannelConfig.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   596   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   597   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   598   * IfxVadc_Adc_Channel adcChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   599   * IfxVadc_Adc_initChannel(&adcChannel, &adcChannelConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   600   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   601   * uint32 channels = (1 << 2); // enable channel #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   602   * uint32 mask = (1 << 7) | (1 << 2); // modify the selection for channel #7 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   603   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   604   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   605   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   606   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   607   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   608   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   609   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   610   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   611   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   612   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   613   * // wait for valid result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   614   * Ifx_VADC_RES resultChannel;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   615   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   616   * resultChannel = IfxVadc_Adc_getResultBasedOnRequestSource(&adcGroup, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   617   * } while( !resultChannel.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   618   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   619   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   620   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   621  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResultBasedOnRequestSource(IfxVadc_Adc_Group *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   623  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   624  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   625  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   627  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   628   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   629   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   630   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   631  IFX_EXTERN void IfxVadc_Adc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   632  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   633  /** \brief Initialise the VADC to run with the expected frequency and calibration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   634   * \param vadc pointer to the VADC handle
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   635   * \param config pointer to the VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   636   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   637   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   638   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   639   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   640   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   641  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initModule(IfxVadc_Adc *vadc, const IfxVadc_Adc_Config *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   643  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   644   * \param config pointer to the VADC module configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   645   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   646   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   647   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   648   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   649   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   651  IFX_EXTERN void IfxVadc_Adc_initModuleConfig(IfxVadc_Adc_Config *config, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   653  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   655  /** \addtogroup IfxLld_Vadc_Adc_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   656   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   657  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   658  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   659  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   660  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   662  /** \brief Gets the current group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   663   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   664   * \return Group register set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   665   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   666   * Ifx_VADC* vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   667   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   668   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   669   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   670   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   671   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   672   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   673   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   674   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   675   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   676   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   677   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   678   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   679   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   680   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   681   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   682   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   683   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   684   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   685   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   686   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   687   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   688   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   689   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   691   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   692  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   693  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   694  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   695   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   696   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   697   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   698   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   699   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   700   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   701   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   702   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   703   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   704   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   705   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   706   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   707   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   708   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   709   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   710   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   711   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   712   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   713   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   714   * // change group (default is GroupId0, change to GroupId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   715   * adcGroupConfig.groupId = IfxVadc_GroupId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   716   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   717   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   718   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   719   * adcGroupConfig.scanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   720   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   721   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   722   * adcGroupConfig.arbiter.requestSlotScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   723   * adcGroupConfig.scanRequest.autoscanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   724   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   725   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   726   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   727   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   728   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   729   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   730   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   731   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   732   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   733   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   734   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   735   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   736   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   737   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   738   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   739   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   740   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   741   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   742   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   743   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   744   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   745   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   746   * // change channel result register (default is ChannelResult0, change to ChannelResult1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   747   * adcChannelConfig5.resultRegister = IfxVadc_ChannelResult1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   748   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   749   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   750   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   751   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   752   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   753   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   754   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   755   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   756   * // configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   757   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel2, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   758   * IfxVadc_Adc_configureWaitForReadMode(&adcChannel5, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   759   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   760   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   761   * IfxVadc_Adc_setScan(&adcGroup, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   762   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   763   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   764   * IfxVadc_Adc_startScan(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   765   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   766   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   767   * IfxVadc_Status scanStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   768   * do
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   769   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   770   *    scanStatus = IfxVadc_Adc_getScanStatus(&adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   771   * } while(scanStatus==IfxVadc_Status_ChannelsStillPending);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   772   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   773   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   774   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   775   * IfxVadc_Adc_getGroupResult(&adcGroup, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   776   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   777   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   778   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   779  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   781  /** \brief Gets the current group module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   782   * \param group Group handle data structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   783   * \return Group module register base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   785  IFX_INLINE Ifx_VADC *IfxVadc_Adc_getVadcFromGroup(const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   787  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   788  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   789  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   791  /** \brief Reset the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   792   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   793   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   794   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   795   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   796   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   797   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   798  IFX_EXTERN void IfxVadc_Adc_deInitGroup(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   799  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   800  /** \brief Get the current group configuration (e.g. vadc frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   801   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   802   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   803   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   804   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   805   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   806   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   808  IFX_EXTERN void IfxVadc_Adc_getGroupConfig(IfxVadc_Adc_Group *group, IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   810  /** \brief Initialise the VADC group (also autoscan and queue modes) Slave Groups must initialize first.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   811   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   812   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   813   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   814   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   815   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   816   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   818  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initGroup(IfxVadc_Adc_Group *group, const IfxVadc_Adc_GroupConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   820  /** \brief Initialise buffer with default VADC configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   821   * \param config pointer to the VADC group configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   822   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   823   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   824   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   825   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   826   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   828  IFX_EXTERN void IfxVadc_Adc_initGroupConfig(IfxVadc_Adc_GroupConfig *config, IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   830  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   832  /** \addtogroup IfxLld_Vadc_Adc_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   833   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   834  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   835  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   836  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   837  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   838  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   839  /** \brief pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   840   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   841   * \param waitForRead wait for read mode enabled/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   842   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   843   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   844   * For coding example see: \ref IfxVadc_Adc_getGroupResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   845   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   847  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   849  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   850   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   851   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   852   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   853   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   854   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   855   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   856  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   857  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   858  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   859  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   860  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   862  /** \brief Get the current channel configuration (e.g. sample settings)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   863   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   864   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   865   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   866   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   867   * Example Usage :\ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   868   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   869   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   870  IFX_EXTERN void IfxVadc_Adc_getChannelConfig(IfxVadc_Adc_Channel *channel, IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   871  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   872  /** \brief get the channel Conversion Time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   873   * \param channel Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   874   * \param conversionMode specifies Compatible mode(Standard Conversion mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   875   * \return channel conversion time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   877  IFX_EXTERN float32 IfxVadc_Adc_getChannelConversionTime(IfxVadc_Adc_Channel *channel, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   879  /** \brief Initialise one channel with given configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   880   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   881   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   882   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   883   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   884   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   885   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   886   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   887  IFX_EXTERN IfxVadc_Status IfxVadc_Adc_initChannel(IfxVadc_Adc_Channel *channel, const IfxVadc_Adc_ChannelConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   888  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   889  /** \brief Initialise buffer with default channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   890   * \param config pointer to the VADC channel configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   891   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   892   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   893   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   894   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   895   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   896   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   897  IFX_EXTERN void IfxVadc_Adc_initChannelConfig(IfxVadc_Adc_ChannelConfig *config, const IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   898  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   899  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   900  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   901  /** \addtogroup IfxLld_Vadc_Adc_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   902   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   904  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   905  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   906  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   907  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   908  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   909   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   910   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   911   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   912   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   913   * For coding example see: \ref IfxVadc_Adc_getGlobalResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   914   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   915   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   916  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   917  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   918  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   919   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   920   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   922  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   924  /** \brief returns result stored in global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   925   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   926   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   927   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   928   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   929   * // create configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   930   * IfxVadc_Adc_Config adcConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   931   * IfxVadc_Adc_initModuleConfig(&adcConfig, &MODULE_VADC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   932   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   933   * // initialize module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   934   * IfxVadc_Adc vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   935   * IfxVadc_Adc_initModule(&vadc, &adcConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   936   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   937   * // create group config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   938   * IfxVadc_Adc_GroupConfig adcGroupConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   939   * IfxVadc_Adc_initGroupConfig(&adcGroupConfig, &vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   940   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   941   * // change group (default is GroupId_0, change to GroupId_3)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   942   * adcGroupConfig.groupId = IfxVadc_GroupId_3;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   944   * // IMPORTANT: usually we use the same group as master!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   945   * adcGroupConfig.master = adcGroupConfig.groupId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   946   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   947   * // enable background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   948   * adcGroupConfig.arbiter.requestSlotBackgroundScanEnabled  = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   949   * adcGroupConfig.backgroundScanRequest.autoBackgroundScanEnabled = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   950   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   951   * // enable gate in "always" mode (no edge detection)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   952   * adcGroupConfig.backgroundScanRequest.triggerConfig.gatingMode = IfxVadc_GatingMode_always;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   953   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   954   * // initialize the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   955   * IfxVadc_Adc_Group adcGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   956   * IfxVadc_Adc_initGroup(&adcGroup, &adcGroupConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   957   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   958   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   959   * IfxVadc_Adc_ChannelConfig adcChannelConfig2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   960   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig2, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   961   * adcChannelConfig2.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   962   * adcChannelConfig2.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   963   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   964   * // change channel (default is ChannelId0, change to ChannelId2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   965   * adcChannelConfig2.channelId = IfxVadc_ChannelId2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   966   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   967   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   968   * IfxVadc_Adc_Channel adcChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   969   * IfxVadc_Adc_initChannel(&adcChannel2, &adcChannelConfig2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   970   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   971   * // create channel config
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   972   * IfxVadc_Adc_ChannelConfig adcChannelConfig5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   973   * IfxVadc_Adc_initChannelConfig(&adcChannelConfig5, &adcGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   974   * adcChannelConfig5.backgroundChannel   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   975   * adcChannelConfig5.globalResultUsage   = TRUE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   976   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   977   * // change channel (default is ChannelId0, change to ChannelId5)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   978   * adcChannelConfig5.channelId = IfxVadc_ChannelId5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   979   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   980   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   981   * // initialize the channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   982   * IfxVadc_Adc_Channel adcChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   983   * IfxVadc_Adc_initChannel(&adcChannel5, &adcChannelConfig5);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   984   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   985   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   986   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   987   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   988   * //configure wait for read mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   989   * IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(&vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   990   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   991   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   992   * IfxVadc_Adc_setBackgroundScan(&vadc, &adcGroupConfig, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   993   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   994   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   995   * IfxVadc_Adc_startBackgroundScan(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   996   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   997   * // wait for valid result for channel 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   998   * Ifx_VADC_GLOBRES resultChannel2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	   999   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1000   * resultChannel2 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1001   * } while( !resultChannel2.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1002   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1003   * // wait for valid result for channel 5
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1004   * Ifx_VADC_GLOBRES resultChannel5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1005   * do {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1006   *     resultChannel5 = IfxVadc_Adc_getGlobalResult(&vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1007   * } while( !resultChannel5.B.VF );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1008   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1009   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1010   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1011  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1012  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1013  /** \brief configures a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1014   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1015   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1016   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1017   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1019   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1020   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1021   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1022   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1023  IFX_INLINE void IfxVadc_Adc_setBackgroundScan(IfxVadc_Adc *vadc, IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1025  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1026   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1028   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1029   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1030   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1031   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1032  IFX_INLINE void IfxVadc_Adc_startBackgroundScan(IfxVadc_Adc *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1033  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1034  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1036  /** \addtogroup IfxLld_Vadc_Adc_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1037   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1038  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1039  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1040  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1041  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1043  /** \brief Gives the scan status for a group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1044   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1045   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1046   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1047   * For coding example see: \ref IfxVadc_Adc_getResultBasedOnRequestSource
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1050  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getScanStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1052  /** \brief Configures an autoscan.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1053   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1054   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1055   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1056   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1057   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1058   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1059   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1060   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1061  IFX_INLINE void IfxVadc_Adc_setScan(IfxVadc_Adc_Group *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1062  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1063  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1064   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1066   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1067   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1068   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1069   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1070  IFX_INLINE void IfxVadc_Adc_startScan(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1071  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1072  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1073  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1074  /** \addtogroup IfxLld_Vadc_Adc_Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1075   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1077  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1078  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1079  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1080  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1081  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1082   *  refill
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1083   *  source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1084   * external trigger control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1085   * \param channel pointer to the VADC channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1086   * \param options options for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1087   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1088   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1089   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1090   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1091   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1092  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1093  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1094  /** \brief Flush the contents of the queue of a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1095   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1096   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1097   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1098   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1099   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1101  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1103  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1104   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1105   * \return Queue status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1107   * For coding example see: \ref IfxVadc_Adc_getResult
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1109   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1110  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1112  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1113   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1114   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1115   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1116   * For coding example see: \ref IfxLld_Vadc_Adc_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1119  IFX_INLINE void IfxVadc_Adc_startQueue(IfxVadc_Adc_Group *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1121  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1123  /** \addtogroup IfxLld_Vadc_Adc_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1124   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1127  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1130  /** \brief initialise default configuration for external multiplexer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1131   * \param emuxConfig speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1132   * \param vadc pointer to VADC module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1135  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerModeConfig(IfxVadc_Adc_EmuxControl *emuxConfig, Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1137  /** \brief initalise external multiplexer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1138   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1139   * \param emuxControl speciifies EMUX configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1140   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1141   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1142  IFX_EXTERN void IfxVadc_Adc_initExternalMultiplexerMode(Ifx_VADC *vadc, const IfxVadc_Adc_EmuxControl *emuxControl);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1143  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1144  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1145  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1146  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1147  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1148  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1150  IFX_INLINE void IfxVadc_Adc_addToQueue(IfxVadc_Adc_Channel *channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1151  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1152      IfxVadc_addToQueue(channel->group->group, channel->channel, options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1153  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1155  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1156  IFX_INLINE void IfxVadc_Adc_clearQueue(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1158      IfxVadc_clearQueue(group->group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1159  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1160  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1162  IFX_INLINE void IfxVadc_Adc_configureWaitForReadMode(IfxVadc_Adc_Channel *channel, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1163  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1164      IfxVadc_configureWaitForReadMode(channel->group->group, channel->resultreg, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1165  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1168  IFX_INLINE void IfxVadc_Adc_configureWaitForReadModeForGlobalResultRegister(IfxVadc_Adc *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1169  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1170      IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc->vadc, waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1171  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1174  IFX_INLINE void IfxVadc_Adc_deInitModule(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1176      Ifx_VADC *vadcSFR = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1177  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1178      IfxVadc_resetKernel(vadcSFR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1179  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1182  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getBackgroundScanStatus(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1184      return IfxVadc_getBackgroundScanStatus(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1185  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1188  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_Adc_getGlobalResult(IfxVadc_Adc *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1189  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1190      return IfxVadc_getGlobalResult(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1191  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1192  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1193  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1194  IFX_INLINE Ifx_VADC_G *IfxVadc_Adc_getGroupRegsFromGroup(const IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1195  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1196      return group->group;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1197  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1200  IFX_INLINE void IfxVadc_Adc_getGroupResult(IfxVadc_Adc_Group *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1201  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1202      IfxVadc_getGroupResult(group->group, results, resultOffset, numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1203  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1206  IFX_INLINE void IfxVadc_Adc_getModuleConfig(IfxVadc_Adc *vadc, IfxVadc_Adc_Config *config)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1207  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1208      config->vadc                           = vadc->vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1209      config->analogFrequency                = IfxVadc_getAdcAnalogFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1210      config->digitalFrequency               = IfxVadc_getAdcDigitalFrequency(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1211      config->globalInputClass[0].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1212      config->globalInputClass[1].resolution = IfxVadc_getGlobalResolution(vadc->vadc, 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1213      config->globalInputClass[0].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 0, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1214      config->globalInputClass[1].sampleTime = IfxVadc_getGlobalSampleTime(vadc->vadc, 1, config->analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1215      config->moduleFrequency                = IfxVadc_getAdcModuleFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1216      config->startupCalibration             = IfxVadc_getStartupCalibration(vadc->vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1217  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1220  IFX_INLINE IfxVadc_Status IfxVadc_Adc_getQueueStatus(IfxVadc_Adc_Group *group)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1222      return IfxVadc_getQueueStatus(group->group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1223  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1226  IFX_INLINE Ifx_VADC_RES IfxVadc_Adc_getResult(IfxVadc_Adc_Channel *channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1227  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Adc\IfxVadc_Adc.h	  1228      return IfxVadc_getResult(channel->group->group, channel->resultreg);
	ld.a	a15,[a10]84
.L189:
	ld.a	a15,[a15]4
.L190:
	ld.bu	d15,[a10]81
.L191:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     2   * \file IfxVadc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     3   * \brief VADC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     4   * \ingroup IfxLld_Vadc
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    24   * \defgroup IfxLld_Vadc_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    25   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    26   * \defgroup IfxLld_Vadc_Std_Background_Autoscan Background Autoscan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    27   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    28   * \defgroup IfxLld_Vadc_Std_ChannelScan Channel Scan Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    29   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    30   * \defgroup IfxLld_Vadc_Std_QueueRequest Queue Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    31   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    32   * \defgroup IfxLld_Vadc_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    33   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    34   * \defgroup IfxLld_Vadc_Std_Frequency Frequency Calculation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    35   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    36   * \defgroup IfxLld_Vadc_Std_Group Group Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    37   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    38   * \defgroup IfxLld_Vadc_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    39   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    40   * \defgroup IfxLld_Vadc_Std_Channel Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    41   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    42   * \defgroup IfxLld_Vadc_Std_Emux Emux Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    43   * \ingroup IfxLld_Vadc_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    46  #ifndef IFXVADC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    47  #define IFXVADC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    49  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    50  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    51  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    53  #include "_Impl/IfxVadc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    54  #include "_PinMap/IfxVadc_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    55  #include "IfxVadc_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    56  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    57  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    58  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    59  #include "IfxCcu6_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    60  #include "IfxCcu6_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    63  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    64  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    66  /** \addtogroup IfxLld_Vadc_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    67   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    68  /** \brief Defined in MODULE_VADC.G[x].ARBCFG.B.ANONS and ANONC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    69   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    70  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    71  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    72      IfxVadc_AnalogConverterMode_off             = 0, /**< \brief Analog Converter off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    73      IfxVadc_AnalogConverterMode_slowStandby     = 1, /**< \brief Slow Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    74      IfxVadc_AnalogConverterMode_fastStandby     = 2, /**< \brief Fast Standby Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    75      IfxVadc_AnalogConverterMode_normalOperation = 3  /**< \brief Normal operation mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    76  } IfxVadc_AnalogConverterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    78  /** \brief Arbitration round length defined in MODULE_VADC.G[x].ARBCFG.ARBRND(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    82      IfxVadc_ArbitrationRounds_4_slots  = 0,  /**< \brief An arbitration round contains 4 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    83      IfxVadc_ArbitrationRounds_8_slots  = 1,  /**< \brief An arbitration round contains 8 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    84      IfxVadc_ArbitrationRounds_16_slots = 2,  /**< \brief An arbitration round contains 16 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    85      IfxVadc_ArbitrationRounds_20_slots = 3   /**< \brief An arbitration round contains 20 arbitration slots. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    86  } IfxVadc_ArbitrationRounds;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    88  /** \brief Boundary Extension defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELX(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    89   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    90  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    91  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    92      IfxVadc_BoundaryExtension_standard            = 0,   /**< \brief Boundary Standard mode. BNDSELU/BNDSELL as Boundaries */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    93      IfxVadc_BoundaryExtension_fastCompareResult1  = 1,   /**< \brief Fast compare mode use as upper boundary  Channel result   1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    94      IfxVadc_BoundaryExtension_fastCompareResult2  = 2,   /**< \brief Fast compare mode use as upper boundary  Channel result   2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    95      IfxVadc_BoundaryExtension_fastCompareResult3  = 3,   /**< \brief Fast compare mode use as upper boundary  Channel result   3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    96      IfxVadc_BoundaryExtension_fastCompareResult4  = 4,   /**< \brief Fast compare mode use as upper boundary  Channel result   4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    97      IfxVadc_BoundaryExtension_fastCompareResult5  = 5,   /**< \brief Fast compare mode use as upper boundary  Channel result   5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    98      IfxVadc_BoundaryExtension_fastCompareResult6  = 6,   /**< \brief Fast compare mode use as upper boundary  Channel result   6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	    99      IfxVadc_BoundaryExtension_fastCompareResult7  = 7,   /**< \brief Fast compare mode use as upper boundary  Channel result   7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   100      IfxVadc_BoundaryExtension_fastCompareResult8  = 8,   /**< \brief Fast compare mode use as upper boundary  Channel result   8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   101      IfxVadc_BoundaryExtension_fastCompareResult9  = 9,   /**< \brief Fast compare mode use as upper boundary  Channel result   9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   102      IfxVadc_BoundaryExtension_fastCompareResult10 = 10,  /**< \brief Fast compare mode use as upper boundary  Channel result  10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   103      IfxVadc_BoundaryExtension_fastCompareResult11 = 11,  /**< \brief Fast compare mode use as upper boundary  Channel result  11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   104      IfxVadc_BoundaryExtension_fastCompareResult12 = 12,  /**< \brief Fast compare mode use as upper boundary  Channel result  12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   105      IfxVadc_BoundaryExtension_fastCompareResult13 = 13,  /**< \brief Fast compare mode use as upper boundary  Channel result  13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   106      IfxVadc_BoundaryExtension_fastCompareResult14 = 14,  /**< \brief Fast compare mode use as upper boundary  Channel result  14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   107      IfxVadc_BoundaryExtension_fastCompareResult15 = 15   /**< \brief Fast compare mode use as upper boundary  Channel result  15 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   108  } IfxVadc_BoundaryExtension;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   110  /** \brief BoundarySel defined in MODULE_VADC.G[x].CHCTR[y].B.BNDSELL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   112  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   113  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   114      IfxVadc_BoundarySelection_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   115      IfxVadc_BoundarySelection_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   116      IfxVadc_BoundarySelection_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   117      IfxVadc_BoundarySelection_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   118  } IfxVadc_BoundarySelection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   119  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   120  /** \brief VADC Channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   122  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   123  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   124      IfxVadc_ChannelId_none = -1,  /**< \brief None of VADC channels */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   125      IfxVadc_ChannelId_0    = 0,   /**< \brief Channel 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   126      IfxVadc_ChannelId_1    = 1,   /**< \brief Channel 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   127      IfxVadc_ChannelId_2    = 2,   /**< \brief Channel 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   128      IfxVadc_ChannelId_3    = 3,   /**< \brief Channel 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   129      IfxVadc_ChannelId_4    = 4,   /**< \brief Channel 4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   130      IfxVadc_ChannelId_5    = 5,   /**< \brief Channel 5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   131      IfxVadc_ChannelId_6    = 6,   /**< \brief Channel 6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   132      IfxVadc_ChannelId_7    = 7,   /**< \brief Channel 7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   133      IfxVadc_ChannelId_8    = 8,   /**< \brief Channel 8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   134      IfxVadc_ChannelId_9    = 9,   /**< \brief Channel 9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   135      IfxVadc_ChannelId_10   = 10,  /**< \brief Channel 10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   136      IfxVadc_ChannelId_11   = 11   /**< \brief Channel 11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   137  } IfxVadc_ChannelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   139  /** \brief ADC channel reference defined in MODULE_VADC.G[x].CHCTR[y].B.REFSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   140   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   141  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   142  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   143      IfxVadc_ChannelReference_standard = 0,  /**< \brief use Varef as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   144      IfxVadc_ChannelReference_channel0 = 1   /**< \brief use CH0 as reference */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   145  } IfxVadc_ChannelReference;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   146  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   147  /** \brief ADC channel resolution defined in MODULE_VADC.G[x].CHCTR[y].B.ICLASS[y].B.CMS(x=0,1,...,11;y=0,1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   149  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   151      IfxVadc_ChannelResolution_12bit     = 0, /**< \brief 12-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   152      IfxVadc_ChannelResolution_10bit     = 1, /**< \brief 10-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   153      IfxVadc_ChannelResolution_8bit      = 2, /**< \brief 8-bit conversion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   154      IfxVadc_ChannelResolution_10bitFast = 5  /**< \brief 10-bit cfast compare mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   155  } IfxVadc_ChannelResolution;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   157  /** \brief Channel Result defined in MODULE_VADC.G[x].CHCTR[y].B.RESREG(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   161      IfxVadc_ChannelResult_0 = 0,      /**< \brief Use Channel result 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   162      IfxVadc_ChannelResult_1,          /**< \brief Use Channel result 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   163      IfxVadc_ChannelResult_2,          /**< \brief Use Channel result 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   164      IfxVadc_ChannelResult_3,          /**< \brief Use Channel result 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   165      IfxVadc_ChannelResult_4,          /**< \brief Use Channel result 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   166      IfxVadc_ChannelResult_5,          /**< \brief Use Channel result 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   167      IfxVadc_ChannelResult_6,          /**< \brief Use Channel result 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   168      IfxVadc_ChannelResult_7,          /**< \brief Use Channel result 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   169      IfxVadc_ChannelResult_8,          /**< \brief Use Channel result 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   170      IfxVadc_ChannelResult_9,          /**< \brief Use Channel result 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   171      IfxVadc_ChannelResult_10,         /**< \brief Use Channel result 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   172      IfxVadc_ChannelResult_11,         /**< \brief Use Channel result 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   173      IfxVadc_ChannelResult_12,         /**< \brief Use Channel result 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   174      IfxVadc_ChannelResult_13,         /**< \brief Use Channel result 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   175      IfxVadc_ChannelResult_14,         /**< \brief Use Channel result 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   176      IfxVadc_ChannelResult_15          /**< \brief Use Channel result 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   177  } IfxVadc_ChannelResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   179  /** \brief External Multiplexer Channel Selection Style as defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   180   * Ifx_VADC.G[x].EMUXCTR.B.EMXCSS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   181   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   182  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   183  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   184      IfxVadc_ChannelSelectionStyle_channelNumber = 0,  /**< \brief selects an arbitrary channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   185      IfxVadc_ChannelSelectionStyle_binary        = 1   /**< \brief Each bit of bitfield EMUXCH selects the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   186                                                         * associated channel for EMUX control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   187  } IfxVadc_ChannelSelectionStyle;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   189  /** \brief type of conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   193      IfxVadc_ConversionType_Compatible = 0  /**< \brief Compatible Timing Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   194  } IfxVadc_ConversionType;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   196  /** \brief Specifies the External Coding scheme(binary/gray)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   197   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXCOD
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   198   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   199  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   200  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   201      IfxVadc_EmuxCodingScheme_binary = 0,  /**< \brief Output the Channel Number in Binary code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   202      IfxVadc_EmuxCodingScheme_gray   = 1   /**< \brief Output the channel number in gray code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   203  } IfxVadc_EmuxCodingScheme;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   205  /** \brief Specifies the Emux interface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   209      IfxVadc_EmuxInterface_0 = 0,  /**< \brief Emux Interface 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   210      IfxVadc_EmuxInterface_1 = 1   /**< \brief Emux Interface 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   211  } IfxVadc_EmuxInterface;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   213  /** \brief External Multiplexer sample time control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   214   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMXST
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   216  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   217  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   218      IfxVadc_EmuxSampleTimeControl_settingChanges = 0,  /**< \brief Use STCE Whenever Setting Changes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   219      IfxVadc_EmuxSampleTimeControl_always         = 1   /**< \brief Use STCE for each conversion of an external channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   220  } IfxVadc_EmuxSampleTimeControl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   222  /** \brief specifies the External Channel Start select value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   223   * defined in Ifx_VADC.G[x].EMUXCTR.B.EMUXSET
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   225  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   226  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   227      IfxVadc_EmuxSelectValue_0 = 0,      /**< \brief Start Selection Value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   228      IfxVadc_EmuxSelectValue_1,          /**< \brief Start Selection Value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   229      IfxVadc_EmuxSelectValue_2,          /**< \brief Start Selection Value 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   230      IfxVadc_EmuxSelectValue_3,          /**< \brief Start Selection Value 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   231      IfxVadc_EmuxSelectValue_4,          /**< \brief Start Selection Value 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   232      IfxVadc_EmuxSelectValue_5,          /**< \brief Start Selection Value 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   233      IfxVadc_EmuxSelectValue_6,          /**< \brief Start Selection Value 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   234      IfxVadc_EmuxSelectValue_7           /**< \brief Start Selection Value 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   235  } IfxVadc_EmuxSelectValue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   237  /** \brief Specifies External Multiplexer Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   238   * define in Ifx_VADC.G[x].EMUXCTR.B.EMUXMODE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   240  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   242      IfxVadc_ExternalMultiplexerMode_softwareControl = 0,  /**< \brief Disable The Emux Control */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   243      IfxVadc_ExternalMultiplexerMode_steady          = 1,  /**< \brief select steady mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   244      IfxVadc_ExternalMultiplexerMode_singleStep      = 2,  /**< \brief Select single step mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   245      IfxVadc_ExternalMultiplexerMode_sequence        = 3   /**< \brief Select Sequence Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   246  } IfxVadc_ExternalMultiplexerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   248  /** \brief FIFO mode enable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   250  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   252      IfxVadc_FifoMode_seperateResultRegister = 0,  /**< \brief seperate Result Register */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   253      IfxVadc_FifoMode_fifoStructure          = 1,  /**< \brief fifoStructure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   254      IfxVadc_FifoMode_maximumMode            = 2,  /**< \brief copy new result if bigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   255      IfxVadc_FifoMode_minimumMode            = 3   /**< \brief copy new result if it is smaller */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   256  } IfxVadc_FifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   258  /** \brief gating mode defined in MODULE_VADC.BRSMR.ENGT
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   260  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   261  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   262      IfxVadc_GatingMode_disabled   = 0,  /**< \brief Gating is disabled, no conversion request are issued */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   263      IfxVadc_GatingMode_always     = 1,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   264      IfxVadc_GatingMode_gatingHigh = 2,  /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   265      IfxVadc_GatingMode_gatingLow  = 3   /**< \brief Conversion request is issued if at least 1 conversion pending bit is set and the gating signal is low */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   266  } IfxVadc_GatingMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   268  /** \brief External trigger gating defined in MODULE_VADC.G[x].QCTRLy.GTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   270  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   272      IfxVadc_GatingSource_0 = 0,      /**< \brief Input signal REQGTx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   273      IfxVadc_GatingSource_1,          /**< \brief Input signal REQGTx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   274      IfxVadc_GatingSource_2,          /**< \brief Input signal REQGTx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   275      IfxVadc_GatingSource_3,          /**< \brief Input signal REQGTx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   276      IfxVadc_GatingSource_4,          /**< \brief Input signal REQGTx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   277      IfxVadc_GatingSource_5,          /**< \brief Input signal REQGTx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   278      IfxVadc_GatingSource_6,          /**< \brief Input signal REQGTx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   279      IfxVadc_GatingSource_7,          /**< \brief Input signal REQGTx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   280      IfxVadc_GatingSource_8,          /**< \brief Input signal REQGTx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   281      IfxVadc_GatingSource_9,          /**< \brief Input signal REQGTx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   282      IfxVadc_GatingSource_10,         /**< \brief Input signal REQGTx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   283      IfxVadc_GatingSource_11,         /**< \brief Input signal REQGTx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   284      IfxVadc_GatingSource_12,         /**< \brief Input signal REQGTx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   285      IfxVadc_GatingSource_13,         /**< \brief Input signal REQGTx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   286      IfxVadc_GatingSource_14,         /**< \brief Input signal REQGTx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   287      IfxVadc_GatingSource_15          /**< \brief Input signal REQGTx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   288  } IfxVadc_GatingSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   290  /** \brief inputClass defined in MODULE_VADC.G[x].CHCTR[y].B.ICLSEL(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   292  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   293  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   294      IfxVadc_InputClasses_group0  = 0,  /**< \brief Use group class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   295      IfxVadc_InputClasses_group1  = 1,  /**< \brief Use group class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   296      IfxVadc_InputClasses_global0 = 2,  /**< \brief Use global class 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   297      IfxVadc_InputClasses_global1 = 3   /**< \brief Use global class 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   298  } IfxVadc_InputClasses;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   300  /** \brief ADC channel limit check defined in MODULE_VADC.G[x].CHCTR[y].B.CHEVMODE(x=0,1,...,11;y=0,1....,16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   301   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   302  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   303  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   304      IfxVadc_LimitCheck_noCheck            = 0,  /**< \brief Normal compare mode Event Never Fast Compare mode Event Never */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   305      IfxVadc_LimitCheck_eventIfInArea      = 1,  /**< \brief Normal compare mode Event If result is inside the boundary band    Fast Compare mode Event If result switches to high (above comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   306      IfxVadc_LimitCheck_eventIfOutsideArea = 2,  /**< \brief Normal compare mode Event If result is outside the boundary band   Fast Compare mode Event If result switches to low (below comp. value) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   307      IfxVadc_LimitCheck_always             = 3   /**< \brief Normal compare mode Event Always   Fast Compare mode Event Always */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   308  } IfxVadc_LimitCheck;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   310  /** \brief Low Power Supply Voltage Select
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   312  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   314      IfxVadc_LowSupplyVoltageSelect_5V = 0,  /**< \brief 5V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   315      IfxVadc_LowSupplyVoltageSelect_3V = 1   /**< \brief 3.3V Power Supply is Connected */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   316  } IfxVadc_LowSupplyVoltageSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   318  /** \brief Access protection for Group registers defined in MODULE_VADC.ACCPROT0.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   319   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   320  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   321  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   322      IfxVadc_Protection_channelControl0       = 0,   /**< \brief Access control for GxCHCTR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   323      IfxVadc_Protection_channelControl1       = 1,   /**< \brief Access control for GxCHCTR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   324      IfxVadc_Protection_channelControl2       = 2,   /**< \brief Access control for GxCHCTR2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   325      IfxVadc_Protection_channelControl3       = 3,   /**< \brief Access control for GxCHCTR3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   326      IfxVadc_Protection_channelControl4       = 4,   /**< \brief Access control for GxCHCTR4 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   327      IfxVadc_Protection_channelControl5       = 5,   /**< \brief Access control for GxCHCTR5 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   328      IfxVadc_Protection_channelControl6       = 6,   /**< \brief Access control for GxCHCTR6 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   329      IfxVadc_Protection_channelControl7       = 7,   /**< \brief Access control for GxCHCTR7 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   330      IfxVadc_Protection_channelControl8       = 8,   /**< \brief Access control for GxCHCTR8 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   331      IfxVadc_Protection_channelControl9       = 9,   /**< \brief Access control for GxCHCTR9 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   332      IfxVadc_Protection_channelControl10      = 10,  /**< \brief Access control for GxCHCTR10 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   333      IfxVadc_Protection_channelControl11      = 11,  /**< \brief Access control for GxCHCTR11 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   334      IfxVadc_Protection_channelControl12      = 12,  /**< \brief Access control for GxCHCTR12 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   335      IfxVadc_Protection_channelControl13      = 13,  /**< \brief Access control for GxCHCTR13 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   336      IfxVadc_Protection_channelControl14      = 14,  /**< \brief Access control for GxCHCTR14 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   337      IfxVadc_Protection_externalMultiplexer   = 15,  /**< \brief Access control for EMUXSEL, GxEMUXCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   338      IfxVadc_Protection_initGroup0            = 16,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   339      IfxVadc_Protection_initGroup1            = 17,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   340      IfxVadc_Protection_initGroup2            = 18,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   341      IfxVadc_Protection_initGroup3            = 19,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   342      IfxVadc_Protection_initGroup4            = 20,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   343      IfxVadc_Protection_initGroup5            = 21,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   344      IfxVadc_Protection_initGroup6            = 22,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   345      IfxVadc_Protection_initGroup7            = 23,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   346      IfxVadc_Protection_initGroup8            = 24,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   347      IfxVadc_Protection_initGroup9            = 25,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   348      IfxVadc_Protection_initGroup10           = 26,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   349      IfxVadc_Protection_initGroup11           = 27,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   350      IfxVadc_Protection_initGroup12           = 28,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   351      IfxVadc_Protection_initGroup13           = 29,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   352      IfxVadc_Protection_initGroup14           = 30,  /**< \brief Access control for GxARBCFG, GxARBPR, GxCHASS, GxRRASS, GxICLASS0/1, GxSYNCTR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   353      IfxVadc_Protection_globalConfig          = 31,  /**< \brief Access control for GLOBCFG */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   354      IfxVadc_Protection_serviceGroup0         = 32,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   355      IfxVadc_Protection_serviceGroup1         = 33,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   356      IfxVadc_Protection_serviceGroup2         = 34,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   357      IfxVadc_Protection_serviceGroup3         = 35,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   358      IfxVadc_Protection_serviceGroup4         = 36,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   359      IfxVadc_Protection_serviceGroup5         = 37,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   360      IfxVadc_Protection_serviceGroup6         = 38,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   361      IfxVadc_Protection_serviceGroup7         = 39,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   362      IfxVadc_Protection_serviceGroup8         = 40,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   363      IfxVadc_Protection_serviceGroup9         = 41,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   364      IfxVadc_Protection_serviceGroup10        = 42,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   365      IfxVadc_Protection_serviceGroup11        = 43,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   366      IfxVadc_Protection_serviceGroup12        = 44,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   367      IfxVadc_Protection_serviceGroup13        = 45,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   368      IfxVadc_Protection_serviceGroup14        = 46,  /**< \brief Access control for GxSEFLAG, GxSEVNP, GxCEFLAG, GxCEVNP0/1/2, GxREFLAG, GxREVNP0/1, GxSRACT */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   369      IfxVadc_Protection_testFunction          = 47,  /**< \brief Access control for GLOBTF */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   370      IfxVadc_Protection_resultRegisterGroup0  = 48,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   371      IfxVadc_Protection_resultRegisterGroup1  = 49,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   372      IfxVadc_Protection_resultRegisterGroup2  = 50,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   373      IfxVadc_Protection_resultRegisterGroup3  = 51,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   374      IfxVadc_Protection_resultRegisterGroup4  = 52,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   375      IfxVadc_Protection_resultRegisterGroup5  = 53,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   376      IfxVadc_Protection_resultRegisterGroup6  = 54,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   377      IfxVadc_Protection_resultRegisterGroup7  = 55,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   378      IfxVadc_Protection_resultRegisterGroup8  = 56,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   379      IfxVadc_Protection_resultRegisterGroup9  = 57,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   380      IfxVadc_Protection_resultRegisterGroup10 = 58,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   381      IfxVadc_Protection_resultRegisterGroup11 = 59,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   382      IfxVadc_Protection_resultRegisterGroup12 = 60,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   383      IfxVadc_Protection_resultRegisterGroup13 = 61,  /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   384      IfxVadc_Protection_resultRegisterGroup14 = 62   /**< \brief Access control for GxRCRx(x=0,1,..,15), GxBOUND, GxRESx(x=0 .. 15) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   385  } IfxVadc_Protection;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   387  /** \brief Arbitration priority, Group x,defined in MODULE_VADC.G[x].ARBPR.PRIOy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   389  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   390  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   391      IfxVadc_RequestSlotPriority_lowest  = 0, /**< \brief Lowest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   392      IfxVadc_RequestSlotPriority_low     = 1, /**< \brief Lowpriority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   393      IfxVadc_RequestSlotPriority_high    = 2, /**< \brief High priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   394      IfxVadc_RequestSlotPriority_highest = 3  /**< \brief Highest priority */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   395  } IfxVadc_RequestSlotPriority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   397  /** \brief Request source start mode defined in MODULE_VADC.G[x].ARBPR.CSMy(x=0,1,...,11;y=0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   398   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   399  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   400  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   401      IfxVadc_RequestSlotStartMode_waitForStart       = 0, /**< \brief Wait for start */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   402      IfxVadc_RequestSlotStartMode_cancelInjectRepeat = 1  /**< \brief Cancel-Inject-Repeat */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   403  } IfxVadc_RequestSlotStartMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   405  /** \brief Request sources
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   406   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   407  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   408  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   409      IfxVadc_RequestSource_queue      = 0, /**< \brief 8 stage Queue request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   410      IfxVadc_RequestSource_scan       = 1, /**< \brief scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   411      IfxVadc_RequestSource_background = 2  /**< \brief background scan request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   412  } IfxVadc_RequestSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   414  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   415   * Definition in Ifx_VADC.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   416   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   417  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   418  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   419      IfxVadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   420      IfxVadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   421  } IfxVadc_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   423  /** \brief Service Node defined in MODULE_VADC.G[x].SRACT.U(x= 0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   425  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   426  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   427      IfxVadc_SrcNr_group0  = 0,  /**< \brief service request line 0 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   428      IfxVadc_SrcNr_group1  = 1,  /**< \brief service request line 1 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   429      IfxVadc_SrcNr_group2  = 2,  /**< \brief service request line 2 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   430      IfxVadc_SrcNr_group3  = 3,  /**< \brief service request line 3 of group */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   431      IfxVadc_SrcNr_shared0 = 4,  /**< \brief Select shared service request line 0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   432      IfxVadc_SrcNr_shared1 = 5,  /**< \brief Select shared service request line 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   433      IfxVadc_SrcNr_shared2 = 6,  /**< \brief Select shared service request line 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   434      IfxVadc_SrcNr_shared3 = 7   /**< \brief Select shared service request line 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   435  } IfxVadc_SrcNr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   437  /** \brief API return values defined in
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   438   * MODULE_VADC.G[x].QSR0.U,MODULE_VADC.G[x].ASPND.U
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   439   * MODULE_VADC.BRSPND[x](x=0,1,...,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   440   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   441  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   442  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   443      IfxVadc_Status_noError              = 0, /**< \brief No error during api execution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   444      IfxVadc_Status_notInitialised       = 1, /**< \brief Appropriate initialisation not done */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   445      IfxVadc_Status_invalidGroup         = 2, /**< \brief Invalid group number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   446      IfxVadc_Status_invalidChannel       = 3, /**< \brief Invalid channel number */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   447      IfxVadc_Status_queueFull            = 4, /**< \brief Queue is full */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   448      IfxVadc_Status_noAccess             = 5, /**< \brief Access to the group/channel is disabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   449      IfxVadc_Status_channelsStillPending = 6  /**< \brief Conversion for some of the channels are still pending */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   450  } IfxVadc_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   452  /** \brief trigger definition defined in MODULE_VADC.G[x].QCTRL0.XTMODE(x=0,1,..,11)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   453   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   454  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   455  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   456      IfxVadc_TriggerMode_noExternalTrigger = 0,  /**< \brief No external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   457      IfxVadc_TriggerMode_uponFallingEdge   = 1,  /**< \brief Trigger event upon a falling edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   458      IfxVadc_TriggerMode_uponRisingEdge    = 2,  /**< \brief Trigger event upon a rising edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   459      IfxVadc_TriggerMode_uponAnyEdge       = 3   /**< \brief Trigger event upon any edge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   460  } IfxVadc_TriggerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   462  /** \brief Trigger request source defined in MODULE_VADC.G[x].QCTRLy.XTSEL(x=0,1,..,11;y=0,1,..,7)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   463   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   464  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   466      IfxVadc_TriggerSource_0 = 0,      /**< \brief Input signal REQTRx_0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   467      IfxVadc_TriggerSource_1,          /**< \brief Input signal REQTRx_1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   468      IfxVadc_TriggerSource_2,          /**< \brief Input signal REQTRx_2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   469      IfxVadc_TriggerSource_3,          /**< \brief Input signal REQTRx_3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   470      IfxVadc_TriggerSource_4,          /**< \brief Input signal REQTRx_4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   471      IfxVadc_TriggerSource_5,          /**< \brief Input signal REQTRx_5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   472      IfxVadc_TriggerSource_6,          /**< \brief Input signal REQTRx_6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   473      IfxVadc_TriggerSource_7,          /**< \brief Input signal REQTRx_7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   474      IfxVadc_TriggerSource_8,          /**< \brief Input signal REQTRx_8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   475      IfxVadc_TriggerSource_9,          /**< \brief Input signal REQTRx_9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   476      IfxVadc_TriggerSource_10,         /**< \brief Input signal REQTRx_10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   477      IfxVadc_TriggerSource_11,         /**< \brief Input signal REQTRx_11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   478      IfxVadc_TriggerSource_12,         /**< \brief Input signal REQTRx_12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   479      IfxVadc_TriggerSource_13,         /**< \brief Input signal REQTRx_13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   480      IfxVadc_TriggerSource_14,         /**< \brief Input signal REQTRx_14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   481      IfxVadc_TriggerSource_15          /**< \brief Input signal REQTRx_15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   482  } IfxVadc_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   484  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   486  /** \addtogroup IfxLld_Vadc_Std_Background_Autoscan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   487   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   489  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   490  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   491  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   492  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   493  /** \brief access function to enable/disable  wait for read mode for result registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   494   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   495   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   496   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   499  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   501  /** \brief access function to enable/disable  wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   502   * \param vadc pointer to the VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   503   * \param waitForRead wait for read mode enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   504   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   505   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   506  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   508  /** \brief Enables the background sacn external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   509   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   510   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   511   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   512  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   514  /** \brief Gets the background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   515   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   516   * \return background scan gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   518  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   520  /** \brief Gets the gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   521   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   522   * \return background scan gating input selection.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   523   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   524  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   526  /** \brief Gets the requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   527   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   528   * \return requested background scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   529   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   530  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   531  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   532  /** \brief Gets the requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   533   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   534   * \return requested background scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   535   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   536  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   537  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   538  /** \brief Gets the background scan trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   539   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   540   * \return Gets the background scan external trigger source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   541   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   542  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   543  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   544  /** \brief Gets the background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   545   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   546   * \return background scan external trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   547   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   548  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   549  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   550  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   551   * \param vadc Pointer to the VADC Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   552   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   553   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   555  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   557  /** \brief return conversion result stored in the Global result Register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   558   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   559   * \return global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   560   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   561   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   562   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   563   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   564   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   565   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   566   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   567   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   568   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   569   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   570   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   571   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   572   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   573   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   574   * IfxVadc_SetAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   575   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   576   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   577   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   578   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   579   * Ifx_VADC_GLOBRES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   580   * result = IfxVadc_getGlobalResult (vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   581   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   582   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   583   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   584   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   585  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   586  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   587  /** \brief get global input class sample time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   588   * \param vadc Pointer to the VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   589   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   590   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   591   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   592   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   593  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   594  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   595  /** \brief Get conversion result for the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   596   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   597   * \param results pointer to scaled conversion results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   598   * \param resultOffset offset for the first result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   599   * \param numResults number of results
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   600   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   601   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   602   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   603   * Ifx_VADC* vadc = &MODULE_VADC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   604   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   605   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   606   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   607   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   608   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   609   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   610   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   611   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   612   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   613   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   614   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   615   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   616   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   617   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   618   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   619   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   620   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   621   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   622   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   623   * // fetch the 2 results of conversion for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   624   * Ifx_VADC_RES results[10];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   625   * result = IfxVadc_getGroupResult(group, results, 0, 2);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   626   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   627   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   628   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   629  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   630  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   631  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   632   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   633   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   634   * \param resultIdx result register index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   635   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   636   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   637   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   638   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   639   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   640   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   641   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   642   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   643   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   644   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   645   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   646   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   647   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   648   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   649   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   650   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   651   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   652   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   653   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   654   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   655   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   656   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   657   * // fetch the result of conversion from result register 0 for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   658   * Ifx_VADC_RES result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   659   * result = IfxVadc_getResult(group, IfxVadc_ChannelResult0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   660   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   661   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   662   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   663  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   665  /** \brief Returns the auto background scan status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   666   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   667   * \return TRUE if enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   668   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   669  IFX_INLINE boolean IfxVadc_isAutoBackgroundScanEnabled(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   671  /** \brief Returns the background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   672   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   673   * \return background scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   675  IFX_INLINE boolean IfxVadc_isRequestBackgroundScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   677  /** \brief Enables/Disables continuous background auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   678   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   679   * \param autoBackgroundScanEnable whether auto background scan enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   680   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   681   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   682  IFX_INLINE void IfxVadc_setAutoBackgroundScan(Ifx_VADC *vadc, boolean autoBackgroundScanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   684  /** \brief configures a background scan; can also stop autoscan if all channels are 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   685   * \param vadc pointer to the VADC module registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   686   * \param groupId group index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   687   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   688   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   689   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   690   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   691   * Background scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   692   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   693   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   694   * Ifx_VADC* vadc = &MODULE_VADC; // module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   695   * IfxVadc_GroupId groupId = IfxVadc_GroupId0; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   696   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   697   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   698   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   699   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   700   * IfxVadc_configureWaitForReadModeForGlobalResultRegister(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   701   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   702   * // configure background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   703   * IfxVadc_setBackgroundScan(vadc, groupId, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   704   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   705   * // enable auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   706   * IfxVadc_setAutoBackgroundScan(vadc, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   707   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   708   * // start the background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   709   * IfxVadc_startBackgroundScan(vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   710   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   711   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   712   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   713  IFX_INLINE void IfxVadc_setBackgroundScan(Ifx_VADC *vadc, IfxVadc_GroupId groupId, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   715  /** \brief Sets the background scan slot gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   716   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   717   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   718   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   719   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   720   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   721  IFX_INLINE void IfxVadc_setBackgroundScanSlotGatingConfig(Ifx_VADC *vadc, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   722  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   723  /** \brief Sets the background scan exteranal trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   724   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   725   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   726   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   727   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   728   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   729  IFX_INLINE void IfxVadc_setBackgroundScanSlotTriggerConfig(Ifx_VADC *vadc, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   731  /** \brief Starts a background scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   732   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   733   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   734   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   735   * \see IfxVadc_setBackgroundScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   736   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   737   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   738  IFX_INLINE void IfxVadc_startBackgroundScan(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   739  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   740  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   741  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   742  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   743  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   744  /** \brief Gives the background scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   745   * \param vadc pointer to the VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   746   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   747   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   748  IFX_EXTERN IfxVadc_Status IfxVadc_getBackgroundScanStatus(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   750  /** \brief Get conversion result (Function does not care about the alignment)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   751   * value = raw * gain + offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   752   * \param vadc VADC module pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   753   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   754   * \param channel channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   755   * \param sourceType type of request source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   756   * \return scaled Conversion result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   757   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   758   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   759   * Ifx_VADC vadc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   760   * vadc.vadc = &MODULE_VADC;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   761   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   762   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   763   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   764   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   765   * //confiure wait for read mode for global result register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   766   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult0, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   767   * IfxVadc_configureWaitForReadMode(group,IfxVadc_ChannelResult1, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   768   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   769   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   770   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   771   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   772   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   773   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   774   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   775   * // wait for conversion to finish
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   776   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   777   * // fetch the result of conversion for channel 2 of group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   778   * Ifx_VADC_RESresult2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   779   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId2, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   780   * Ifx_VADC_RESresult5;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   781   * result = IfxVadc_getResultBasedOnRequestSource(&vadc, group, IfxVadc_ChannelId5, IfxVadc_RequestSource_scan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   782   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   783   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   785  IFX_EXTERN Ifx_VADC_RES IfxVadc_getResultBasedOnRequestSource(Ifx_VADC *vadc, Ifx_VADC_G *group, IfxVadc_ChannelId channel, IfxVadc_RequestSource sourceType);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   787  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   789  /** \addtogroup IfxLld_Vadc_Std_ChannelScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   790   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   792  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   793  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   795  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   796  /** \brief Disables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   797   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   798   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   799   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   800  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   801  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   802  /** \brief Enables the scan slot external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   803   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   806  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   808  /** \brief Gets the request scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   809   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   810   * \return requested scan slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   811   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   812  IFX_INLINE IfxVadc_GatingMode IfxVadc_getScanSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   813  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   814  /** \brief Gets the request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   815   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   816   * \return request scan slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   817   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   818  IFX_INLINE IfxVadc_GatingSource IfxVadc_getScanSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   819  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   820  /** \brief Gets the request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   821   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   822   * \return request scan slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   823   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   824  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getScanSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   825  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   826  /** \brief Gets the request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   827   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   828   * \return request scan slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   829   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   830  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getScanSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   831  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   832  /** \brief Gets the requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   833   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   834   * \return requested scan slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   835   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   836  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getScanSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   838  /** \brief Gets the requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   839   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   840   * \return requested scan slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   841   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   842  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getScanSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   844  /** \brief Gets the auto scan enable status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   845   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   846   * \return TRUE if auto scan enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   847   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   848  IFX_INLINE boolean IfxVadc_isAutoScanEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   850  /** \brief Returns the scan slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   851   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   852   * \return TRUE if scan slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   853   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   854  IFX_INLINE boolean IfxVadc_isRequestScanSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   856  /** \brief Enables/Disables continuous auto scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   857   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   858   * \param autoscanEnable whether autoscan is enabled or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   859   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   860   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   861  IFX_INLINE void IfxVadc_setAutoScan(Ifx_VADC_G *vadcG, boolean autoscanEnable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   862  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   863  /** \brief Sets the scan slot gating configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   864   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   865   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   866   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   867   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   868   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   869  IFX_INLINE void IfxVadc_setScanSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   870  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   871  /** \brief Sets the scan slot trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   872   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   873   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   874   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   875   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   877  IFX_INLINE void IfxVadc_setScanSlotTriggerConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   879  /** \brief Starts an autoscan on the specified group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   880   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   881   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   882   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   883   * See \ref IfxVadc_setScan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   884   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   886  IFX_INLINE void IfxVadc_startScan(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   888  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   889  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   890  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   891  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   892  /** \brief Gives the scan status for a group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   893   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   894   * \return IfxVadc_Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   895   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   896  IFX_EXTERN IfxVadc_Status IfxVadc_getScanStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   897  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   898  /** \brief Configures an (auto-)scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   899   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   900   * \param channels specifies the channels which should be enabled/disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   901   * \param mask specifies the channels which should be modified
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   902   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   903   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   904   * (Auto-)Scan can be enabled/disabled for the given channels which are selected with the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   905   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   906   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   907   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   908   * uint32 channels = (1 << 5) | (1 << 2); // enable channel #5 and #2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   909   * uint32 mask = (1 << 7) | (1 << 5) | (1 << 2); // modify the selection for channel #7, #5 and #2; channel #7 will be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   910   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   911   * // configure scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   912   * IfxVadc_setScan(group, channels, mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   913   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   914   * // enable Auto-Scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   915   * IfxVadc_setAutoScan(group, TRUE);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   916   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   917   * // start the scan
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   918   * IfxVadc_startScan(group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   919   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   920   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   921   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   922  IFX_EXTERN void IfxVadc_setScan(Ifx_VADC_G *group, uint32 channels, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   923  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   924  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   926  /** \addtogroup IfxLld_Vadc_Std_QueueRequest
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   927   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   929  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   930  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   931  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   932  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   933  /** \brief Add an entry to the queue of a group for the specified channel with the following options set:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   934   * refill incase of aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   935   * source interrupt enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   936   * external trigger control of the aborted conversion
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   937   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   938   * \param channel specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   939   * \param options specifies the refill, source interrupt enable/disable and external trigger control selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   940   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   941   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   942   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   943   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   944   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   945   * IfxVadc_ChannelId channel = 1; // for channel 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   946   * // Add channel 1 to queue of group 0 with the refill turned on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   947   * IfxVadc_addToQueue(qroup, channel, (1<<IFX_VADC_G_QBUR0_RF_OFF));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   948   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   949   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   950   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   951  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   952  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   953  /** \brief Clears all the queue entries including backup stage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   954   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   955   * \param flushQueue Whether queue is cleared or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   956   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   957   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   958  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   959  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   960  /** \brief Disables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   961   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   962   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   964  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   966  /** \brief Enables the external trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   967   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   968   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   969   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   970  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   972  /** \brief Gets the requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   973   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   974   * \return requested queue slot gating mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   975   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   976  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   977  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   978  /** \brief Gets the requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   979   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   980   * \return requested queue slot gating input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   981   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   982  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   983  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   984  /** \brief Gets the request queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   985   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   986   * \return requested queue slot priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   988  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   990  /** \brief Gets the requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   991   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   992   * \return requested queue slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   994  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   996  /** \brief Gets the requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   997   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   998   * \return requested queue slot trigger input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1000  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1002  /** \brief Gets the requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1003   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1004   * \return requested queue slot trigger mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1005   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1006  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1008  /** \brief Returns the queue slot requested status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1009   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1010   * \return TRUE if queue slot request enabled otherwise FALSE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1012  IFX_INLINE boolean IfxVadc_isRequestQueueSlotEnabled(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1014  /** \brief Sets the gating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1015   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1016   * \param gatingSource gate input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1017   * \param gatingMode gating mode. High level, Low Level  or Gating disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1018   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1020  IFX_INLINE void IfxVadc_setQueueSlotGatingConfig(Ifx_VADC_G *vadcG, IfxVadc_GatingSource gatingSource, IfxVadc_GatingMode gatingMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1022  /** \brief Sets the trigger operating configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1023   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1024   * \param triggerMode trigger mode. Rising, falling any edge leads to an trigger event.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1025   * \param triggerSource trigger input for group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1026   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1027   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1028  IFX_INLINE void IfxVadc_setQueueSlotTriggerOperatingConfig(Ifx_VADC_G *vadcG, IfxVadc_TriggerMode triggerMode, IfxVadc_TriggerSource triggerSource);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1030  /** \brief Starts a queue of a group by generating a trigger event through software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1031   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1032   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1033   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1034  IFX_INLINE void IfxVadc_startQueue(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1036  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1038  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1040  /** \brief Gives the status of the Queue of a group by returning non zero value if the Queue is full
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1041   * \param group pointer to the VADC group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1042   * \return status of the Queue
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1043   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1044   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1045   * Ifx_VADC_G* group = &MODULE_VADC.G[0]; // for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1046   * boolean queueFull = (IfxVadc_getQueueStatus(group)==IfxVadc_Status_queueFull)?TRUE:FALSE; // get Queue status for group 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1047   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1048   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1049   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1050  IFX_EXTERN IfxVadc_Status IfxVadc_getQueueStatus(Ifx_VADC_G *group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1051  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1052  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1054  /** \addtogroup IfxLld_Vadc_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1055   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1056  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1057  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1058  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1059  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1061  /** \brief Initializes a EMUX output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1062   * \param emux the Emux Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1063   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1064   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1065   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1066   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1067  IFX_INLINE void IfxVadc_initEmuxPin(const IfxVadc_Emux_Out *emux, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1068  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1069  /** \brief Initializes a GxBFL output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1070   * \param gxBfl the GxBFL Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1071   * \param outputMode the pin output mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1072   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1073   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1074   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1075  IFX_INLINE void IfxVadc_initGxBflPin(const IfxVadc_GxBfl_Out *gxBfl, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1076  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1077  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1078  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1079  /** \addtogroup IfxLld_Vadc_Std_Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1080   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1081  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1082  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1083  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1084  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1085  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1086  /** \brief Calculate the time using analog frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1087   * \param analogFrequency analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1088   * \param sampleTime sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1089   * \return sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1090   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1091  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1092  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1093  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1094  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1095  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1096  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1097  /** \brief Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1098   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1099   * \return Returns the configured Fadci VADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1100   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1101  IFX_EXTERN float32 IfxVadc_getAdcAnalogFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1103  /** \brief Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1104   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1105   * \return Returns the configured Fadcd VADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1107  IFX_EXTERN float32 IfxVadc_getAdcDigitalFrequency(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1109  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1111  /** \addtogroup IfxLld_Vadc_Std_Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1112   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1115  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1118  /** \brief Clears the all group requests.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1119   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1120   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1122  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1124  /** \brief Gets the ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1125   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1126   * \return ADC group arbitration round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1127   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1128  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1130  /** \brief Gets the channel esult service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1131   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1132   * \return channel result service request node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1133   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1134  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1135  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1136  /** \brief Gets the channel esult service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1137   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1138   * \return channel result service request node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1139   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1140  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1141  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1142  /** \brief Gets the channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1143   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1144   * \return channel service request node pointer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1146  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1148  /** \brief Gets the configured master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1149   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1150   * \return configured master kernel index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1152  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1154  /** \brief Resets the ADC group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1155   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1156   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1158  IFX_INLINE void IfxVadc_resetGroup(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1160  /** \brief Sets analog converter group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1161   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1162   * \param analogConverterMode group analog converter mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1163   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1164   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1165  IFX_INLINE void IfxVadc_setAnalogConvertControl(Ifx_VADC_G *vadcG, IfxVadc_AnalogConverterMode analogConverterMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1167  /** \brief Sets the arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1168   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1169   * \param arbiterRoundLength arbiter round length.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1172  IFX_INLINE void IfxVadc_setArbitrationRoundLength(Ifx_VADC_G *vadcG, IfxVadc_ArbitrationRounds arbiterRoundLength);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1174  /** \brief Sets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1175   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1176   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1177   * \param resolution ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1178   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1180  IFX_INLINE void IfxVadc_setGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1182  /** \brief Sets the ADC input class sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1183   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1184   * \param inputClassNum input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1185   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1186   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1187   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1188   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1189  IFX_INLINE void IfxVadc_setGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1190  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1191  /** \brief Sets the master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1192   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1193   * \param masterIndex master index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1194   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1195   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1196  IFX_INLINE void IfxVadc_setMasterIndex(Ifx_VADC_G *vadcG, uint8 masterIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1197  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1198  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1199  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1200  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1202  /** \brief Sets the Arbiter slot configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1203   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1204   * \param slotEnable enable/disable of slot.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1205   * \param prio channel request priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1206   * \param mode Channel Slot start mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1207   * \param slot channel slot Request source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1208   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1210  IFX_EXTERN void IfxVadc_setArbiterPriority(Ifx_VADC_G *vadcG, boolean slotEnable, IfxVadc_RequestSlotPriority prio, IfxVadc_RequestSlotStartMode mode, IfxVadc_RequestSource slot);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1212  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1213  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1214  /** \addtogroup IfxLld_Vadc_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1215   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1217  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1218  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1219  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1221  /** \brief Disable VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1222   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1224   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1225  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1226  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1227  /** \brief Enable VADC kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1228   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1231  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1233  /** \brief gets ADC Calibration Flag CAL status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1234   * \param vadc pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1235   * \param adcCalGroupNum ADC CAL group number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1236   * \return CAL group status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1238  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1240  /** \brief Gets the global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1241   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1242   * \return global control configuration value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1243   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1244  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1246  /** \brief get SUCAL bit field status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1247   * \param vadc Pointer to VADC Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1248   * \return Indicate the start-up calibration phase
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1250  IFX_INLINE boolean IfxVadc_getStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1252  /** \brief initiates the calibration pulse phase.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1253   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1256  IFX_INLINE void IfxVadc_initiateStartupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1258  /** \brief Sets the channel conversion mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1259   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1260   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1261   * \param resolution ADC channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1264  IFX_INLINE void IfxVadc_setGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1266  /** \brief Sets the sample time of ADC global class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1267   * \param vadc pointer to VADC module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1268   * \param inputClassNum global input class  number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1269   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1270   * \param sampleTime the requested sample time for input class in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1271   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1272   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1273  IFX_INLINE void IfxVadc_setGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1275  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1276   * \param vadc pointer to VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1277   * \param mode mode selection (enable/disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1280  IFX_INLINE void IfxVadc_setSleepMode(Ifx_VADC *vadc, IfxVadc_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1282  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1283  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1284  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1286  /** \brief Disable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1287   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1288   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1289   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1290   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1291  IFX_EXTERN void IfxVadc_disableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1293  /** \brief Disables the post calibration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1294   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1295   * \param group Index of the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1296   * \param disable disable or not.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1299  IFX_EXTERN void IfxVadc_disablePostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group, boolean disable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1301  /** \brief Enable write access to the VADC config/control registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1302   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1303   * \param protectionSet Index of the bit in the ACCPROTx {x=0/1} for which write access is to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1306  IFX_EXTERN void IfxVadc_enableAccess(Ifx_VADC *vadc, IfxVadc_Protection protectionSet);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1308  /** \brief Enables the CCU6 based ADC group synchronisation as workaround for Erratum ADC_TC.068
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1309   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1310   * \param ccu6Num selects CCU60 or CCU61
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1311   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1313  IFX_EXTERN void IfxVadc_enableGroupSync(Ifx_VADC *vadc, uint32 ccu6Num);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1315  /** \brief Module Frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1316   * \return Module Frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1318  IFX_EXTERN float32 IfxVadc_getAdcModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1320  /** \brief Gives the SRC source address.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1321   * \param group Index of the group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1322   * \param index SRC number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1323   * \return SRC source address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1325  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxVadc_getSrcAddress(IfxVadc_GroupId group, IfxVadc_SrcNr index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1327  /** \brief Initialises ADC arbiter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1328   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1329   * \param arbiterClockDivider ADC arbiter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1330   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1331   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1332  IFX_EXTERN void IfxVadc_initialiseAdcArbiterClock(Ifx_VADC *vadc, uint32 arbiterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1334  /** \brief Initialises the ADC Converter clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1335   * \param vadc pointer to the base of VADC registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1336   * \param converterClockDivider ADC converter clock divider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1339  IFX_EXTERN void IfxVadc_initialiseAdcConverterClock(Ifx_VADC *vadc, uint32 converterClockDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1341  /** \brief Configure the FadcD vadc digital clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1342   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1343   * \param fAdcD ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1344   * \return calculated ADC digital clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1346  IFX_EXTERN uint32 IfxVadc_initializeFAdcD(Ifx_VADC *vadc, uint32 fAdcD);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1348  /** \brief Configure the ADC analog clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1349   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1350   * \param fAdcI ADC analog clock clock frequency in Hz. Range = [5000000, 10000000].
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1351   * \return ADC analog clock frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1352   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1353  IFX_EXTERN uint32 IfxVadc_initializeFAdcI(Ifx_VADC *vadc, uint32 fAdcI);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1354  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1355  /** \brief Return the post calibration status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1356   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1357   * \param group specifies Group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1358   * \return TRUE if the post calibration is enabled for the group else false
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1359   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1360  IFX_EXTERN boolean IfxVadc_isPostCalibration(Ifx_VADC *vadc, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1361  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1362  /** \brief Resets the kernel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1363   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1364   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1366  IFX_EXTERN void IfxVadc_resetKernel(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1368  /** \brief Select Low Power Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1369   * \param vadc Pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1370   * \param supplyVoltage Select Supply Voltage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1373  IFX_EXTERN void IfxVadc_selectPowerSupplyVoltage(Ifx_VADC *vadc, IfxVadc_LowSupplyVoltageSelect supplyVoltage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1375  /** \brief Starts ADC calibration and wait for the end of the calibration process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1376   * \param vadc pointer to the base of VADC registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1377   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1379  IFX_EXTERN void IfxVadc_startupCalibration(Ifx_VADC *vadc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1381  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1382  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1383  /** \addtogroup IfxLld_Vadc_Std_Channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1384   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1386  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1387  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1388  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1389  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1390  /** \brief Clears the channel request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1391   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1392   * \param channelId channel id whose request to be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1393   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1394   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1395  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1396  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1397  /** \brief Enables the FIFO mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1398   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1399   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1400   * \param fifoMode FIFO mode .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1401   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1402   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1403  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1405  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1406   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1407   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1410  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1412  /** \brief Gets the group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1413   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1414   * \return group's assigned channels.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1416  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1418  /** \brief Gets the current ADC channel control configurations.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1419   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1420   * \param channelIndex ADC channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1421   * \return current ADC channel control configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1422   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1423  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1424  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1425  /** \brief Gets the channel input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1426   * \param vadcG pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1427   * \param channelIndex specifies channel ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1428   * \return Input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1429   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1430  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1431  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1432  /** \brief Gets the ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1433   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1434   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1435   * \return ADC input class channel resolution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1437  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1439  /** \brief Gets the ADC input class channel sample time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1440   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1441   * \param inputClassNum ADC input class number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1442   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1443   * \return ADC input class channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1444   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1445  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1446  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1447  /** \brief Sets the channels with low priority as background channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1448   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1449   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1452  IFX_INLINE void IfxVadc_setBackgroundPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1454  /** \brief Sets the target for result background source.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1455   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1456   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1457   * \param globalResultUsage whether storage in global result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1458   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1459   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1460  IFX_INLINE void IfxVadc_setBackgroundResultTarget(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean globalResultUsage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1462  /** \brief Selects boundary extension.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1463   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1464   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1465   * \param boundaryMode boundary extension mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1466   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1468  IFX_INLINE void IfxVadc_setBoundaryMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundaryExtension boundaryMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1470  /** \brief Sets the channel event service request line.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1471   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1472   * \param channelSrcNr channel event Service Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1473   * \param channel channel number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1475   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1476  IFX_INLINE void IfxVadc_setChannelEventNodePointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1477  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1478  /** \brief Sets the channel input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1479   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1480   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1481   * \param inputClass group input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1482   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1483   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1484  IFX_INLINE void IfxVadc_setChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_InputClasses inputClass);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1486  /** \brief Sets the channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1487   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1488   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1489   * \param limitCheck channel event mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1490   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1491   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1492  IFX_INLINE void IfxVadc_setChannelLimitCheckMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_LimitCheck limitCheck);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1493  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1494  /** \brief Sets channel as priority channel with in the group.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1495   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1496   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1497   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1498   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1499  IFX_INLINE void IfxVadc_setGroupPriorityChannel(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1500  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1501  /** \brief Sets group's lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1502   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1503   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1504   * \param lowerBoundary group lower boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1505   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1506   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1507  IFX_INLINE void IfxVadc_setLowerBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection lowerBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1509  /** \brief Selects the refernce input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1510   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1511   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1512   * \param reference reference input.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1513   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1514   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1515  IFX_INLINE void IfxVadc_setReferenceInput(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelReference reference);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1516  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1517  /** \brief Sets result event node pointer 0.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1518   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1519   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1520   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1521   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1522   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1523  IFX_INLINE void IfxVadc_setResultNodeEventPointer0(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1524  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1525  /** \brief Sets result event node pointer 1.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1526   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1527   * \param resultSrcNr channel result event service node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1528   * \param resultRegister channel result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1529   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1530   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1531  IFX_INLINE void IfxVadc_setResultNodeEventPointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr resultSrcNr, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1532  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1533  /** \brief Sets result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1534   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1535   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1536   * \param rightAlignedStorage result store position.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1537   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1538   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1539  IFX_INLINE void IfxVadc_setResultPosition(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean rightAlignedStorage);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1540  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1541  /** \brief Sets channel synchronization request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1542   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1543   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1544   * \param synchonize whether channel synchronize or stand alone operation.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1547  IFX_INLINE void IfxVadc_setSyncRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, boolean synchonize);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1549  /** \brief Sets group's upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1550   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1551   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1552   * \param upperBoundary group upper boundary.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1553   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1554   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1555  IFX_INLINE void IfxVadc_setUpperBoundary(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_BoundarySelection upperBoundary);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1556  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1557  /** \brief Sets the group result register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1558   * \param vadcG pointer to VADC group registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1559   * \param channelIndex group channel id.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1560   * \param resultRegister result register for group result storage.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1561   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1562   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1563  IFX_INLINE void IfxVadc_storeGroupResult(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex, IfxVadc_ChannelResult resultRegister);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1566  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1569  /** \brief get channel conversion timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1570   * \param vadc Pointer to VADC module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1571   * \param group specifies the Group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1572   * \param inputClass Input class used
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1573   * \param analogFrequency ADC module analog frequency fadci in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1574   * \param moduleFrequency ADC module frequency fvadc in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1575   * \param conversionMode specifies the conversion mode (Standard conversion mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1576   * \return Channel conversion Time in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1577   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1578  IFX_EXTERN float32 IfxVadc_getChannelConversionTime(Ifx_VADC *vadc, IfxVadc_GroupId group, IfxVadc_InputClasses inputClass, float32 analogFrequency, float32 moduleFrequency, IfxVadc_ConversionType conversionMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1579  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1580  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1581  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1582  /** \addtogroup IfxLld_Vadc_Std_Emux
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1583   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1584  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1585  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1586  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1587  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1589  /** \brief get global input class resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1590   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1591   * \param inputClassNum global input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1592   * \return External channel resolution for global input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1593   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1594  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1595  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1596  /** \brief Get the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1597   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1598   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1599   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1600   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1601   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1602  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1603  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1604  /** \brief get the external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1605   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1606   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1607   * \return Adc input class External channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1608   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1609  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1610  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1611  /** \brief Gets the ADC input class sample time of external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1612   * \param vadcG Pointer to Register Group space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1613   * \param inputClassNum ADC input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1614   * \param analogFrequency ADC module analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1615   * \return ADC input class external channel sample time in sec.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1616   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1617  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1618  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1619  /** \brief set the external channel resolution of Global class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1620   * \param vadc pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1621   * \param inputClassNum Global Input Class Number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1622   * \param resolution External Channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1623   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1624   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1625  IFX_INLINE void IfxVadc_setEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1626  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1627  /** \brief Sets the sample time of ADC global class for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1628   * \param vadc Pointer to VADC Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1629   * \param inputClassNum Adc input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1630   * \param analogFrequency ADC analog Frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1631   * \param sampleTime the requested sample time for input class in sec
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1632   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1633   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1634  IFX_INLINE void IfxVadc_setEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1636  /** \brief set the external channel resolution of ADC input class
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1637   * \param vadcG pointer to VADC Group Register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1638   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1639   * \param resolution input class external channel resolution
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1640   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1641   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1642  IFX_INLINE void IfxVadc_setEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum, IfxVadc_ChannelResolution resolution);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1643  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1644  /** \brief Sets the ADC input class sample time for external channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1645   * \param vadcG Pointer to VADC Group Register Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1646   * \param inputClassNum input class number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1647   * \param analogFrequency ADC analog frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1648   * \param sampleTime request sample time in sec for input class.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1651  IFX_INLINE void IfxVadc_setEmuxGroupSampletime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency, float32 sampleTime);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1653  /** \brief Sets the Emux Interface for a particular group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1654   * \param vadc Pointer to VADC Module Space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1655   * \param emuxInterface specifies the EmuxInterface
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1656   * \param group specifies the group ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1657   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1658   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1659  IFX_INLINE void IfxVadc_setEmuxInterfaceForGroup(Ifx_VADC *vadc, IfxVadc_EmuxInterface emuxInterface, IfxVadc_GroupId group);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1660  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1661  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1662  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1663  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1664  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1665  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1666   * \param vadc pointer to Module space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1667   * \param vadcG Pointer to VADC group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1668   * \param mode External Multiplexer mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1669   * \param channels Specifies channel Id
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1670   * \param startChannel specifies the external channel value from which conversion to be carried out
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1671   * \param code Output the channel number in binary code/gray code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1672   * \param sampleTimeControl specifies when to use a sample time for external channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1673   * \param channelSelectionStyle External Multiplexer Channel Selection Style
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1674   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1675   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1676  IFX_EXTERN void IfxVadc_configExternalMultiplexerMode(Ifx_VADC *vadc, Ifx_VADC_G *vadcG, IfxVadc_ExternalMultiplexerMode mode, uint8 channels, IfxVadc_EmuxSelectValue startChannel, IfxVadc_EmuxCodingScheme code, IfxVadc_EmuxSampleTimeControl sampleTimeControl, IfxVadc_ChannelSelectionStyle channelSelectionStyle);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1677  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1678  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1679  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1680  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1681  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1682  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1683  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1684  /** \brief get channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1685   * \param vadcG Pointer to VADC Group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1686   * \return channel service request node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1687   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1688  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1689  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1690  /** \brief set channel event node pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1691   * \param vadcG Pointer to the Vadc group register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1692   * \param channelSrcNr Service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1693   * \param channel specifies channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1694   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1695   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1696  IFX_INLINE void IfxVadc_setChannelEventNodePointer1(Ifx_VADC_G *vadcG, IfxVadc_SrcNr channelSrcNr, IfxVadc_ChannelId channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1697  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1698  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1699  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1700  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1701  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1702  IFX_INLINE void IfxVadc_addToQueue(Ifx_VADC_G *group, IfxVadc_ChannelId channel, uint32 options)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1703  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1704      group->QINR0.U = channel | options;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1705  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1707  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1708  IFX_INLINE uint32 IfxVadc_calculateSampleTime(float32 analogFrequency, float32 sampleTime)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1709  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1710      uint32 ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1711  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1712      ticks = (uint32)(sampleTime * analogFrequency) - 2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1713  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1714      if (ticks > 31)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1715      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1716          ticks = (ticks / 16) + 15;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1717      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1719      ticks = __minu(ticks, 0xFFu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1720  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1721      return ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1722  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1723  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1724  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1725  IFX_INLINE void IfxVadc_clearAllResultRequests(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1726  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1727      vadcG->REFCLR.U = 0x0000FFFFu;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1728  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1729  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1731  IFX_INLINE void IfxVadc_clearChannelRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1732  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1733      vadcG->CEFCLR.U = 1 << channelId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1734  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1735  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1737  IFX_INLINE void IfxVadc_clearQueue(Ifx_VADC_G *vadcG, boolean flushQueue)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1738  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1739      vadcG->QMR0.B.FLUSH = flushQueue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1740  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1741  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1742  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1743  IFX_INLINE void IfxVadc_configureWaitForReadMode(Ifx_VADC_G *group, uint32 resultIdx, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1744  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1745      group->RCR[resultIdx].B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1746  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1747  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1748  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1749  IFX_INLINE void IfxVadc_configureWaitForReadModeForGlobalResultRegister(Ifx_VADC *vadc, boolean waitForRead)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1750  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1751      vadc->GLOBRCR.B.WFR = waitForRead;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1752  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1753  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1754  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1755  IFX_INLINE void IfxVadc_disableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1756  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1757      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1758      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1759      vadc->CLC.B.DISR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1760      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1761  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1762  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1763  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1764  IFX_INLINE void IfxVadc_disableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1765  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1766      vadcG->QMR0.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1767  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1768  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1770  IFX_INLINE void IfxVadc_disableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1771  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1772      vadcG->ASMR.B.ENTR = 0; /* disable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1773  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1774  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1775  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1776  IFX_INLINE void IfxVadc_enableBackgroundScanSlotExternalTrigger(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1777  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1778      vadc->BRSMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1779  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1780  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1782  IFX_INLINE void IfxVadc_enableFifoMode(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister, IfxVadc_FifoMode fifoMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1783  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1784      vadcG->RCR[resultRegister].B.FEN = fifoMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1785  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1787  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1788  IFX_INLINE void IfxVadc_enableModule(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1789  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1790      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1792      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1793      vadc->CLC.U = 0x00000000;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1794      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1795  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1796  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1798  IFX_INLINE void IfxVadc_enableQueueSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1799  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1800      vadcG->QMR0.B.ENTR = 1;     /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1801  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1802  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1804  IFX_INLINE void IfxVadc_enableScanSlotExternalTrigger(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1805  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1806      vadcG->ASMR.B.ENTR = 1; /* enable external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1807  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1808  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1810  IFX_INLINE void IfxVadc_enableServiceRequest(Ifx_VADC_G *vadcG, IfxVadc_ChannelResult resultRegister)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1811  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1812      vadcG->RCR[resultRegister].B.SRGEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1813  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1816  IFX_INLINE uint8 IfxVadc_getAdcCalibrationActiveState(Ifx_VADC *vadc, uint8 adcCalGroupNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1817  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1818      uint8 status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1819      status = vadc->G[adcCalGroupNum].ARBCFG.B.CAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1820      return status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1821  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1823  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1824  IFX_INLINE IfxVadc_ArbitrationRounds IfxVadc_getArbiterRoundLength(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1825  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1826      return (IfxVadc_ArbitrationRounds)vadcG->ARBCFG.B.ARBRND;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1827  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1828  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1830  IFX_INLINE Ifx_VADC_G_CHASS IfxVadc_getAssignedChannels(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1831  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1832      Ifx_VADC_G_CHASS assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1833      assignChannels.U = vadcG->CHASS.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1834      return assignChannels;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1835  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1837  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1838  IFX_INLINE IfxVadc_GatingMode IfxVadc_getBackgroundScanGatingMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1839  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1840      return (IfxVadc_GatingMode)vadc->BRSMR.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1841  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1843  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1844  IFX_INLINE IfxVadc_GatingSource IfxVadc_getBackgroundScanGatingSource(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1845  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1846      return (IfxVadc_GatingSource)vadc->BRSCTRL.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1847  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1849  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1850  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getBackgroundScanSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1851  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1852      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1853  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1855  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1856  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getBackgroundScanSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1857  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1858      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM2;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1859  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1861  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1862  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getBackgroundScanTriggerInput(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1863  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1864      return (IfxVadc_TriggerSource)vadc->BRSCTRL.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1865  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1867  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1868  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getBackgroundScanTriggerMode(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1869  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1870      return (IfxVadc_TriggerMode)vadc->BRSCTRL.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1871  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1874  IFX_INLINE Ifx_VADC_CHCTR IfxVadc_getChannelControlConfig(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1875  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1876      Ifx_VADC_CHCTR tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1877      tempChctr.U = vadcG->CHCTR[channelIndex].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1878      return tempChctr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1879  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1881  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1882  IFX_INLINE IfxVadc_InputClasses IfxVadc_getChannelInputClass(Ifx_VADC_G *vadcG, IfxVadc_ChannelId channelIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1883  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1884      return (IfxVadc_InputClasses)vadcG->CHCTR[channelIndex].B.ICLSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1885  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1886  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1888  IFX_INLINE Ifx_VADC_G_REVNP0 IfxVadc_getChannelResultServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1889  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1890      Ifx_VADC_G_REVNP0 resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1891      resultServiceRequestNodePtr0.U = vadcG->REVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1892      return resultServiceRequestNodePtr0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1893  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1895  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1896  IFX_INLINE Ifx_VADC_G_REVNP1 IfxVadc_getChannelResultServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1897  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1898      Ifx_VADC_G_REVNP1 resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1899      resultServiceRequestNodePtr1.U = vadcG->REVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1900      return resultServiceRequestNodePtr1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1901  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1903  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1904  IFX_INLINE Ifx_VADC_G_CEVNP0 IfxVadc_getChannelServiceRequestNodePointer0(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1905  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1906      Ifx_VADC_G_CEVNP0 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1907      serviceRequestNodePtr.U = vadcG->CEVNP0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1908      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1909  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1910  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1911  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1912  IFX_INLINE Ifx_VADC_G_CEVNP1 IfxVadc_getChannelServiceRequestNodePointer1(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1913  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1914      Ifx_VADC_G_CEVNP1 serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1915      serviceRequestNodePtr.U = vadcG->CEVNP1.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1916      return serviceRequestNodePtr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1917  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1918  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1919  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1920  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1921  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1922      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1923  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1924  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1925  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1926  IFX_INLINE float32 IfxVadc_getEmuxGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1927  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1928      return (float32)(IFXVADC_SAMPLETIME_MIN + vadc->GLOBICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1929  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1930  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1931  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1932  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getEmuxGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1933  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1934      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CME;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1935  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1937  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1938  IFX_INLINE float32 IfxVadc_getEmuxGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1939  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1940      return (float32)(IFXVADC_SAMPLETIME_MIN + vadcG->ICLASS[inputClassNum].B.STCE) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1941  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1943  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1944  IFX_INLINE Ifx_VADC_GLOBCFG IfxVadc_getGlobalConfigValue(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1945  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1946      Ifx_VADC_GLOBCFG globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1947      globCfg.U = vadc->GLOBCFG.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1948      return globCfg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1949  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1950  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1952  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGlobalResolution(Ifx_VADC *vadc, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1953  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1954      return (IfxVadc_ChannelResolution)vadc->GLOBICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1955  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1956  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1957  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1958  IFX_INLINE Ifx_VADC_GLOBRES IfxVadc_getGlobalResult(Ifx_VADC *vadc)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1959  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1960      Ifx_VADC_GLOBRES tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1962      tmpGlobalResult.U = vadc->GLOBRES.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1963  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1964      return tmpGlobalResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1965  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1966  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1967  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1968  IFX_INLINE float32 IfxVadc_getGlobalSampleTime(Ifx_VADC *vadc, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1969  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1970      uint32 sampleTime = vadc->GLOBICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1971  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1972      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1973      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1974          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1975      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1976  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1977      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1978  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1979  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1981  IFX_INLINE IfxVadc_ChannelResolution IfxVadc_getGroupResolution(Ifx_VADC_G *vadcG, uint8 inputClassNum)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1982  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1983      return (IfxVadc_ChannelResolution)vadcG->ICLASS[inputClassNum].B.CMS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1984  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1985  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1986  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1987  IFX_INLINE void IfxVadc_getGroupResult(Ifx_VADC_G *group, Ifx_VADC_RES *results, uint32 resultOffset, uint32 numResults)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1988  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1989      uint32 idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1990  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1991      for (idx = 0; idx < numResults; idx++)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1992      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1993          results[idx].U = group->RES[resultOffset + idx].U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1994      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1995  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1996  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1997  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1998  IFX_INLINE float32 IfxVadc_getGroupSampleTime(Ifx_VADC_G *vadcG, uint8 inputClassNum, float32 analogFrequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  1999  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2000      uint32 sampleTime = vadcG->ICLASS[inputClassNum].B.STCS;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2002      if (sampleTime > 16)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2003      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2004          sampleTime = (sampleTime - 15) * 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2005      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2006  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2007      return (float32)(IFXVADC_SAMPLETIME_MIN + sampleTime) / analogFrequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2008  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2009  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2010  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2011  IFX_INLINE uint8 IfxVadc_getMasterIndex(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2012  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2013      uint8 masterIndex = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2014      masterIndex = vadcG->SYNCTR.B.STSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2015      return masterIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2016  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2017  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2019  IFX_INLINE IfxVadc_GatingMode IfxVadc_getQueueSlotGatingMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2020  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2021      return (IfxVadc_GatingMode)vadcG->QMR0.B.ENGT;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2022  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2023  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2024  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2025  IFX_INLINE IfxVadc_GatingSource IfxVadc_getQueueSlotGatingSource(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2026  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2027      return (IfxVadc_GatingSource)vadcG->QCTRL0.B.GTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2028  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2031  IFX_INLINE IfxVadc_RequestSlotPriority IfxVadc_getQueueSlotPriority(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2032  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2033      return (IfxVadc_RequestSlotPriority)vadcG->ARBPR.B.PRIO0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2034  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2035  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2036  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2037  IFX_INLINE IfxVadc_RequestSlotStartMode IfxVadc_getQueueSlotStartMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2038  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2039      return (IfxVadc_RequestSlotStartMode)vadcG->ARBPR.B.CSM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2040  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2041  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2043  IFX_INLINE IfxVadc_TriggerSource IfxVadc_getQueueSlotTriggerInput(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2044  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2045      return (IfxVadc_TriggerSource)vadcG->QCTRL0.B.XTSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2046  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2047  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2049  IFX_INLINE IfxVadc_TriggerMode IfxVadc_getQueueSlotTriggerMode(Ifx_VADC_G *vadcG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2050  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2051      return (IfxVadc_TriggerMode)vadcG->QCTRL0.B.XTMODE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2052  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2055  IFX_INLINE Ifx_VADC_RES IfxVadc_getResult(Ifx_VADC_G *group, uint32 resultIdx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2056  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2057      Ifx_VADC_RES tmpResult;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2058  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Vadc\Std\IfxVadc.h	  2059      tmpResult.U = group->RES[resultIdx].U;
	addsc.a	a15,a15,d15,#2
.L192:
	ld.w	d15,[a15]640
.L142:
	extr.u	d0,d15,#24,#8
.L123:
	jz.t	d0:7,.L4
.L126:

; ..\APP\src\Vadc.c	   139  
; ..\APP\src\Vadc.c	   140      adc_voltage = conversionResult.B.RESULT;
	extr.u	d4,d15,#0,#16
	call	calc_batt_voltage
.L127:

; ..\APP\src\Vadc.c	   141      EMG_Voltage = calc_batt_voltage(adc_voltage);
	st.b	EMG_Voltage,d2
.L193:

; ..\APP\src\Vadc.c	   142  
; ..\APP\src\Vadc.c	   143  }
	ret
.L108:
	
__EMG_Volt_Scan_function_end:
	.size	EMG_Volt_Scan,__EMG_Volt_Scan_function_end-EMG_Volt_Scan
.L35:
	; End of function
	
	.sdecl	'.bss.Vadc.g_VadcAutoScan',data,cluster('g_VadcAutoScan')
	.sect	'.bss.Vadc.g_VadcAutoScan'
	.global	g_VadcAutoScan
	.align	4
g_VadcAutoScan:	.type	object
	.size	g_VadcAutoScan,16
	.space	16
	.sdecl	'.zdata.Vadc.batt_voltage',data,cluster('batt_voltage')
	.sect	'.zdata.Vadc.batt_voltage'
	.global	batt_voltage
batt_voltage:	.type	object
	.size	batt_voltage,1
	.space	1
	.sdecl	'.zdata.Vadc.EMG_Voltage',data,cluster('EMG_Voltage')
	.sect	'.zdata.Vadc.EMG_Voltage'
	.global	EMG_Voltage
EMG_Voltage:	.type	object
	.size	EMG_Voltage,1
	.space	1
	.calls	'VadcAutoScan_init','IfxVadc_Adc_initModuleConfig'
	.calls	'VadcAutoScan_init','IfxVadc_Adc_initModule'
	.calls	'VadcAutoScan_init','IfxVadc_Adc_initGroupConfig'
	.calls	'VadcAutoScan_init','IfxVadc_Adc_initGroup'
	.calls	'Adc_Scan','IfxVadc_Adc_initChannelConfig'
	.calls	'Adc_Scan','IfxVadc_Adc_initChannel'
	.calls	'Adc_Scan','IfxVadc_setScan'
	.calls	'Adc_Scan','calc_batt_voltage'
	.calls	'EMG_Volt_Scan','IfxVadc_Adc_initChannelConfig'
	.calls	'EMG_Volt_Scan','IfxVadc_Adc_initChannel'
	.calls	'EMG_Volt_Scan','IfxVadc_setScan'
	.calls	'EMG_Volt_Scan','calc_batt_voltage'
	.calls	'Adc_Scan','.cocofun_4'
	.calls	'Adc_Scan','.cocofun_5'
	.calls	'EMG_Volt_Scan','.cocofun_4'
	.calls	'EMG_Volt_Scan','.cocofun_5'
	.calls	'VadcAutoScan_init','',88
	.calls	'calc_batt_voltage','',0
	.calls	'Adc_Scan','',96
	.calls	'.cocofun_5','',0
	.calls	'.cocofun_4','',0
	.extern	IfxVadc_setScan
	.extern	IfxVadc_Adc_initModule
	.extern	IfxVadc_Adc_initModuleConfig
	.extern	IfxVadc_Adc_initGroup
	.extern	IfxVadc_Adc_initGroupConfig
	.extern	IfxVadc_Adc_initChannel
	.extern	IfxVadc_Adc_initChannelConfig
	.calls	'EMG_Volt_Scan','',96
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L18:
	.word	116900
	.half	3
	.word	.L19
	.byte	4
.L17:
	.byte	1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L20
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	195
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	169
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	201
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	201
	.byte	8
	.byte	'value',0,2,118,43
	.word	169
	.byte	3,0
.L70:
	.byte	4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5
.L132:
	.byte	4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	322
	.byte	4,2,35,0,0,13
	.word	612
	.byte	6
	.word	651
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	656
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,11,6,187,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	720
	.byte	4,2,35,0,0,4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,195,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	878
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,157,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,203,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1122
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,243,13,25,12,12
	.byte	'CON0',0
	.word	816
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1082
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1313
	.byte	4,2,35,8,0,13
	.word	1353
	.byte	6
	.word	1416
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1421
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	856
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1421
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	856
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	856
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1421
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,231,2,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1651
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,129,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,191,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1967
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,231,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2538
	.byte	4,2,35,0,0,14,4
	.word	305
	.byte	15,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,247,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2666
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,135,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2881
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,143,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3096
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,255,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3533
	.byte	4,2,35,0,0,14,24
	.word	305
	.byte	15,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,160,3,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,135,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3856
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,181,3,16,4,10
	.byte	'PD8',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,143,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4160
	.byte	4,2,35,0,0,14,8
	.word	305
	.byte	15,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,223,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4485
	.byte	4,2,35,0,0,14,12
	.word	305
	.byte	15,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,255,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4825
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,247,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,166,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,8,207,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5402
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,8,223,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5549
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,11,8,231,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5718
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,215,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5890
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,8,159,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6065
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,8,175,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6239
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,8,183,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6413
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6589
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,209,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,199,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6745
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,151,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7078
	.byte	4,2,35,0,0,14,96
	.word	305
	.byte	15,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,8,215,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,207,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7522
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,159,5,25,128,2,12
	.byte	'OUT',0
	.word	1927
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2498
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2617
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	2841
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3056
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3273
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3493
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2657
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3807
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	3847
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4120
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4436
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4476
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4776
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	4816
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5151
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5362
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	4476
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5509
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5678
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	5850
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6025
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6199
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6373
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6549
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6705
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7038
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7386
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	7426
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	7482
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8049
	.byte	4,3,35,252,1,0,13
	.word	8089
	.byte	6
	.word	8622
	.byte	16,7,105,9,1,17
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,17
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,16,7,91,9,1,17
	.byte	'IfxPort_OutputIdx_general',0,128,1,17
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,17
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,17
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,17
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,17
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,17
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,17
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,7,137,4,17,1,1,8
	.byte	'port',0,7,137,4,49
	.word	8627
	.byte	8
	.byte	'pinIndex',0,7,137,4,61
	.word	305
	.byte	8
	.byte	'mode',0,7,137,4,90
	.word	8632
	.byte	8
	.byte	'index',0,7,137,4,114
	.word	8701
	.byte	3,0,16,7,131,1,9,4,17
	.byte	'IfxPort_State_notChanged',0,0,17
	.byte	'IfxPort_State_high',0,1,17
	.byte	'IfxPort_State_low',0,128,128,4,17
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,7,143,4,17,1,1,8
	.byte	'port',0,7,143,4,44
	.word	8627
	.byte	8
	.byte	'pinIndex',0,7,143,4,56
	.word	305
	.byte	8
	.byte	'action',0,7,143,4,80
	.word	9014
	.byte	3,0,16,10,83,9,1,17
	.byte	'IfxCpu_ResourceCpu_0',0,0,17
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,9,170,5,31
	.word	9195
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,9,185,4,20
	.word	305
	.byte	1,1,3,0
.L134:
	.byte	4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,9,190,5,19
	.word	9326
	.byte	1,1,8
	.byte	'address',0,9,190,5,55
	.word	9326
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,9,198,5,20
	.word	305
	.byte	1,1,8
	.byte	'address',0,9,198,5,70
	.word	9326
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,9,153,7,17,1,1,8
	.byte	'address',0,9,153,7,56
	.word	9326
	.byte	8
	.byte	'count',0,9,153,7,72
	.word	9326
	.byte	3,0,9
	.byte	'_Ifx_VADC_G_ARBCFG_Bits',0,12,191,1,16,4,10
	.byte	'ANONC',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'ARBRND',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ARBM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ANONS',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'CSRC',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'SYNRUN',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'CAL',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'CALS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'SAMPLE',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,241,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9555
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_ARBPR_Bits',0,12,211,1,16,4,10
	.byte	'PRIO0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CSM0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PRIO1',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CSM1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PRIO2',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CSM2',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PRIO3',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CSM3',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'ASEN0',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'ASEN1',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'ASEN2',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'ASEN3',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,249,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9898
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CHASS_Bits',0,12,160,3,16,4,10
	.byte	'ASSCH0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ASSCH1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ASSCH2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ASSCH3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ASSCH4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ASSCH5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ASSCH6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ASSCH7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ASSCH8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSCH9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSCH10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSCH11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'ASSCH12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'ASSCH13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'ASSCH14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ASSCH15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ASSCH16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'ASSCH17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'ASSCH18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'ASSCH19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'ASSCH20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'ASSCH21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'ASSCH22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'ASSCH23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'ASSCH24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'ASSCH25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'ASSCH26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'ASSCH27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'ASSCH28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'ASSCH29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'ASSCH30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ASSCH31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,233,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10304
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_RRASS_Bits',0,12,255,5,16,4,10
	.byte	'ASSRR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ASSRR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ASSRR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ASSRR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ASSRR4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ASSRR5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ASSRR6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ASSRR7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ASSRR8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSRR9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSRR10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSRR11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'ASSRR12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'ASSRR13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'ASSRR14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ASSRR15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,153,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10972
	.byte	4,2,35,0,0,14,16
	.word	305
	.byte	15,15,0,9
	.byte	'_Ifx_VADC_ICLASS_Bits',0,12,228,7,16,4,10
	.byte	'STCS',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'CMS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'STCE',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'CME',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,12,161,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11368
	.byte	4,2,35,0,0,14,8
	.word	11550
	.byte	15,1,0,9
	.byte	'_Ifx_VADC_G_ALIAS_Bits',0,12,182,1,16,4,10
	.byte	'ALIAS0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'ALIAS1',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	19,0,2,35,0,0,11,12,233,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11599
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_BOUND_Bits',0,12,209,2,16,4,10
	.byte	'BOUNDARY0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BOUNDARY1',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,193,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11750
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_SYNCTR_Bits',0,12,194,6,16,4,10
	.byte	'STSEL',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'EVALR1',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EVALR2',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EVALR3',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	282
	.byte	25,0,2,35,0,0,11,12,193,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11908
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_BFL_Bits',0,12,154,2,16,4,10
	.byte	'BFL0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'BFL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BFL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'BFL3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFA0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'BFA1',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'BFA2',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'BFA3',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BFI0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'BFI1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'BFI2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'BFI3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,12,161,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12094
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_BFLS_Bits',0,12,194,2,16,4,10
	.byte	'BFC0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'BFC1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BFC2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'BFC3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'BFS0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'BFS1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'BFS2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'BFS3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,12,185,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12422
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_BFLC_Bits',0,12,174,2,16,4,10
	.byte	'BFM0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BFM1',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFM2',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'BFM3',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,169,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12664
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_BFLNP_Bits',0,12,184,2,16,4,10
	.byte	'BFL0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BFL1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFL2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'BFL3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,177,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12820
	.byte	4,2,35,0,0,14,40
	.word	305
	.byte	15,39,0,9
	.byte	'_Ifx_VADC_G_QCTRL0_Bits',0,12,158,4,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,161,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12994
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QMR0_Bits',0,12,222,4,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'CLRV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TREV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'FLUSH',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,11,12,193,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13327
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QSR0_Bits',0,12,252,4,16,4,10
	.byte	'FILL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,12,209,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13578
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_Q0R0_Bits',0,12,232,3,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,12,129,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13777
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QBUR0_Bits',0,12,131,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,12,145,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13946
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QINR0_Bits',0,12,196,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,12,177,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14116
	.byte	4,2,35,0,0,11,12,241,12,5,4,12
	.byte	'QBUR0',0
	.word	14076
	.byte	4,2,35,0,12
	.byte	'QINR0',0
	.word	14233
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_ASCTRL_Bits',0,12,234,1,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,129,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14310
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_ASMR_Bits',0,12,253,1,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SCAN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'LDM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CLRPND',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LDEV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,11,12,137,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14643
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_ASSEL_Bits',0,12,148,2,16,4,10
	.byte	'CHSEL',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,12,153,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14928
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_ASPND_Bits',0,12,142,2,16,4,10
	.byte	'CHPND',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,12,145,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15015
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QCTRL3_Bits',0,12,177,4,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,169,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15102
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QMR3_Bits',0,12,237,4,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'CLRV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TREV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'FLUSH',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,11,12,201,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QSR3_Bits',0,12,136,5,16,4,10
	.byte	'FILL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,12,217,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15686
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_Q0R3_Bits',0,12,243,3,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,12,137,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15885
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QBUR3_Bits',0,12,142,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,12,153,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16135
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_QINR3_Bits',0,12,206,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,12,185,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16386
	.byte	4,2,35,0,0,11,12,129,13,5,4,12
	.byte	'QBUR3',0
	.word	16346
	.byte	4,2,35,0,12
	.byte	'QINR3',0
	.word	16606
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_TRCTR_Bits',0,12,205,6,16,4,10
	.byte	'TSC',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	8,2,2,35,0,10
	.byte	'Q3ACT',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'OV',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TSCSET',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'ITSEL',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'SRDIS',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'COV',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,201,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16683
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CEFLAG_Bits',0,12,240,2,16,4,10
	.byte	'CEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CEV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CEV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CEV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CEV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CEV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CEV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CEV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'CEV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CEV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CEV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CEV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CEV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,209,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16957
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_REFLAG_Bits',0,12,183,5,16,4,10
	.byte	'REV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'REV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'REV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'REV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'REV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'REV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'REV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'REV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'REV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'REV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'REV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'REV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'REV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,241,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_SEFLAG_Bits',0,12,159,6,16,4,10
	.byte	'SEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,12,169,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17669
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CEFCLR_Bits',0,12,218,2,16,4,10
	.byte	'CEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CEV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CEV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CEV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CEV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CEV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CEV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CEV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'CEV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CEV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CEV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CEV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CEV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,201,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17832
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_REFCLR_Bits',0,12,161,5,16,4,10
	.byte	'REV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'REV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'REV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'REV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'REV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'REV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'REV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'REV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'REV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'REV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'REV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'REV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'REV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,233,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18188
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_SEFCLR_Bits',0,12,149,6,16,4,10
	.byte	'SEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,12,161,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18544
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CEVNP0_Bits',0,12,134,3,16,4,10
	.byte	'CEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CEV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CEV2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CEV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'CEV4NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CEV5NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'CEV6NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'CEV7NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,217,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18707
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CEVNP1_Bits',0,12,147,3,16,4,10
	.byte	'CEV8NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CEV9NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CEV10NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CEV11NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'CEV12NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CEV13NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'CEV14NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'CEV15NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,225,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18922
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_REVNP0_Bits',0,12,229,5,16,4,10
	.byte	'REV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'REV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'REV2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'REV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'REV4NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'REV5NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'REV6NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'REV7NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,137,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19143
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_REVNP1_Bits',0,12,242,5,16,4,10
	.byte	'REV8NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'REV9NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'REV10NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'REV11NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'REV12NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'REV13NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'REV14NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'REV15NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,145,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19358
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_SEVNP_Bits',0,12,169,6,16,4,10
	.byte	'SEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'SEV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'SEV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,177,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19579
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_SRACT_Bits',0,12,179,6,16,4,10
	.byte	'AGSR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'AGSR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'AGSR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'AGSR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'ASSR0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSR1',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSR2',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSR3',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,11,12,185,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19748
	.byte	4,2,35,0,0,14,36
	.word	305
	.byte	15,35,0,9
	.byte	'_Ifx_VADC_G_EMUXCTR_Bits',0,12,217,3,16,4,10
	.byte	'EMUXSET',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'EMUXACT',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'EMUXCH',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'EMUXMODE',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'EMXCOD',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EMXST',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EMXCSS',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EMXWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,249,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20008
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_VFR_Bits',0,12,221,6,16,4,10
	.byte	'VF0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VF1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VF2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'VF3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'VF4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'VF5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'VF6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'VF7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'VF8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'VF9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'VF10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'VF11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'VF12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'VF13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'VF14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'VF15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,209,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20271
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_G_CHCTR_Bits',0,12,197,3,16,4,10
	.byte	'ICLSEL',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'BNDSELL',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'BNDSELU',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CHEVMODE',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'SYNC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REFSEL',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'BNDSELX',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RESREG',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'RESTBS',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'RESPOS',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	6,4,2,35,2,10
	.byte	'BWDCH',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'BWDEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,241,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20608
	.byte	4,2,35,0,0,14,48
	.word	20923
	.byte	15,11,0,14,80
	.word	305
	.byte	15,79,0,9
	.byte	'_Ifx_VADC_G_RCR_Bits',0,12,148,5,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRCTR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'DMM',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'WFR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'FEN',0,1
	.word	305
	.byte	2,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'SRGEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,225,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20981
	.byte	4,2,35,0,0,14,64
	.word	21156
	.byte	15,15,0,14,64
	.word	305
	.byte	15,63,0,9
	.byte	'_Ifx_VADC_G_RES_Bits',0,12,205,5,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRC',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0
.L90:
	.byte	11,12,249,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21214
	.byte	4,2,35,0,0,14,64
	.word	21351
	.byte	15,15,0,9
	.byte	'_Ifx_VADC_G_RESD_Bits',0,12,217,5,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRC',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,129,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21400
	.byte	4,2,35,0,0,14,64
	.word	21538
	.byte	15,15,0,14,192,1
	.word	305
	.byte	15,191,1,0,9
	.byte	'_Ifx_VADC_G',0,12,217,12,25,128,8,12
	.byte	'ARBCFG',0
	.word	9858
	.byte	4,2,35,0,12
	.byte	'ARBPR',0
	.word	10264
	.byte	4,2,35,4,12
	.byte	'CHASS',0
	.word	10932
	.byte	4,2,35,8,12
	.byte	'RRASS',0
	.word	11319
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	11359
	.byte	16,2,35,16,12
	.byte	'ICLASS',0
	.word	11590
	.byte	8,2,35,32,12
	.byte	'reserved_28',0
	.word	4476
	.byte	8,2,35,40,12
	.byte	'ALIAS',0
	.word	11710
	.byte	4,2,35,48,12
	.byte	'reserved_34',0
	.word	2657
	.byte	4,2,35,52,12
	.byte	'BOUND',0
	.word	11868
	.byte	4,2,35,56,12
	.byte	'reserved_3C',0
	.word	2657
	.byte	4,2,35,60,12
	.byte	'SYNCTR',0
	.word	12054
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	2657
	.byte	4,2,35,68,12
	.byte	'BFL',0
	.word	12382
	.byte	4,2,35,72,12
	.byte	'BFLS',0
	.word	12624
	.byte	4,2,35,76,12
	.byte	'BFLC',0
	.word	12780
	.byte	4,2,35,80,12
	.byte	'BFLNP',0
	.word	12945
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	12985
	.byte	40,2,35,88,12
	.byte	'QCTRL0',0
	.word	13287
	.byte	4,3,35,128,1,12
	.byte	'QMR0',0
	.word	13538
	.byte	4,3,35,132,1,12
	.byte	'QSR0',0
	.word	13737
	.byte	4,3,35,136,1,12
	.byte	'Q0R0',0
	.word	13906
	.byte	4,3,35,140,1,18
	.word	14273
	.byte	4,3,35,144,1,12
	.byte	'reserved_94',0
	.word	4816
	.byte	12,3,35,148,1,12
	.byte	'ASCTRL',0
	.word	14603
	.byte	4,3,35,160,1,12
	.byte	'ASMR',0
	.word	14888
	.byte	4,3,35,164,1,12
	.byte	'ASSEL',0
	.word	14975
	.byte	4,3,35,168,1,12
	.byte	'ASPND',0
	.word	15062
	.byte	4,3,35,172,1,12
	.byte	'reserved_B0',0
	.word	11359
	.byte	16,3,35,176,1,12
	.byte	'QCTRL3',0
	.word	15395
	.byte	4,3,35,192,1,12
	.byte	'QMR3',0
	.word	15646
	.byte	4,3,35,196,1,12
	.byte	'QSR3',0
	.word	15845
	.byte	4,3,35,200,1,12
	.byte	'Q0R3',0
	.word	16095
	.byte	4,3,35,204,1,18
	.word	16646
	.byte	4,3,35,208,1,12
	.byte	'TRCTR',0
	.word	16917
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	12985
	.byte	40,3,35,216,1,12
	.byte	'CEFLAG',0
	.word	17273
	.byte	4,3,35,128,2,12
	.byte	'REFLAG',0
	.word	17629
	.byte	4,3,35,132,2,12
	.byte	'SEFLAG',0
	.word	17792
	.byte	4,3,35,136,2,12
	.byte	'reserved_10C',0
	.word	2657
	.byte	4,3,35,140,2,12
	.byte	'CEFCLR',0
	.word	18148
	.byte	4,3,35,144,2,12
	.byte	'REFCLR',0
	.word	18504
	.byte	4,3,35,148,2,12
	.byte	'SEFCLR',0
	.word	18667
	.byte	4,3,35,152,2,12
	.byte	'reserved_11C',0
	.word	2657
	.byte	4,3,35,156,2,12
	.byte	'CEVNP0',0
	.word	18882
	.byte	4,3,35,160,2,12
	.byte	'CEVNP1',0
	.word	19103
	.byte	4,3,35,164,2,12
	.byte	'reserved_128',0
	.word	4476
	.byte	8,3,35,168,2,12
	.byte	'REVNP0',0
	.word	19318
	.byte	4,3,35,176,2,12
	.byte	'REVNP1',0
	.word	19539
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	4476
	.byte	8,3,35,184,2,12
	.byte	'SEVNP',0
	.word	19708
	.byte	4,3,35,192,2,12
	.byte	'reserved_144',0
	.word	2657
	.byte	4,3,35,196,2,12
	.byte	'SRACT',0
	.word	19959
	.byte	4,3,35,200,2,12
	.byte	'reserved_14C',0
	.word	19999
	.byte	36,3,35,204,2,12
	.byte	'EMUXCTR',0
	.word	20231
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	2657
	.byte	4,3,35,244,2,12
	.byte	'VFR',0
	.word	20568
	.byte	4,3,35,248,2,12
	.byte	'reserved_17C',0
	.word	2657
	.byte	4,3,35,252,2,12
	.byte	'CHCTR',0
	.word	20963
	.byte	48,3,35,128,3,12
	.byte	'reserved_1B0',0
	.word	20972
	.byte	80,3,35,176,3,12
	.byte	'RCR',0
	.word	21196
	.byte	64,3,35,128,4,12
	.byte	'reserved_240',0
	.word	21205
	.byte	64,3,35,192,4,12
	.byte	'RES',0
	.word	21391
	.byte	64,3,35,128,5,12
	.byte	'reserved_2C0',0
	.word	21205
	.byte	64,3,35,192,5,12
	.byte	'RESD',0
	.word	21578
	.byte	64,3,35,128,6,12
	.byte	'reserved_340',0
	.word	21587
	.byte	192,1,3,35,192,6,0,13
	.word	21598
	.byte	6
	.word	22783
	.byte	2
	.byte	'IfxVadc_configureWaitForReadMode',0,3,11,207,13,17,1,1,8
	.byte	'group',0,11,207,13,62
	.word	22788
	.byte	8
	.byte	'resultIdx',0,11,207,13,76
	.word	9326
	.byte	8
	.byte	'waitForRead',0,11,207,13,95
	.word	305
	.byte	3,0,9
	.byte	'_Ifx_VADC_CLC_Bits',0,12,164,1,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,12,217,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22891
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_ID_Bits',0,12,241,7,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,12,169,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23049
	.byte	4,2,35,0,0,14,28
	.word	305
	.byte	15,27,0,9
	.byte	'_Ifx_VADC_OCS_Bits',0,12,143,8,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'TGB',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'TG_P',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,12,201,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23181
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_KRSTCLR_Bits',0,12,136,8,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,12,193,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23388
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_KRST1_Bits',0,12,129,8,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,12,185,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23495
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_KRST0_Bits',0,12,249,7,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,12,177,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23600
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_ACCEN0_Bits',0,12,49,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,161,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23724
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBCFG_Bits',0,12,252,6,16,4,10
	.byte	'DIVA',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'DCMSB',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'DIVD',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'REFPC',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'LOSUP',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'DIVWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'DPCAL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DPCAL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DPCAL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'DPCAL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	11,1,2,35,2,10
	.byte	'SUCAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,225,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24294
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_ACCPROT0_Bits',0,12,86,16,4,10
	.byte	'APC0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'APC1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'APC2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'APC3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'APEM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'API0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'API1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'API2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'API3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	11,1,2,35,2,10
	.byte	'APGC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,169,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24644
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_ACCPROT1_Bits',0,12,103,16,4,10
	.byte	'APS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'APS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'APS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'APS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'APTF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'APR0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'APR1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'APR2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'APR3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,12,177,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24919
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBBOUND_Bits',0,12,243,6,16,4,10
	.byte	'BOUNDARY0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BOUNDARY1',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,12,217,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25178
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBEFLAG_Bits',0,12,144,7,16,4,10
	.byte	'SEVGLB',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	7,0,2,35,0,10
	.byte	'REVGLB',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'SEVGLBCLR',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	7,0,2,35,2,10
	.byte	'REVGLBCLR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,12,233,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25338
	.byte	4,2,35,0,0,14,92
	.word	305
	.byte	15,91,0,9
	.byte	'_Ifx_VADC_GLOBEVNP_Bits',0,12,157,7,16,4,10
	.byte	'SEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'REV0NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,12,241,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25587
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBTF_Bits',0,12,209,7,16,4,10
	.byte	'CDCH',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CDGR',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	4,1,2,35,1,10
	.byte	'CDWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	4,1,2,35,2,10
	.byte	'MDWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'RCEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'RCWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,153,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25739
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBTE_Bits',0,12,201,7,16,4,10
	.byte	'TFEG0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TFEG1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,12,145,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26053
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_BRSSEL_Bits',0,12,158,1,16,4,10
	.byte	'CHSELGy',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,12,209,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26178
	.byte	4,2,35,0,0,14,16
	.word	26226
	.byte	15,3,0,14,48
	.word	305
	.byte	15,47,0,9
	.byte	'_Ifx_VADC_BRSPND_Bits',0,12,152,1,16,4,10
	.byte	'CHPNDGy',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,12,201,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26284
	.byte	4,2,35,0,0,14,16
	.word	26332
	.byte	15,3,0,9
	.byte	'_Ifx_VADC_BRSCTRL_Bits',0,12,119,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,12,185,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26381
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_BRSMR_Bits',0,12,135,1,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SCAN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'LDM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CLRPND',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LDEV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,11,12,193,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26657
	.byte	4,2,35,0,0,14,120
	.word	305
	.byte	15,119,0,9
	.byte	'_Ifx_VADC_GLOBRCR_Bits',0,12,166,7,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRCTR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'WFR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	6,1,2,35,3,10
	.byte	'SRGEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,249,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26950
	.byte	4,2,35,0,0,14,124
	.word	305
	.byte	15,123,0,9
	.byte	'_Ifx_VADC_GLOBRES_Bits',0,12,177,7,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'GNR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,129,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27146
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_VADC_GLOBRESD_Bits',0,12,189,7,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'GNR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,12,137,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27325
	.byte	4,2,35,0,0,14,108
	.word	305
	.byte	15,107,0,9
	.byte	'_Ifx_VADC_EMUXSEL_Bits',0,12,174,1,16,4,10
	.byte	'EMUXGRP0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'EMUXGRP1',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,12,225,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27514
	.byte	4,2,35,0,0,14,140,1
	.word	305
	.byte	15,139,1,0,14,128,32
	.word	21598
	.byte	15,3,0,13
	.word	27657
	.byte	14,128,87
	.word	305
	.byte	15,255,86,0,9
	.byte	'_Ifx_VADC',0,12,180,13,25,128,128,1,12
	.byte	'CLC',0
	.word	23009
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	23132
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	23172
	.byte	28,2,35,12,12
	.byte	'OCS',0
	.word	23348
	.byte	4,2,35,40,12
	.byte	'KRSTCLR',0
	.word	23455
	.byte	4,2,35,44,12
	.byte	'KRST1',0
	.word	23560
	.byte	4,2,35,48,12
	.byte	'KRST0',0
	.word	23684
	.byte	4,2,35,52,12
	.byte	'reserved_38',0
	.word	2657
	.byte	4,2,35,56,12
	.byte	'ACCEN0',0
	.word	24254
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	21205
	.byte	64,2,35,64,12
	.byte	'GLOBCFG',0
	.word	24604
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	2657
	.byte	4,3,35,132,1,12
	.byte	'ACCPROT0',0
	.word	24879
	.byte	4,3,35,136,1,12
	.byte	'ACCPROT1',0
	.word	25138
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	11359
	.byte	16,3,35,144,1,12
	.byte	'GLOBICLASS',0
	.word	11590
	.byte	8,3,35,160,1,12
	.byte	'reserved_A8',0
	.word	11359
	.byte	16,3,35,168,1,12
	.byte	'GLOBBOUND',0
	.word	25298
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	19999
	.byte	36,3,35,188,1,12
	.byte	'GLOBEFLAG',0
	.word	25538
	.byte	4,3,35,224,1,12
	.byte	'reserved_E4',0
	.word	25578
	.byte	92,3,35,228,1,12
	.byte	'GLOBEVNP',0
	.word	25699
	.byte	4,3,35,192,2,12
	.byte	'reserved_144',0
	.word	23172
	.byte	28,3,35,196,2,12
	.byte	'GLOBTF',0
	.word	26013
	.byte	4,3,35,224,2,12
	.byte	'GLOBTE',0
	.word	26138
	.byte	4,3,35,228,2,12
	.byte	'reserved_168',0
	.word	3847
	.byte	24,3,35,232,2,12
	.byte	'BRSSEL',0
	.word	26266
	.byte	16,3,35,128,3,12
	.byte	'reserved_190',0
	.word	26275
	.byte	48,3,35,144,3,12
	.byte	'BRSPND',0
	.word	26372
	.byte	16,3,35,192,3,12
	.byte	'reserved_1D0',0
	.word	26275
	.byte	48,3,35,208,3,12
	.byte	'BRSCTRL',0
	.word	26617
	.byte	4,3,35,128,4,12
	.byte	'BRSMR',0
	.word	26901
	.byte	4,3,35,132,4,12
	.byte	'reserved_208',0
	.word	26941
	.byte	120,3,35,136,4,12
	.byte	'GLOBRCR',0
	.word	27097
	.byte	4,3,35,128,5,12
	.byte	'reserved_284',0
	.word	27137
	.byte	124,3,35,132,5,12
	.byte	'GLOBRES',0
	.word	27285
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	27137
	.byte	124,3,35,132,6,12
	.byte	'GLOBRESD',0
	.word	27465
	.byte	4,3,35,128,7,12
	.byte	'reserved_384',0
	.word	27505
	.byte	108,3,35,132,7,12
	.byte	'EMUXSEL',0
	.word	27606
	.byte	4,3,35,240,7,12
	.byte	'reserved_3F4',0
	.word	27646
	.byte	140,1,3,35,244,7,12
	.byte	'G',0
	.word	27667
	.byte	128,32,3,35,128,9,12
	.byte	'reserved_1480',0
	.word	27672
	.byte	128,87,3,35,128,41,0,13
	.word	27683
	.byte	6
	.word	28552
	.byte	2
	.byte	'IfxVadc_configureWaitForReadModeForGlobalResultRegister',0,3,11,213,13,17,1,1,8
	.byte	'vadc',0,11,213,13,83
	.word	28557
	.byte	8
	.byte	'waitForRead',0,11,213,13,97
	.word	305
	.byte	3,0,16,11,149,1,9,1,17
	.byte	'IfxVadc_ChannelResolution_12bit',0,0,17
	.byte	'IfxVadc_ChannelResolution_10bit',0,1,17
	.byte	'IfxVadc_ChannelResolution_8bit',0,2,17
	.byte	'IfxVadc_ChannelResolution_10bitFast',0,5,0,7
	.byte	'IfxVadc_getGlobalResolution',0,3,11,160,15,38
	.word	28663
	.byte	1,1,8
	.byte	'vadc',0,11,160,15,76
	.word	28557
	.byte	8
	.byte	'inputClassNum',0,11,160,15,88
	.word	305
	.byte	3,0,7
	.byte	'IfxVadc_getGlobalResult',0,3,11,166,15,29
	.word	27285
	.byte	1,1,8
	.byte	'vadc',0,11,166,15,63
	.word	28557
	.byte	3,0,4
	.byte	'float',0,4,4,7
	.byte	'IfxVadc_getGlobalSampleTime',0,3,11,176,15,20
	.word	28940
	.byte	1,1,8
	.byte	'vadc',0,11,176,15,58
	.word	28557
	.byte	8
	.byte	'inputClassNum',0,11,176,15,70
	.word	305
	.byte	8
	.byte	'analogFrequency',0,11,176,15,93
	.word	28940
	.byte	3,0,6
	.word	21351
	.byte	2
	.byte	'IfxVadc_getGroupResult',0,3,11,195,15,17,1,1,8
	.byte	'group',0,11,195,15,52
	.word	22788
	.byte	8
	.byte	'results',0,11,195,15,73
	.word	29053
	.byte	8
	.byte	'resultOffset',0,11,195,15,89
	.word	9326
	.byte	8
	.byte	'numResults',0,11,195,15,110
	.word	9326
	.byte	3,0
.L100:
	.byte	7
	.byte	'IfxVadc_getResult',0,3,11,135,16,25
	.word	21351
	.byte	1,1
.L101:
	.byte	8
	.byte	'group',0,11,135,16,55
	.word	22788
.L103:
	.byte	8
	.byte	'resultIdx',0,11,135,16,69
	.word	9326
.L105:
	.byte	3,0,16,13,93,9,1,17
	.byte	'IfxVadc_GroupId_0',0,0,17
	.byte	'IfxVadc_GroupId_1',0,1,17
	.byte	'IfxVadc_GroupId_global0',0,2,17
	.byte	'IfxVadc_GroupId_global1',0,3,0,2
	.byte	'IfxVadc_setBackgroundScan',0,3,11,151,17,17,1,1,8
	.byte	'vadc',0,11,151,17,53
	.word	28557
	.byte	8
	.byte	'groupId',0,11,151,17,75
	.word	29231
	.byte	8
	.byte	'channels',0,11,151,17,91
	.word	9326
	.byte	8
	.byte	'mask',0,11,151,17,108
	.word	9326
	.byte	3,0,2
	.byte	'IfxVadc_startBackgroundScan',0,3,11,255,18,17,1,1,8
	.byte	'vadc',0,11,255,18,55
	.word	28557
	.byte	3,0,2
	.byte	'IfxVadc_startScan',0,3,11,139,19,17,1,1,8
	.byte	'group',0,11,139,19,47
	.word	22788
	.byte	3,0,16,11,122,9,1,17
	.byte	'IfxVadc_ChannelId_none',0,127,17
	.byte	'IfxVadc_ChannelId_0',0,0,17
	.byte	'IfxVadc_ChannelId_1',0,1,17
	.byte	'IfxVadc_ChannelId_2',0,2,17
	.byte	'IfxVadc_ChannelId_3',0,3,17
	.byte	'IfxVadc_ChannelId_4',0,4,17
	.byte	'IfxVadc_ChannelId_5',0,5,17
	.byte	'IfxVadc_ChannelId_6',0,6,17
	.byte	'IfxVadc_ChannelId_7',0,7,17
	.byte	'IfxVadc_ChannelId_8',0,8,17
	.byte	'IfxVadc_ChannelId_9',0,9,17
	.byte	'IfxVadc_ChannelId_10',0,10,17
	.byte	'IfxVadc_ChannelId_11',0,11,0,2
	.byte	'IfxVadc_addToQueue',0,3,11,166,13,17,1,1,8
	.byte	'group',0,11,166,13,48
	.word	22788
	.byte	8
	.byte	'channel',0,11,166,13,73
	.word	29523
	.byte	8
	.byte	'options',0,11,166,13,89
	.word	9326
	.byte	3,0,2
	.byte	'IfxVadc_clearQueue',0,3,11,201,13,17,1,1,8
	.byte	'vadcG',0,11,201,13,48
	.word	22788
	.byte	8
	.byte	'flushQueue',0,11,201,13,63
	.word	305
	.byte	3,0,2
	.byte	'IfxVadc_startQueue',0,3,11,133,19,17,1,1,8
	.byte	'group',0,11,133,19,48
	.word	22788
	.byte	3,0,7
	.byte	'IfxVadc_calculateSampleTime',0,3,11,172,13,19
	.word	9326
	.byte	1,1,8
	.byte	'analogFrequency',0,11,172,13,55
	.word	28940
	.byte	8
	.byte	'sampleTime',0,11,172,13,80
	.word	28940
	.byte	3,0,7
	.byte	'IfxVadc_getStartupCalibration',0,3,11,181,16,20
	.word	305
	.byte	1,1,8
	.byte	'vadc',0,11,181,16,60
	.word	28557
	.byte	3,0,16,11,159,1,9,1,17
	.byte	'IfxVadc_ChannelResult_0',0,0,17
	.byte	'IfxVadc_ChannelResult_1',0,1,17
	.byte	'IfxVadc_ChannelResult_2',0,2,17
	.byte	'IfxVadc_ChannelResult_3',0,3,17
	.byte	'IfxVadc_ChannelResult_4',0,4,17
	.byte	'IfxVadc_ChannelResult_5',0,5,17
	.byte	'IfxVadc_ChannelResult_6',0,6,17
	.byte	'IfxVadc_ChannelResult_7',0,7,17
	.byte	'IfxVadc_ChannelResult_8',0,8,17
	.byte	'IfxVadc_ChannelResult_9',0,9,17
	.byte	'IfxVadc_ChannelResult_10',0,10,17
	.byte	'IfxVadc_ChannelResult_11',0,11,17
	.byte	'IfxVadc_ChannelResult_12',0,12,17
	.byte	'IfxVadc_ChannelResult_13',0,13,17
	.byte	'IfxVadc_ChannelResult_14',0,14,17
	.byte	'IfxVadc_ChannelResult_15',0,15,0,19,14,231,2,9,4,12
	.byte	'vadc',0
	.word	28557
	.byte	4,2,35,0,0,19,14,152,3,9,12,12
	.byte	'module',0
	.word	30580
	.byte	4,2,35,0,12
	.byte	'group',0
	.word	22788
	.byte	4,2,35,4,12
	.byte	'groupId',0
	.word	29231
	.byte	1,2,35,8,0,20
	.word	30601
	.byte	6
	.word	30656
	.byte	19,14,192,3,9,8,12
	.byte	'channel',0
	.word	29523
	.byte	1,2,35,0,12
	.byte	'resultreg',0
	.word	30151
	.byte	1,2,35,1,12
	.byte	'group',0
	.word	30661
	.byte	4,2,35,4,0,6
	.word	30666
.L92:
	.byte	7
	.byte	'IfxVadc_Adc_getResult',0,3,14,202,9,25
	.word	21351
	.byte	1,1
.L94:
	.byte	8
	.byte	'channel',0,14,202,9,68
	.word	30724
.L96:
	.byte	21,3,0,0,6
	.word	30601
.L72:
	.byte	2
	.byte	'IfxVadc_Adc_setScan',0,3,14,232,9,17,1,1
.L75:
	.byte	8
	.byte	'group',0,14,232,9,56
	.word	30784
.L77:
	.byte	8
	.byte	'channels',0,14,232,9,70
	.word	9326
.L79:
	.byte	8
	.byte	'mask',0,14,232,9,87
	.word	9326
.L81:
	.byte	3,0
.L85:
	.byte	2
	.byte	'IfxVadc_Adc_startScan',0,3,14,250,9,17,1,1
.L86:
	.byte	8
	.byte	'group',0,14,250,9,58
	.word	30784
.L88:
	.byte	21,3,0,0,22
	.word	140
	.byte	3,0,22
	.word	206
	.byte	23
	.word	224
	.byte	3,0,22
	.word	239
	.byte	23
	.word	253
	.byte	23
	.word	266
	.byte	3,0,22
	.word	661
	.byte	23
	.word	689
	.byte	3,0,22
	.word	1426
	.byte	23
	.word	1466
	.byte	23
	.word	1484
	.byte	3,0,22
	.word	1504
	.byte	23
	.word	1542
	.byte	23
	.word	1560
	.byte	3,0,22
	.word	1580
	.byte	23
	.word	1631
	.byte	3,0,22
	.word	8918
	.byte	23
	.word	8951
	.byte	23
	.word	8965
	.byte	23
	.word	8983
	.byte	23
	.word	8997
	.byte	3,0,22
	.word	9117
	.byte	23
	.word	9145
	.byte	23
	.word	9159
	.byte	23
	.word	9177
	.byte	3,0,22
	.word	9250
	.byte	3,0,22
	.word	9284
	.byte	3,0,22
	.word	9347
	.byte	23
	.word	9388
	.byte	3,0,22
	.word	9407
	.byte	23
	.word	9462
	.byte	3,0,22
	.word	9481
	.byte	23
	.word	9521
	.byte	23
	.word	9538
	.byte	3,0,22
	.word	22793
	.byte	23
	.word	22834
	.byte	23
	.word	22849
	.byte	23
	.word	22868
	.byte	3,0,22
	.word	28562
	.byte	23
	.word	28626
	.byte	23
	.word	28640
	.byte	3,0,22
	.word	28809
	.byte	23
	.word	28849
	.byte	23
	.word	28863
	.byte	3,0,22
	.word	28888
	.byte	23
	.word	28924
	.byte	3,0,22
	.word	28949
	.byte	23
	.word	28989
	.byte	23
	.word	29003
	.byte	23
	.word	29026
	.byte	3,0,22
	.word	29058
	.byte	23
	.word	29089
	.byte	23
	.word	29104
	.byte	23
	.word	29121
	.byte	23
	.word	29143
	.byte	3,0,22
	.word	29165
	.byte	23
	.word	29195
	.byte	23
	.word	29210
	.byte	3,0,22
	.word	29329
	.byte	23
	.word	29363
	.byte	23
	.word	29377
	.byte	23
	.word	29394
	.byte	23
	.word	29412
	.byte	3,0,22
	.word	29428
	.byte	23
	.word	29464
	.byte	3,0,22
	.word	29480
	.byte	23
	.word	29506
	.byte	3,0,24
	.byte	'IfxVadc_setScan',0,11,154,7,17,1,1,1,1,8
	.byte	'group',0,11,154,7,45
	.word	22788
	.byte	8
	.byte	'channels',0,11,154,7,59
	.word	9326
	.byte	8
	.byte	'mask',0,11,154,7,76
	.word	9326
	.byte	0,22
	.word	29820
	.byte	23
	.word	29847
	.byte	23
	.word	29862
	.byte	23
	.word	29879
	.byte	3,0,22
	.word	29898
	.byte	23
	.word	29925
	.byte	23
	.word	29940
	.byte	3,0,22
	.word	29962
	.byte	23
	.word	29989
	.byte	3,0,22
	.word	30006
	.byte	23
	.word	30046
	.byte	23
	.word	30071
	.byte	3,0,22
	.word	30093
	.byte	23
	.word	30135
	.byte	3,0,16,11,185,3,9,1,17
	.byte	'IfxVadc_Status_noError',0,0,17
	.byte	'IfxVadc_Status_notInitialised',0,1,17
	.byte	'IfxVadc_Status_invalidGroup',0,2,17
	.byte	'IfxVadc_Status_invalidChannel',0,3,17
	.byte	'IfxVadc_Status_queueFull',0,4,17
	.byte	'IfxVadc_Status_noAccess',0,5,17
	.byte	'IfxVadc_Status_channelsStillPending',0,6,0,6
	.word	30580
	.byte	19,14,144,3,9,6,12
	.byte	'sampleTime',0
	.word	28940
	.byte	4,2,35,0,12
	.byte	'resolution',0
	.word	28663
	.byte	1,2,35,4,0,14,12
	.word	31673
	.byte	15,1,0,16,11,184,2,9,1,17
	.byte	'IfxVadc_LowSupplyVoltageSelect_5V',0,0,17
	.byte	'IfxVadc_LowSupplyVoltageSelect_3V',0,1,0
.L58:
	.byte	19,14,226,3,9,32,12
	.byte	'vadc',0
	.word	28557
	.byte	4,2,35,0,12
	.byte	'globalInputClass',0
	.word	31720
	.byte	12,2,35,4,12
	.byte	'digitalFrequency',0
	.word	28940
	.byte	4,2,35,16,12
	.byte	'analogFrequency',0
	.word	28940
	.byte	4,2,35,20,12
	.byte	'moduleFrequency',0
	.word	28940
	.byte	4,2,35,24,12
	.byte	'startupCalibration',0
	.word	305
	.byte	1,2,35,28,12
	.byte	'supplyVoltage',0
	.word	31729
	.byte	1,2,35,29,0,20
	.word	31808
	.byte	6
	.word	31982
	.byte	25
	.byte	'IfxVadc_Adc_initModule',0,14,129,5,27
	.word	31451
	.byte	1,1,1,1,8
	.byte	'vadc',0,14,129,5,63
	.word	31668
	.byte	8
	.byte	'config',0,14,129,5,95
	.word	31987
	.byte	0,6
	.word	31808
	.byte	24
	.byte	'IfxVadc_Adc_initModuleConfig',0,14,139,5,17,1,1,1,1,8
	.byte	'config',0,14,139,5,66
	.word	32059
	.byte	8
	.byte	'vadc',0,14,139,5,84
	.word	28557
	.byte	0,20
	.word	30580
	.byte	6
	.word	32133
	.byte	16,11,142,2,9,1,17
	.byte	'IfxVadc_GatingSource_0',0,0,17
	.byte	'IfxVadc_GatingSource_1',0,1,17
	.byte	'IfxVadc_GatingSource_2',0,2,17
	.byte	'IfxVadc_GatingSource_3',0,3,17
	.byte	'IfxVadc_GatingSource_4',0,4,17
	.byte	'IfxVadc_GatingSource_5',0,5,17
	.byte	'IfxVadc_GatingSource_6',0,6,17
	.byte	'IfxVadc_GatingSource_7',0,7,17
	.byte	'IfxVadc_GatingSource_8',0,8,17
	.byte	'IfxVadc_GatingSource_9',0,9,17
	.byte	'IfxVadc_GatingSource_10',0,10,17
	.byte	'IfxVadc_GatingSource_11',0,11,17
	.byte	'IfxVadc_GatingSource_12',0,12,17
	.byte	'IfxVadc_GatingSource_13',0,13,17
	.byte	'IfxVadc_GatingSource_14',0,14,17
	.byte	'IfxVadc_GatingSource_15',0,15,0,16,11,208,3,9,1,17
	.byte	'IfxVadc_TriggerSource_0',0,0,17
	.byte	'IfxVadc_TriggerSource_1',0,1,17
	.byte	'IfxVadc_TriggerSource_2',0,2,17
	.byte	'IfxVadc_TriggerSource_3',0,3,17
	.byte	'IfxVadc_TriggerSource_4',0,4,17
	.byte	'IfxVadc_TriggerSource_5',0,5,17
	.byte	'IfxVadc_TriggerSource_6',0,6,17
	.byte	'IfxVadc_TriggerSource_7',0,7,17
	.byte	'IfxVadc_TriggerSource_8',0,8,17
	.byte	'IfxVadc_TriggerSource_9',0,9,17
	.byte	'IfxVadc_TriggerSource_10',0,10,17
	.byte	'IfxVadc_TriggerSource_11',0,11,17
	.byte	'IfxVadc_TriggerSource_12',0,12,17
	.byte	'IfxVadc_TriggerSource_13',0,13,17
	.byte	'IfxVadc_TriggerSource_14',0,14,17
	.byte	'IfxVadc_TriggerSource_15',0,15,0,16,11,132,2,9,1,17
	.byte	'IfxVadc_GatingMode_disabled',0,0,17
	.byte	'IfxVadc_GatingMode_always',0,1,17
	.byte	'IfxVadc_GatingMode_gatingHigh',0,2,17
	.byte	'IfxVadc_GatingMode_gatingLow',0,3,0,16,11,198,3,9,1,17
	.byte	'IfxVadc_TriggerMode_noExternalTrigger',0,0,17
	.byte	'IfxVadc_TriggerMode_uponFallingEdge',0,1,17
	.byte	'IfxVadc_TriggerMode_uponRisingEdge',0,2,17
	.byte	'IfxVadc_TriggerMode_uponAnyEdge',0,3,0,19,14,238,2,9,4,12
	.byte	'gatingSource',0
	.word	32143
	.byte	1,2,35,0,12
	.byte	'triggerSource',0
	.word	32556
	.byte	1,2,35,1,12
	.byte	'gatingMode',0
	.word	32985
	.byte	1,2,35,2,12
	.byte	'triggerMode',0
	.word	33113
	.byte	1,2,35,3,0,16,11,133,3,9,1,17
	.byte	'IfxVadc_RequestSlotPriority_lowest',0,0,17
	.byte	'IfxVadc_RequestSlotPriority_low',0,1,17
	.byte	'IfxVadc_RequestSlotPriority_high',0,2,17
	.byte	'IfxVadc_RequestSlotPriority_highest',0,3,0,16,11,143,3,9,1,17
	.byte	'IfxVadc_RequestSlotStartMode_waitForStart',0,0,17
	.byte	'IfxVadc_RequestSlotStartMode_cancelInjectRepeat',0,1,0,19,14,171,3,9,8,12
	.byte	'autoscanEnabled',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'triggerConfig',0
	.word	33269
	.byte	4,2,35,2,12
	.byte	'requestSlotPrio',0
	.word	33362
	.byte	1,2,35,6,12
	.byte	'requestSlotStartMode',0
	.word	33513
	.byte	1,2,35,7,0,19,14,161,3,9,8,12
	.byte	'flushQueueAfterInit',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'triggerConfig',0
	.word	33269
	.byte	4,2,35,2,12
	.byte	'requestSlotPrio',0
	.word	33362
	.byte	1,2,35,6,12
	.byte	'requestSlotStartMode',0
	.word	33513
	.byte	1,2,35,7,0,19,14,134,3,9,8,12
	.byte	'autoBackgroundScanEnabled',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'triggerConfig',0
	.word	33269
	.byte	4,2,35,2,12
	.byte	'requestSlotPrio',0
	.word	33362
	.byte	1,2,35,6,12
	.byte	'requestSlotStartMode',0
	.word	33513
	.byte	1,2,35,7,0,16,11,80,9,1,17
	.byte	'IfxVadc_ArbitrationRounds_4_slots',0,0,17
	.byte	'IfxVadc_ArbitrationRounds_8_slots',0,1,17
	.byte	'IfxVadc_ArbitrationRounds_16_slots',0,2,17
	.byte	'IfxVadc_ArbitrationRounds_20_slots',0,3,0,19,14,252,2,9,4,12
	.byte	'arbiterRoundLength',0
	.word	33958
	.byte	1,2,35,0,12
	.byte	'requestSlotQueueEnabled',0
	.word	305
	.byte	1,2,35,1,12
	.byte	'requestSlotScanEnabled',0
	.word	305
	.byte	1,2,35,2,12
	.byte	'requestSlotBackgroundScanEnabled',0
	.word	305
	.byte	1,2,35,3,0
.L61:
	.byte	19,14,130,4,9,52,12
	.byte	'module',0
	.word	32138
	.byte	4,2,35,0,12
	.byte	'groupId',0
	.word	29231
	.byte	1,2,35,4,12
	.byte	'master',0
	.word	29231
	.byte	1,2,35,5,12
	.byte	'inputClass',0
	.word	31720
	.byte	12,2,35,6,12
	.byte	'scanRequest',0
	.word	33614
	.byte	8,2,35,20,12
	.byte	'queueRequest',0
	.word	33724
	.byte	8,2,35,28,12
	.byte	'backgroundScanRequest',0
	.word	33838
	.byte	8,2,35,36,12
	.byte	'disablePostCalibration',0
	.word	305
	.byte	1,2,35,44,12
	.byte	'arbiter',0
	.word	34110
	.byte	4,2,35,46,0,20
	.word	34252
	.byte	6
	.word	34451
	.byte	25
	.byte	'IfxVadc_Adc_initGroup',0,14,178,6,27
	.word	31451
	.byte	1,1,1,1,8
	.byte	'group',0,14,178,6,68
	.word	30784
	.byte	8
	.byte	'config',0,14,178,6,106
	.word	34456
	.byte	0,6
	.word	34252
	.byte	24
	.byte	'IfxVadc_Adc_initGroupConfig',0,14,188,6,17,1,1,1,1,8
	.byte	'config',0,14,188,6,70
	.word	34528
	.byte	8
	.byte	'vadc',0,14,188,6,91
	.word	31668
	.byte	0,22
	.word	30729
	.byte	23
	.word	30763
	.byte	21,26
	.word	29165
	.byte	23
	.word	29195
	.byte	23
	.word	29210
	.byte	27
	.word	29229
	.byte	0,3,0,0,16,15,49,9,1,17
	.byte	'IfxSrc_Tos_cpu0',0,0,17
	.byte	'IfxSrc_Tos_dma',0,1,0,16,11,169,3,9,1,17
	.byte	'IfxVadc_SrcNr_group0',0,0,17
	.byte	'IfxVadc_SrcNr_group1',0,1,17
	.byte	'IfxVadc_SrcNr_group2',0,2,17
	.byte	'IfxVadc_SrcNr_group3',0,3,17
	.byte	'IfxVadc_SrcNr_shared0',0,4,17
	.byte	'IfxVadc_SrcNr_shared1',0,5,17
	.byte	'IfxVadc_SrcNr_shared2',0,6,17
	.byte	'IfxVadc_SrcNr_shared3',0,7,0,16,11,164,2,9,1,17
	.byte	'IfxVadc_InputClasses_group0',0,0,17
	.byte	'IfxVadc_InputClasses_group1',0,1,17
	.byte	'IfxVadc_InputClasses_global0',0,2,17
	.byte	'IfxVadc_InputClasses_global1',0,3,0,16,11,141,1,9,1,17
	.byte	'IfxVadc_ChannelReference_standard',0,0,17
	.byte	'IfxVadc_ChannelReference_channel0',0,1,0,16,11,112,9,1,17
	.byte	'IfxVadc_BoundarySelection_group0',0,0,17
	.byte	'IfxVadc_BoundarySelection_group1',0,1,17
	.byte	'IfxVadc_BoundarySelection_global0',0,2,17
	.byte	'IfxVadc_BoundarySelection_global1',0,3,0,16,11,90,9,1,17
	.byte	'IfxVadc_BoundaryExtension_standard',0,0,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult1',0,1,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult2',0,2,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult3',0,3,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult4',0,4,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult5',0,5,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult6',0,6,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult7',0,7,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult8',0,8,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult9',0,9,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult10',0,10,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult11',0,11,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult12',0,12,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult13',0,13,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult14',0,14,17
	.byte	'IfxVadc_BoundaryExtension_fastCompareResult15',0,15,0,16,11,174,2,9,1,17
	.byte	'IfxVadc_LimitCheck_noCheck',0,0,17
	.byte	'IfxVadc_LimitCheck_eventIfInArea',0,1,17
	.byte	'IfxVadc_LimitCheck_eventIfOutsideArea',0,2,17
	.byte	'IfxVadc_LimitCheck_always',0,3,0,19,14,201,3,9,24,12
	.byte	'globalResultUsage',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'synchonize',0
	.word	305
	.byte	1,2,35,1,12
	.byte	'backgroundChannel',0
	.word	305
	.byte	1,2,35,2,12
	.byte	'rightAlignedStorage',0
	.word	305
	.byte	1,2,35,3,12
	.byte	'resultPriority',0
	.word	856
	.byte	2,2,35,4,12
	.byte	'channelPriority',0
	.word	856
	.byte	2,2,35,6,12
	.byte	'resultServProvider',0
	.word	34636
	.byte	1,2,35,8,12
	.byte	'channelServProvider',0
	.word	34636
	.byte	1,2,35,9,12
	.byte	'resultSrcNr',0
	.word	34677
	.byte	1,2,35,10,12
	.byte	'channelSrcNr',0
	.word	34677
	.byte	1,2,35,11,12
	.byte	'channelId',0
	.word	29523
	.byte	1,2,35,12,12
	.byte	'inputClass',0
	.word	34872
	.byte	1,2,35,13,12
	.byte	'reference',0
	.word	35001
	.byte	1,2,35,14,12
	.byte	'resultRegister',0
	.word	30151
	.byte	1,2,35,15,12
	.byte	'lowerBoundary',0
	.word	35080
	.byte	1,2,35,16,12
	.byte	'upperBoundary',0
	.word	35080
	.byte	1,2,35,17,12
	.byte	'boundaryMode',0
	.word	35228
	.byte	1,2,35,18,12
	.byte	'limitCheck',0
	.word	35982
	.byte	1,2,35,19,12
	.byte	'group',0
	.word	30661
	.byte	4,2,35,20,0,20
	.word	36121
	.byte	6
	.word	36565
	.byte	25
	.byte	'IfxVadc_Adc_initChannel',0,14,247,6,27
	.word	31451
	.byte	1,1,1,1,8
	.byte	'channel',0,14,247,6,72
	.word	30724
	.byte	8
	.byte	'config',0,14,247,6,114
	.word	36570
	.byte	0,6
	.word	36121
	.byte	24
	.byte	'IfxVadc_Adc_initChannelConfig',0,14,129,7,17,1,1,1,1,8
	.byte	'config',0,14,129,7,74
	.word	36646
	.byte	8
	.byte	'group',0,14,129,7,107
	.word	30661
	.byte	0,22
	.word	30789
	.byte	23
	.word	30817
	.byte	23
	.word	30832
	.byte	23
	.word	30850
	.byte	3,0,22
	.word	30866
	.byte	23
	.word	30896
	.byte	21,26
	.word	29480
	.byte	23
	.word	29506
	.byte	27
	.word	29521
	.byte	0,3,0,0
.L65:
	.byte	14,72
	.word	36121
	.byte	15,2,0
.L67:
	.byte	14,24
	.word	30666
	.byte	15,2,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,16,1,1
	.word	36792
	.byte	28
	.byte	'__size_t',0,16,1,1
	.word	282
	.byte	28
	.byte	'__ptrdiff_t',0,16,1,1
	.word	298
	.byte	29,1,6
	.word	36860
	.byte	28
	.byte	'__codeptr',0,16,1,1
	.word	36862
	.byte	28
	.byte	'__intptr_t',0,16,1,1
	.word	298
	.byte	28
	.byte	'__uintptr_t',0,16,1,1
	.word	282
	.byte	28
	.byte	'IfxSrc_Tos',0,15,53,3
	.word	34636
	.byte	28
	.byte	'_iob_flag_t',0,17,82,25
	.word	856
	.byte	28
	.byte	'uint8',0,18,89,24
	.word	305
	.byte	28
	.byte	'sint16',0,18,90,24
	.word	36792
	.byte	28
	.byte	'uint16',0,18,91,24
	.word	856
	.byte	4
	.byte	'long int',0,4,5,28
	.byte	'sint32',0,18,92,24
	.word	37007
	.byte	28
	.byte	'uint32',0,18,93,24
	.word	9326
	.byte	28
	.byte	'float32',0,18,94,24
	.word	28940
	.byte	28
	.byte	'boolean',0,18,104,24
	.word	305
	.byte	4
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,19,36,28
	.word	37081
	.byte	28
	.byte	'uint64',0,19,37,28
	.word	169
	.byte	28
	.byte	'pvoid',0,19,40,28
	.word	201
	.byte	28
	.byte	'Ifx_TickTime',0,19,43,28
	.word	37081
	.byte	28
	.byte	'Ifx_Priority',0,19,67,16
	.word	856
	.byte	16,19,94,9,1,17
	.byte	'Ifx_RxSel_a',0,0,17
	.byte	'Ifx_RxSel_b',0,1,17
	.byte	'Ifx_RxSel_c',0,2,17
	.byte	'Ifx_RxSel_d',0,3,17
	.byte	'Ifx_RxSel_e',0,4,17
	.byte	'Ifx_RxSel_f',0,5,17
	.byte	'Ifx_RxSel_g',0,6,17
	.byte	'Ifx_RxSel_h',0,7,0,28
	.byte	'Ifx_RxSel',0,19,104,3
	.word	37184
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	322
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	612
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,86,25,12,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	37367
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,4,91,3
	.word	37426
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,94,25,4,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	37454
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,4,97,3
	.word	37491
	.byte	14,64
	.word	612
	.byte	15,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,100,25,64,12
	.byte	'INT',0
	.word	37519
	.byte	64,2,35,0,0,13
	.word	37528
	.byte	28
	.byte	'Ifx_SRC_CAN',0,4,103,3
	.word	37560
	.byte	14,32
	.word	612
	.byte	15,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,4,106,25,32,12
	.byte	'INT',0
	.word	37585
	.byte	32,2,35,0,0,13
	.word	37594
	.byte	28
	.byte	'Ifx_SRC_CAN1',0,4,109,3
	.word	37627
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	37653
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	37725
	.byte	14,8
	.word	612
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,12
	.byte	'SR',0
	.word	37751
	.byte	8,2,35,0,0,13
	.word	37760
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	37796
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,4,127,25,32,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	23172
	.byte	28,2,35,4,0,13
	.word	37826
	.byte	28
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	37880
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,4,134,1,25,80,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	4816
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	37519
	.byte	64,2,35,16,0,13
	.word	37906
	.byte	28
	.byte	'Ifx_SRC_DMA',0,4,139,1,3
	.word	37971
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,142,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	37997
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,4,145,1,3
	.word	38030
	.byte	9
	.byte	'_Ifx_SRC_ERAY',0,4,148,1,25,80,12
	.byte	'INT',0
	.word	37751
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	37751
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	37751
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	37751
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	612
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	612
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	12985
	.byte	40,2,35,40,0,13
	.word	38057
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,4,157,1,3
	.word	38184
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,160,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	38211
	.byte	28
	.byte	'Ifx_SRC_ETH',0,4,163,1,3
	.word	38243
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,4,166,1,25,8,12
	.byte	'WUT',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	612
	.byte	4,2,35,4,0,13
	.word	38269
	.byte	28
	.byte	'Ifx_SRC_EVR',0,4,170,1,3
	.word	38316
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,4,173,1,25,12,12
	.byte	'DONE',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	38342
	.byte	28
	.byte	'Ifx_SRC_FFT',0,4,178,1,3
	.word	38402
	.byte	14,240,11
	.word	305
	.byte	15,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,181,1,25,128,12,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	38428
	.byte	240,11,2,35,16,0,13
	.word	38439
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,4,188,1,3
	.word	38535
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,191,1,25,48,12
	.byte	'CIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	612
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	3847
	.byte	24,2,35,24,0,13
	.word	38562
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,4,200,1,3
	.word	38679
	.byte	14,236,2
	.word	305
	.byte	15,235,2,0,14,32
	.word	37585
	.byte	15,0,0,14,224,7
	.word	305
	.byte	15,223,7,0,14,64
	.word	37585
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_GTM',0,4,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	38707
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	4816
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	38718
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	38727
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	38738
	.byte	64,3,35,128,11,0,13
	.word	38747
	.byte	28
	.byte	'Ifx_SRC_GTM',0,4,212,1,3
	.word	38894
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,215,1,25,8,12
	.byte	'HSM',0
	.word	37751
	.byte	8,2,35,0,0,13
	.word	38920
	.byte	28
	.byte	'Ifx_SRC_HSM',0,4,218,1,3
	.word	38953
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,221,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	38979
	.byte	28
	.byte	'Ifx_SRC_LMU',0,4,224,1,3
	.word	39011
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,227,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	39037
	.byte	28
	.byte	'Ifx_SRC_PMU',0,4,230,1,3
	.word	39069
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,233,1,25,24,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	612
	.byte	4,2,35,20,0,13
	.word	39095
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,4,241,1,3
	.word	39188
	.byte	14,16
	.word	612
	.byte	15,3,0,9
	.byte	'_Ifx_SRC_SCU',0,4,244,1,25,20,12
	.byte	'DTS',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	39215
	.byte	16,2,35,4,0,13
	.word	39224
	.byte	28
	.byte	'Ifx_SRC_SCU',0,4,248,1,3
	.word	39270
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,4,251,1,25,16,12
	.byte	'SR',0
	.word	39215
	.byte	16,2,35,0,0,13
	.word	39296
	.byte	28
	.byte	'Ifx_SRC_SENT',0,4,254,1,3
	.word	39329
	.byte	14,12
	.word	612
	.byte	15,2,0,9
	.byte	'_Ifx_SRC_SMU',0,4,129,2,25,12,12
	.byte	'SR',0
	.word	39356
	.byte	12,2,35,0,0,13
	.word	39365
	.byte	28
	.byte	'Ifx_SRC_SMU',0,4,132,2,3
	.word	39397
	.byte	14,88
	.word	305
	.byte	15,87,0,9
	.byte	'_Ifx_SRC_STM',0,4,135,2,25,96,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	39423
	.byte	88,2,35,8,0,13
	.word	39432
	.byte	28
	.byte	'Ifx_SRC_STM',0,4,140,2,3
	.word	39498
	.byte	14,176,2
	.word	305
	.byte	15,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,4,143,2,25,192,2,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	39524
	.byte	176,2,2,35,16,0,13
	.word	39535
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,4,150,2,3
	.word	39633
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,153,2,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	39662
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,4,159,2,3
	.word	39736
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,162,2,25,4,12
	.byte	'SRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	39764
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,4,165,2,3
	.word	39798
	.byte	14,24
	.word	37367
	.byte	15,1,0,13
	.word	39825
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	39834
	.byte	24,2,35,0,0,13
	.word	39839
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,4,181,2,3
	.word	39879
	.byte	13
	.word	37454
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,184,2,25,4,12
	.byte	'SPB',0
	.word	39909
	.byte	4,2,35,0,0,13
	.word	39914
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,4,187,2,3
	.word	39948
	.byte	14,64
	.word	37528
	.byte	15,0,0,13
	.word	39975
	.byte	14,32
	.word	37594
	.byte	15,0,0,13
	.word	39989
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,190,2,25,96,12
	.byte	'CAN',0
	.word	39984
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	39998
	.byte	32,2,35,64,0,13
	.word	40003
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,4,194,2,3
	.word	40051
	.byte	14,32
	.word	37653
	.byte	15,1,0,13
	.word	40078
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,197,2,25,32,12
	.byte	'CCU6',0
	.word	40087
	.byte	32,2,35,0,0,13
	.word	40092
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,4,200,2,3
	.word	40128
	.byte	13
	.word	37760
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	40156
	.byte	8,2,35,0,0,13
	.word	40161
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,4,206,2,3
	.word	40205
	.byte	14,32
	.word	37826
	.byte	15,0,0,13
	.word	40237
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,209,2,25,32,12
	.byte	'CPU',0
	.word	40246
	.byte	32,2,35,0,0,13
	.word	40251
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,4,212,2,3
	.word	40285
	.byte	14,80
	.word	37906
	.byte	15,0,0,13
	.word	40312
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,215,2,25,80,12
	.byte	'DMA',0
	.word	40321
	.byte	80,2,35,0,0,13
	.word	40326
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,4,218,2,3
	.word	40360
	.byte	14,4
	.word	37997
	.byte	15,0,0,13
	.word	40387
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,221,2,25,4,12
	.byte	'EMEM',0
	.word	40396
	.byte	4,2,35,0,0,13
	.word	40401
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,4,224,2,3
	.word	40437
	.byte	14,80
	.word	38057
	.byte	15,0,0,13
	.word	40465
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,227,2,25,80,12
	.byte	'ERAY',0
	.word	40474
	.byte	80,2,35,0,0,13
	.word	40479
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,4,230,2,3
	.word	40515
	.byte	14,4
	.word	38211
	.byte	15,0,0,13
	.word	40543
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,233,2,25,4,12
	.byte	'ETH',0
	.word	40552
	.byte	4,2,35,0,0,13
	.word	40557
	.byte	28
	.byte	'Ifx_SRC_GETH',0,4,236,2,3
	.word	40591
	.byte	14,8
	.word	38269
	.byte	15,0,0,13
	.word	40618
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,4,239,2,25,8,12
	.byte	'EVR',0
	.word	40627
	.byte	8,2,35,0,0,13
	.word	40632
	.byte	28
	.byte	'Ifx_SRC_GEVR',0,4,242,2,3
	.word	40666
	.byte	14,12
	.word	38342
	.byte	15,0,0,13
	.word	40693
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,4,245,2,25,12,12
	.byte	'FFT',0
	.word	40702
	.byte	12,2,35,0,0,13
	.word	40707
	.byte	28
	.byte	'Ifx_SRC_GFFT',0,4,248,2,3
	.word	40741
	.byte	14,128,12
	.word	38439
	.byte	15,0,0,13
	.word	40768
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	40778
	.byte	128,12,2,35,0,0,13
	.word	40783
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,4,254,2,3
	.word	40821
	.byte	14,48
	.word	38562
	.byte	15,0,0,13
	.word	40849
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,129,3,25,48,12
	.byte	'GPT12',0
	.word	40858
	.byte	48,2,35,0,0,13
	.word	40863
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,4,132,3,3
	.word	40901
	.byte	14,192,11
	.word	38747
	.byte	15,0,0,13
	.word	40930
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,135,3,25,192,11,12
	.byte	'GTM',0
	.word	40940
	.byte	192,11,2,35,0,0,13
	.word	40945
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,4,138,3,3
	.word	40981
	.byte	14,8
	.word	38920
	.byte	15,0,0,13
	.word	41008
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,141,3,25,8,12
	.byte	'HSM',0
	.word	41017
	.byte	8,2,35,0,0,13
	.word	41022
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,4,144,3,3
	.word	41056
	.byte	14,4
	.word	38979
	.byte	15,0,0,13
	.word	41083
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,147,3,25,4,12
	.byte	'LMU',0
	.word	41092
	.byte	4,2,35,0,0,13
	.word	41097
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,4,150,3,3
	.word	41131
	.byte	14,8
	.word	39037
	.byte	15,1,0,13
	.word	41158
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,153,3,25,8,12
	.byte	'PMU',0
	.word	41167
	.byte	8,2,35,0,0,13
	.word	41172
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,4,156,3,3
	.word	41206
	.byte	14,96
	.word	39095
	.byte	15,3,0,13
	.word	41233
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,159,3,25,96,12
	.byte	'QSPI',0
	.word	41242
	.byte	96,2,35,0,0,13
	.word	41247
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,4,162,3,3
	.word	41283
	.byte	13
	.word	39224
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,165,3,25,20,12
	.byte	'SCU',0
	.word	41311
	.byte	20,2,35,0,0,13
	.word	41316
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,4,168,3,3
	.word	41350
	.byte	14,16
	.word	39296
	.byte	15,0,0,13
	.word	41377
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,171,3,25,16,12
	.byte	'SENT',0
	.word	41386
	.byte	16,2,35,0,0,13
	.word	41391
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,4,174,3,3
	.word	41427
	.byte	14,12
	.word	39365
	.byte	15,0,0,13
	.word	41455
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,177,3,25,12,12
	.byte	'SMU',0
	.word	41464
	.byte	12,2,35,0,0,13
	.word	41469
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,4,180,3,3
	.word	41503
	.byte	14,96
	.word	39432
	.byte	15,0,0,13
	.word	41530
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,183,3,25,96,12
	.byte	'STM',0
	.word	41539
	.byte	96,2,35,0,0,13
	.word	41544
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,4,186,3,3
	.word	41578
	.byte	14,64
	.word	39662
	.byte	15,3,0,13
	.word	41605
	.byte	14,224,1
	.word	305
	.byte	15,223,1,0,14,192,2
	.word	39535
	.byte	15,0,0,13
	.word	41630
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,189,3,25,224,4,12
	.byte	'G',0
	.word	41614
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	41619
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	41640
	.byte	192,2,3,35,160,2,0,13
	.word	41645
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,4,194,3,3
	.word	41715
	.byte	13
	.word	39764
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,197,3,25,4,12
	.byte	'XBAR',0
	.word	41743
	.byte	4,2,35,0,0,13
	.word	41748
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,4,200,3,3
	.word	41784
	.byte	28
	.byte	'IfxVadc_GroupId',0,13,99,3
	.word	29231
	.byte	28
	.byte	'Ifx_VADC_ACCEN0_Bits',0,12,83,3
	.word	23724
	.byte	28
	.byte	'Ifx_VADC_ACCPROT0_Bits',0,12,100,3
	.word	24644
	.byte	28
	.byte	'Ifx_VADC_ACCPROT1_Bits',0,12,116,3
	.word	24919
	.byte	28
	.byte	'Ifx_VADC_BRSCTRL_Bits',0,12,132,1,3
	.word	26381
	.byte	28
	.byte	'Ifx_VADC_BRSMR_Bits',0,12,149,1,3
	.word	26657
	.byte	28
	.byte	'Ifx_VADC_BRSPND_Bits',0,12,155,1,3
	.word	26284
	.byte	28
	.byte	'Ifx_VADC_BRSSEL_Bits',0,12,161,1,3
	.word	26178
	.byte	28
	.byte	'Ifx_VADC_CLC_Bits',0,12,171,1,3
	.word	22891
	.byte	28
	.byte	'Ifx_VADC_EMUXSEL_Bits',0,12,179,1,3
	.word	27514
	.byte	28
	.byte	'Ifx_VADC_G_ALIAS_Bits',0,12,188,1,3
	.word	11599
	.byte	28
	.byte	'Ifx_VADC_G_ARBCFG_Bits',0,12,208,1,3
	.word	9555
	.byte	28
	.byte	'Ifx_VADC_G_ARBPR_Bits',0,12,231,1,3
	.word	9898
	.byte	28
	.byte	'Ifx_VADC_G_ASCTRL_Bits',0,12,250,1,3
	.word	14310
	.byte	28
	.byte	'Ifx_VADC_G_ASMR_Bits',0,12,139,2,3
	.word	14643
	.byte	28
	.byte	'Ifx_VADC_G_ASPND_Bits',0,12,145,2,3
	.word	15015
	.byte	28
	.byte	'Ifx_VADC_G_ASSEL_Bits',0,12,151,2,3
	.word	14928
	.byte	28
	.byte	'Ifx_VADC_G_BFL_Bits',0,12,171,2,3
	.word	12094
	.byte	28
	.byte	'Ifx_VADC_G_BFLC_Bits',0,12,181,2,3
	.word	12664
	.byte	28
	.byte	'Ifx_VADC_G_BFLNP_Bits',0,12,191,2,3
	.word	12820
	.byte	28
	.byte	'Ifx_VADC_G_BFLS_Bits',0,12,206,2,3
	.word	12422
	.byte	28
	.byte	'Ifx_VADC_G_BOUND_Bits',0,12,215,2,3
	.word	11750
	.byte	28
	.byte	'Ifx_VADC_G_CEFCLR_Bits',0,12,237,2,3
	.word	17832
	.byte	28
	.byte	'Ifx_VADC_G_CEFLAG_Bits',0,12,131,3,3
	.word	16957
	.byte	28
	.byte	'Ifx_VADC_G_CEVNP0_Bits',0,12,144,3,3
	.word	18707
	.byte	28
	.byte	'Ifx_VADC_G_CEVNP1_Bits',0,12,157,3,3
	.word	18922
	.byte	28
	.byte	'Ifx_VADC_G_CHASS_Bits',0,12,194,3,3
	.word	10304
	.byte	28
	.byte	'Ifx_VADC_G_CHCTR_Bits',0,12,214,3,3
	.word	20608
	.byte	28
	.byte	'Ifx_VADC_G_EMUXCTR_Bits',0,12,229,3,3
	.word	20008
	.byte	28
	.byte	'Ifx_VADC_G_Q0R0_Bits',0,12,240,3,3
	.word	13777
	.byte	28
	.byte	'Ifx_VADC_G_Q0R3_Bits',0,12,128,4,3
	.word	15885
	.byte	28
	.byte	'Ifx_VADC_G_QBUR0_Bits',0,12,139,4,3
	.word	13946
	.byte	28
	.byte	'Ifx_VADC_G_QBUR3_Bits',0,12,155,4,3
	.word	16135
	.byte	28
	.byte	'Ifx_VADC_G_QCTRL0_Bits',0,12,174,4,3
	.word	12994
	.byte	28
	.byte	'Ifx_VADC_G_QCTRL3_Bits',0,12,193,4,3
	.word	15102
	.byte	28
	.byte	'Ifx_VADC_G_QINR0_Bits',0,12,203,4,3
	.word	14116
	.byte	28
	.byte	'Ifx_VADC_G_QINR3_Bits',0,12,219,4,3
	.word	16386
	.byte	28
	.byte	'Ifx_VADC_G_QMR0_Bits',0,12,234,4,3
	.word	13327
	.byte	28
	.byte	'Ifx_VADC_G_QMR3_Bits',0,12,249,4,3
	.word	15435
	.byte	28
	.byte	'Ifx_VADC_G_QSR0_Bits',0,12,133,5,3
	.word	13578
	.byte	28
	.byte	'Ifx_VADC_G_QSR3_Bits',0,12,145,5,3
	.word	15686
	.byte	28
	.byte	'Ifx_VADC_G_RCR_Bits',0,12,158,5,3
	.word	20981
	.byte	28
	.byte	'Ifx_VADC_G_REFCLR_Bits',0,12,180,5,3
	.word	18188
	.byte	28
	.byte	'Ifx_VADC_G_REFLAG_Bits',0,12,202,5,3
	.word	17313
	.byte	28
	.byte	'Ifx_VADC_G_RES_Bits',0,12,214,5,3
	.word	21214
	.byte	28
	.byte	'Ifx_VADC_G_RESD_Bits',0,12,226,5,3
	.word	21400
	.byte	28
	.byte	'Ifx_VADC_G_REVNP0_Bits',0,12,239,5,3
	.word	19143
	.byte	28
	.byte	'Ifx_VADC_G_REVNP1_Bits',0,12,252,5,3
	.word	19358
	.byte	28
	.byte	'Ifx_VADC_G_RRASS_Bits',0,12,146,6,3
	.word	10972
	.byte	28
	.byte	'Ifx_VADC_G_SEFCLR_Bits',0,12,156,6,3
	.word	18544
	.byte	28
	.byte	'Ifx_VADC_G_SEFLAG_Bits',0,12,166,6,3
	.word	17669
	.byte	28
	.byte	'Ifx_VADC_G_SEVNP_Bits',0,12,176,6,3
	.word	19579
	.byte	28
	.byte	'Ifx_VADC_G_SRACT_Bits',0,12,191,6,3
	.word	19748
	.byte	28
	.byte	'Ifx_VADC_G_SYNCTR_Bits',0,12,202,6,3
	.word	11908
	.byte	28
	.byte	'Ifx_VADC_G_TRCTR_Bits',0,12,218,6,3
	.word	16683
	.byte	28
	.byte	'Ifx_VADC_G_VFR_Bits',0,12,240,6,3
	.word	20271
	.byte	28
	.byte	'Ifx_VADC_GLOBBOUND_Bits',0,12,249,6,3
	.word	25178
	.byte	28
	.byte	'Ifx_VADC_GLOBCFG_Bits',0,12,141,7,3
	.word	24294
	.byte	28
	.byte	'Ifx_VADC_GLOBEFLAG_Bits',0,12,154,7,3
	.word	25338
	.byte	28
	.byte	'Ifx_VADC_GLOBEVNP_Bits',0,12,163,7,3
	.word	25587
	.byte	28
	.byte	'Ifx_VADC_GLOBRCR_Bits',0,12,174,7,3
	.word	26950
	.byte	28
	.byte	'Ifx_VADC_GLOBRES_Bits',0,12,186,7,3
	.word	27146
	.byte	28
	.byte	'Ifx_VADC_GLOBRESD_Bits',0,12,198,7,3
	.word	27325
	.byte	28
	.byte	'Ifx_VADC_GLOBTE_Bits',0,12,206,7,3
	.word	26053
	.byte	28
	.byte	'Ifx_VADC_GLOBTF_Bits',0,12,225,7,3
	.word	25739
	.byte	28
	.byte	'Ifx_VADC_ICLASS_Bits',0,12,238,7,3
	.word	11368
	.byte	28
	.byte	'Ifx_VADC_ID_Bits',0,12,246,7,3
	.word	23049
	.byte	28
	.byte	'Ifx_VADC_KRST0_Bits',0,12,254,7,3
	.word	23600
	.byte	28
	.byte	'Ifx_VADC_KRST1_Bits',0,12,133,8,3
	.word	23495
	.byte	28
	.byte	'Ifx_VADC_KRSTCLR_Bits',0,12,140,8,3
	.word	23388
	.byte	28
	.byte	'Ifx_VADC_OCS_Bits',0,12,153,8,3
	.word	23181
	.byte	28
	.byte	'Ifx_VADC_ACCEN0',0,12,166,8,3
	.word	24254
	.byte	28
	.byte	'Ifx_VADC_ACCPROT0',0,12,174,8,3
	.word	24879
	.byte	28
	.byte	'Ifx_VADC_ACCPROT1',0,12,182,8,3
	.word	25138
	.byte	28
	.byte	'Ifx_VADC_BRSCTRL',0,12,190,8,3
	.word	26617
	.byte	28
	.byte	'Ifx_VADC_BRSMR',0,12,198,8,3
	.word	26901
	.byte	28
	.byte	'Ifx_VADC_BRSPND',0,12,206,8,3
	.word	26332
	.byte	28
	.byte	'Ifx_VADC_BRSSEL',0,12,214,8,3
	.word	26226
	.byte	28
	.byte	'Ifx_VADC_CLC',0,12,222,8,3
	.word	23009
	.byte	28
	.byte	'Ifx_VADC_EMUXSEL',0,12,230,8,3
	.word	27606
	.byte	28
	.byte	'Ifx_VADC_G_ALIAS',0,12,238,8,3
	.word	11710
	.byte	28
	.byte	'Ifx_VADC_G_ARBCFG',0,12,246,8,3
	.word	9858
	.byte	28
	.byte	'Ifx_VADC_G_ARBPR',0,12,254,8,3
	.word	10264
	.byte	28
	.byte	'Ifx_VADC_G_ASCTRL',0,12,134,9,3
	.word	14603
	.byte	28
	.byte	'Ifx_VADC_G_ASMR',0,12,142,9,3
	.word	14888
	.byte	28
	.byte	'Ifx_VADC_G_ASPND',0,12,150,9,3
	.word	15062
	.byte	28
	.byte	'Ifx_VADC_G_ASSEL',0,12,158,9,3
	.word	14975
	.byte	28
	.byte	'Ifx_VADC_G_BFL',0,12,166,9,3
	.word	12382
	.byte	28
	.byte	'Ifx_VADC_G_BFLC',0,12,174,9,3
	.word	12780
	.byte	28
	.byte	'Ifx_VADC_G_BFLNP',0,12,182,9,3
	.word	12945
	.byte	28
	.byte	'Ifx_VADC_G_BFLS',0,12,190,9,3
	.word	12624
	.byte	28
	.byte	'Ifx_VADC_G_BOUND',0,12,198,9,3
	.word	11868
	.byte	28
	.byte	'Ifx_VADC_G_CEFCLR',0,12,206,9,3
	.word	18148
	.byte	28
	.byte	'Ifx_VADC_G_CEFLAG',0,12,214,9,3
	.word	17273
	.byte	28
	.byte	'Ifx_VADC_G_CEVNP0',0,12,222,9,3
	.word	18882
	.byte	28
	.byte	'Ifx_VADC_G_CEVNP1',0,12,230,9,3
	.word	19103
	.byte	28
	.byte	'Ifx_VADC_G_CHASS',0,12,238,9,3
	.word	10932
	.byte	28
	.byte	'Ifx_VADC_G_CHCTR',0,12,246,9,3
	.word	20923
	.byte	28
	.byte	'Ifx_VADC_G_EMUXCTR',0,12,254,9,3
	.word	20231
	.byte	28
	.byte	'Ifx_VADC_G_Q0R0',0,12,134,10,3
	.word	13906
	.byte	28
	.byte	'Ifx_VADC_G_Q0R3',0,12,142,10,3
	.word	16095
	.byte	28
	.byte	'Ifx_VADC_G_QBUR0',0,12,150,10,3
	.word	14076
	.byte	28
	.byte	'Ifx_VADC_G_QBUR3',0,12,158,10,3
	.word	16346
	.byte	28
	.byte	'Ifx_VADC_G_QCTRL0',0,12,166,10,3
	.word	13287
	.byte	28
	.byte	'Ifx_VADC_G_QCTRL3',0,12,174,10,3
	.word	15395
	.byte	28
	.byte	'Ifx_VADC_G_QINR0',0,12,182,10,3
	.word	14233
	.byte	28
	.byte	'Ifx_VADC_G_QINR3',0,12,190,10,3
	.word	16606
	.byte	28
	.byte	'Ifx_VADC_G_QMR0',0,12,198,10,3
	.word	13538
	.byte	28
	.byte	'Ifx_VADC_G_QMR3',0,12,206,10,3
	.word	15646
	.byte	28
	.byte	'Ifx_VADC_G_QSR0',0,12,214,10,3
	.word	13737
	.byte	28
	.byte	'Ifx_VADC_G_QSR3',0,12,222,10,3
	.word	15845
	.byte	28
	.byte	'Ifx_VADC_G_RCR',0,12,230,10,3
	.word	21156
	.byte	28
	.byte	'Ifx_VADC_G_REFCLR',0,12,238,10,3
	.word	18504
	.byte	28
	.byte	'Ifx_VADC_G_REFLAG',0,12,246,10,3
	.word	17629
	.byte	28
	.byte	'Ifx_VADC_G_RES',0,12,254,10,3
	.word	21351
	.byte	28
	.byte	'Ifx_VADC_G_RESD',0,12,134,11,3
	.word	21538
	.byte	28
	.byte	'Ifx_VADC_G_REVNP0',0,12,142,11,3
	.word	19318
	.byte	28
	.byte	'Ifx_VADC_G_REVNP1',0,12,150,11,3
	.word	19539
	.byte	28
	.byte	'Ifx_VADC_G_RRASS',0,12,158,11,3
	.word	11319
	.byte	28
	.byte	'Ifx_VADC_G_SEFCLR',0,12,166,11,3
	.word	18667
	.byte	28
	.byte	'Ifx_VADC_G_SEFLAG',0,12,174,11,3
	.word	17792
	.byte	28
	.byte	'Ifx_VADC_G_SEVNP',0,12,182,11,3
	.word	19708
	.byte	28
	.byte	'Ifx_VADC_G_SRACT',0,12,190,11,3
	.word	19959
	.byte	28
	.byte	'Ifx_VADC_G_SYNCTR',0,12,198,11,3
	.word	12054
	.byte	28
	.byte	'Ifx_VADC_G_TRCTR',0,12,206,11,3
	.word	16917
	.byte	28
	.byte	'Ifx_VADC_G_VFR',0,12,214,11,3
	.word	20568
	.byte	28
	.byte	'Ifx_VADC_GLOBBOUND',0,12,222,11,3
	.word	25298
	.byte	28
	.byte	'Ifx_VADC_GLOBCFG',0,12,230,11,3
	.word	24604
	.byte	28
	.byte	'Ifx_VADC_GLOBEFLAG',0,12,238,11,3
	.word	25538
	.byte	28
	.byte	'Ifx_VADC_GLOBEVNP',0,12,246,11,3
	.word	25699
	.byte	28
	.byte	'Ifx_VADC_GLOBRCR',0,12,254,11,3
	.word	27097
	.byte	28
	.byte	'Ifx_VADC_GLOBRES',0,12,134,12,3
	.word	27285
	.byte	28
	.byte	'Ifx_VADC_GLOBRESD',0,12,142,12,3
	.word	27465
	.byte	28
	.byte	'Ifx_VADC_GLOBTE',0,12,150,12,3
	.word	26138
	.byte	28
	.byte	'Ifx_VADC_GLOBTF',0,12,158,12,3
	.word	26013
	.byte	28
	.byte	'Ifx_VADC_ICLASS',0,12,166,12,3
	.word	11550
	.byte	28
	.byte	'Ifx_VADC_ID',0,12,174,12,3
	.word	23132
	.byte	28
	.byte	'Ifx_VADC_KRST0',0,12,182,12,3
	.word	23684
	.byte	28
	.byte	'Ifx_VADC_KRST1',0,12,190,12,3
	.word	23560
	.byte	28
	.byte	'Ifx_VADC_KRSTCLR',0,12,198,12,3
	.word	23455
	.byte	28
	.byte	'Ifx_VADC_OCS',0,12,206,12,3
	.word	23348
	.byte	13
	.word	21598
	.byte	28
	.byte	'Ifx_VADC_G',0,12,167,13,3
	.word	45787
	.byte	13
	.word	27683
	.byte	28
	.byte	'Ifx_VADC',0,12,226,13,3
	.word	45812
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	7522
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	7435
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4485
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2538
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3533
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2666
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3313
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	2881
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3096
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,8,200,1,3
	.word	6065
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,8,210,1,3
	.word	6589
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,8,221,1,3
	.word	6239
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,8,232,1,3
	.word	6413
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,8,254,1,3
	.word	7078
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,8,163,2,3
	.word	1967
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,8,173,2,3
	.word	5402
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,8,184,2,3
	.word	5890
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,8,195,2,3
	.word	5549
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,8,206,2,3
	.word	5718
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,8,228,2,3
	.word	6745
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,8,250,2,3
	.word	1651
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,8,135,3,3
	.word	5191
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,8,157,3,3
	.word	4825
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,8,178,3,3
	.word	3856
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,8,199,3,3
	.word	4160
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,8,212,3,3
	.word	8049
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,8,220,3,3
	.word	7482
	.byte	28
	.byte	'Ifx_P_ESR',0,8,228,3,3
	.word	4776
	.byte	28
	.byte	'Ifx_P_ID',0,8,236,3,3
	.word	2617
	.byte	28
	.byte	'Ifx_P_IN',0,8,244,3,3
	.word	3807
	.byte	28
	.byte	'Ifx_P_IOCR0',0,8,252,3,3
	.word	2841
	.byte	28
	.byte	'Ifx_P_IOCR12',0,8,132,4,3
	.word	3493
	.byte	28
	.byte	'Ifx_P_IOCR4',0,8,140,4,3
	.word	3056
	.byte	28
	.byte	'Ifx_P_IOCR8',0,8,148,4,3
	.word	3273
	.byte	28
	.byte	'Ifx_P_OMCR',0,8,156,4,3
	.word	7386
	.byte	28
	.byte	'Ifx_P_OMCR0',0,8,164,4,3
	.word	6199
	.byte	28
	.byte	'Ifx_P_OMCR12',0,8,172,4,3
	.word	6705
	.byte	28
	.byte	'Ifx_P_OMCR4',0,8,180,4,3
	.word	6373
	.byte	28
	.byte	'Ifx_P_OMCR8',0,8,188,4,3
	.word	6549
	.byte	28
	.byte	'Ifx_P_OMR',0,8,196,4,3
	.word	2498
	.byte	28
	.byte	'Ifx_P_OMSR',0,8,204,4,3
	.word	7038
	.byte	28
	.byte	'Ifx_P_OMSR0',0,8,212,4,3
	.word	5509
	.byte	28
	.byte	'Ifx_P_OMSR12',0,8,220,4,3
	.word	6025
	.byte	28
	.byte	'Ifx_P_OMSR4',0,8,228,4,3
	.word	5678
	.byte	28
	.byte	'Ifx_P_OMSR8',0,8,236,4,3
	.word	5850
	.byte	28
	.byte	'Ifx_P_OUT',0,8,244,4,3
	.word	1927
	.byte	28
	.byte	'Ifx_P_PCSR',0,8,252,4,3
	.word	5362
	.byte	28
	.byte	'Ifx_P_PDISC',0,8,132,5,3
	.word	5151
	.byte	28
	.byte	'Ifx_P_PDR0',0,8,140,5,3
	.word	4120
	.byte	28
	.byte	'Ifx_P_PDR1',0,8,148,5,3
	.word	4436
	.byte	13
	.word	8089
	.byte	28
	.byte	'Ifx_P',0,8,193,5,3
	.word	46982
	.byte	16,20,139,10,9,1,17
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,17
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,143,10,3
	.word	47002
	.byte	16,20,153,10,9,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,17
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,20,158,10,3
	.word	47099
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	47221
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	47778
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	47855
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	47991
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	48273
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	48511
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,149,1,3
	.word	48639
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,163,1,3
	.word	48866
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,172,1,3
	.word	49085
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,179,1,3
	.word	49213
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	305
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,193,1,3
	.word	49313
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,196,1,16,4,10
	.byte	'PWD',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	282
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,204,1,3
	.word	49521
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,216,1,3
	.word	49686
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,226,1,3
	.word	49869
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,6,248,1,3
	.word	50023
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,6,134,2,3
	.word	50387
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,137,2,16,4,10
	.byte	'POL',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,6,150,2,3
	.word	50598
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,158,2,3
	.word	50850
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,161,2,16,4,10
	.byte	'ARI',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,166,2,3
	.word	50968
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,176,2,3
	.word	51079
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,186,2,3
	.word	51242
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,201,2,3
	.word	51404
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,212,2,3
	.word	51682
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,222,2,3
	.word	51861
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,232,2,3
	.word	52021
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,244,2,3
	.word	52182
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,134,3,3
	.word	52374
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,147,3,3
	.word	52670
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,164,3,3
	.word	52885
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,175,3,3
	.word	53174
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,178,3,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	305
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	305
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,189,3,3
	.word	53353
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,192,3,16,4,10
	.byte	'STEP',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,6,200,3,3
	.word	53571
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,203,3,16,4,10
	.byte	'FS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,6,223,3,3
	.word	53734
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,6,231,3,3
	.word	54070
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,6,130,4,3
	.word	54177
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,133,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,6,138,4,3
	.word	54629
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,6,148,4,3
	.word	54728
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,157,4,3
	.word	54878
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,160,4,16,4,10
	.byte	'SEED',0,4
	.word	282
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,167,4,3
	.word	55027
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,175,4,3
	.word	55188
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,184,4,3
	.word	55318
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,192,4,3
	.word	55452
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	856
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,6,200,4,3
	.word	55567
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,203,4,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,6,211,4,3
	.word	55678
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	305
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,231,4,3
	.word	55836
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,234,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,6,239,4,3
	.word	56176
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,255,4,3
	.word	56277
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,136,5,3
	.word	56544
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,6,144,5,3
	.word	56680
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,147,5,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,6,154,5,3
	.word	56791
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,6,168,5,3
	.word	56924
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,188,5,3
	.word	57127
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,199,5,3
	.word	57483
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,206,5,3
	.word	57661
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,226,5,3
	.word	57761
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,237,5,3
	.word	58131
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,249,5,3
	.word	58317
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,135,6,3
	.word	58515
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,145,6,3
	.word	58748
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	305
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,174,6,3
	.word	58900
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,185,6,3
	.word	59459
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,6,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,6,196,6,3
	.word	59642
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,226,6,3
	.word	59811
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,242,6,3
	.word	60378
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,6,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,6,250,6,3
	.word	60694
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,135,7,3
	.word	60813
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,149,7,3
	.word	61022
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,175,7,3
	.word	61233
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,178,7,16,4,10
	.byte	'HBT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,182,7,3
	.word	61665
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,198,7,3
	.word	61761
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,206,7,3
	.word	62021
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,218,7,3
	.word	62146
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,228,7,3
	.word	62343
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,238,7,3
	.word	62496
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,248,7,3
	.word	62649
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,130,8,3
	.word	62802
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,139,8,3
	.word	720
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,154,8,3
	.word	878
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,170,8,3
	.word	1122
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,179,8,3
	.word	63057
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,195,8,3
	.word	63183
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,198,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,211,8,3
	.word	63435
	.byte	11,6,219,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47221
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,6,224,8,3
	.word	63654
	.byte	11,6,227,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47778
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,6,232,8,3
	.word	63718
	.byte	11,6,235,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47855
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,6,240,8,3
	.word	63782
	.byte	11,6,243,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47991
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,6,248,8,3
	.word	63847
	.byte	11,6,251,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48273
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,6,128,9,3
	.word	63912
	.byte	11,6,131,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48511
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,6,136,9,3
	.word	63977
	.byte	11,6,139,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48639
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,6,144,9,3
	.word	64042
	.byte	11,6,147,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48866
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,6,152,9,3
	.word	64107
	.byte	11,6,155,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49085
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,6,160,9,3
	.word	64172
	.byte	11,6,163,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49213
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,6,168,9,3
	.word	64237
	.byte	11,6,171,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49313
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,6,176,9,3
	.word	64302
	.byte	11,6,179,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49521
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,6,184,9,3
	.word	64366
	.byte	11,6,187,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49686
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,6,192,9,3
	.word	64430
	.byte	11,6,195,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49869
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,6,200,9,3
	.word	64494
	.byte	11,6,203,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50023
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,6,208,9,3
	.word	64559
	.byte	11,6,211,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50387
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,6,216,9,3
	.word	64621
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50598
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,6,224,9,3
	.word	64683
	.byte	11,6,227,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50850
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,6,232,9,3
	.word	64745
	.byte	11,6,235,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50968
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,6,240,9,3
	.word	64809
	.byte	11,6,243,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51079
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,6,248,9,3
	.word	64874
	.byte	11,6,251,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51242
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,128,10,3
	.word	64940
	.byte	11,6,131,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51404
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,136,10,3
	.word	65008
	.byte	11,6,139,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51682
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,6,144,10,3
	.word	65076
	.byte	11,6,147,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51861
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,6,152,10,3
	.word	65142
	.byte	11,6,155,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52021
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,160,10,3
	.word	65209
	.byte	11,6,163,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52182
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,168,10,3
	.word	65278
	.byte	11,6,171,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52374
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,176,10,3
	.word	65346
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52670
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,184,10,3
	.word	65414
	.byte	11,6,187,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52885
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,6,192,10,3
	.word	65482
	.byte	11,6,195,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53174
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,6,200,10,3
	.word	65547
	.byte	11,6,203,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53353
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,6,208,10,3
	.word	65613
	.byte	11,6,211,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53571
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,6,216,10,3
	.word	65677
	.byte	11,6,219,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53734
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,6,224,10,3
	.word	65738
	.byte	11,6,227,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54070
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,6,232,10,3
	.word	65799
	.byte	11,6,235,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54177
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,6,240,10,3
	.word	65859
	.byte	11,6,243,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54629
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,6,248,10,3
	.word	65921
	.byte	11,6,251,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54728
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,6,128,11,3
	.word	65981
	.byte	11,6,131,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54878
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,136,11,3
	.word	66043
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55027
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,144,11,3
	.word	66111
	.byte	11,6,147,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55188
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,152,11,3
	.word	66179
	.byte	11,6,155,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55318
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,6,160,11,3
	.word	66247
	.byte	11,6,163,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55452
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,6,168,11,3
	.word	66312
	.byte	11,6,171,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55567
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,6,176,11,3
	.word	66377
	.byte	11,6,179,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55678
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,6,184,11,3
	.word	66440
	.byte	11,6,187,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55836
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,6,192,11,3
	.word	66501
	.byte	11,6,195,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56176
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,6,200,11,3
	.word	66565
	.byte	11,6,203,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56277
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,6,208,11,3
	.word	66626
	.byte	11,6,211,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56544
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,6,216,11,3
	.word	66690
	.byte	11,6,219,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56680
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,6,224,11,3
	.word	66757
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56791
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,6,232,11,3
	.word	66820
	.byte	11,6,235,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56924
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,6,240,11,3
	.word	66881
	.byte	11,6,243,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57127
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,6,248,11,3
	.word	66943
	.byte	11,6,251,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57483
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,6,128,12,3
	.word	67008
	.byte	11,6,131,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57661
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,6,136,12,3
	.word	67073
	.byte	11,6,139,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57761
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,144,12,3
	.word	67138
	.byte	11,6,147,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58131
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,152,12,3
	.word	67207
	.byte	11,6,155,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58317
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,160,12,3
	.word	67276
	.byte	11,6,163,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58515
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,6,168,12,3
	.word	67345
	.byte	11,6,171,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58748
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,6,176,12,3
	.word	67410
	.byte	11,6,179,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58900
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,6,184,12,3
	.word	67473
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59459
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,6,192,12,3
	.word	67538
	.byte	11,6,195,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR3',0,6,200,12,3
	.word	67603
	.byte	11,6,203,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59811
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,6,208,12,3
	.word	67668
	.byte	11,6,211,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60378
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,216,12,3
	.word	67734
	.byte	11,6,219,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60694
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWUTCNT',0,6,224,12,3
	.word	67803
	.byte	11,6,227,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61022
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,6,232,12,3
	.word	67870
	.byte	11,6,235,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60813
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,6,240,12,3
	.word	67934
	.byte	11,6,243,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61233
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,6,248,12,3
	.word	67999
	.byte	11,6,251,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61665
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,6,128,13,3
	.word	68064
	.byte	11,6,131,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61761
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,6,136,13,3
	.word	68129
	.byte	11,6,139,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62021
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,6,144,13,3
	.word	68193
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62146
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,6,152,13,3
	.word	68259
	.byte	11,6,155,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62343
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,6,160,13,3
	.word	68323
	.byte	11,6,163,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62496
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,6,168,13,3
	.word	68388
	.byte	11,6,171,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62649
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,6,176,13,3
	.word	68453
	.byte	11,6,179,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62802
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,6,184,13,3
	.word	68518
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,192,13,3
	.word	816
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,200,13,3
	.word	1082
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,208,13,3
	.word	1313
	.byte	11,6,211,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63057
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,6,216,13,3
	.word	68669
	.byte	11,6,219,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63183
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,6,224,13,3
	.word	68736
	.byte	11,6,227,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63435
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,6,232,13,3
	.word	68803
	.byte	13
	.word	1353
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,6,248,13,3
	.word	68868
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,251,13,25,12,12
	.byte	'CON0',0
	.word	68669
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	68736
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	68803
	.byte	4,2,35,8,0,13
	.word	68897
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,6,128,14,3
	.word	68958
	.byte	14,8
	.word	64745
	.byte	15,1,0,14,4
	.word	67410
	.byte	15,0,0,13
	.word	68897
	.byte	14,12
	.word	1353
	.byte	15,0,0,13
	.word	69008
	.byte	14,20
	.word	305
	.byte	15,19,0,14,16
	.word	64559
	.byte	15,3,0,14,16
	.word	65859
	.byte	15,3,0,14,188,1
	.word	305
	.byte	15,187,1,0,14,244,1
	.word	305
	.byte	15,243,1,0,9
	.byte	'_Ifx_SCU',0,6,141,14,25,128,8,12
	.byte	'reserved_0',0
	.word	4476
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	65799
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	66501
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	67345
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	66943
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	67008
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	67073
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	67276
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	67138
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	67207
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	63847
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	63912
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	65677
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	65613
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	63977
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	64042
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	64107
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	64172
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	67999
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2657
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	67870
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	63782
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	68193
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	67934
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2657
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	65142
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	68985
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	64809
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	68259
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	64237
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	3847
	.byte	24,3,35,132,1,12
	.byte	'PDR',0
	.word	66820
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	65981
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	66565
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	66440
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	65921
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	65482
	.byte	4,3,35,176,1,12
	.byte	'reserved_B4',0
	.word	2657
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	64874
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	2657
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	68129
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2657
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	67473
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	67668
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	67734
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	68994
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	4476
	.byte	8,3,35,216,1,12
	.byte	'DTSSTAT',0
	.word	64494
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	64366
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	67538
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2657
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	69003
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	64683
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	69017
	.byte	12,3,35,128,2,12
	.byte	'reserved_10C',0
	.word	3847
	.byte	24,3,35,140,2,12
	.byte	'TRAPSTAT',0
	.word	68518
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	68453
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	68323
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	68388
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	66247
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	2657
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	66312
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	64302
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	66377
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4476
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	68064
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	11359
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	66043
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	66111
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	66179
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	23172
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	66757
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4816
	.byte	12,3,35,144,3,12
	.byte	'EVRADCSTAT',0
	.word	64940
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	65547
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	65076
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	65008
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2657
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	65278
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	65346
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	65414
	.byte	4,3,35,184,3,12
	.byte	'reserved_1BC',0
	.word	4476
	.byte	8,3,35,188,3,12
	.byte	'EVRSDCOEFF2',0
	.word	65209
	.byte	4,3,35,196,3,12
	.byte	'reserved_1C8',0
	.word	69022
	.byte	20,3,35,200,3,12
	.byte	'PMSWUTCNT',0
	.word	67803
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	66690
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	66626
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	12985
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	69031
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	64621
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	65738
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	66881
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	69040
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2657
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	64430
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	69049
	.byte	188,1,3,35,196,4,12
	.byte	'PMSWCR3',0
	.word	67603
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	69060
	.byte	244,1,3,35,132,6,12
	.byte	'ACCEN1',0
	.word	63718
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	63654
	.byte	4,3,35,252,7,0,13
	.word	69071
	.byte	28
	.byte	'Ifx_SCU',0,6,244,14,3
	.word	70967
	.byte	16,7,54,9,1,17
	.byte	'IfxPort_InputMode_undefined',0,127,17
	.byte	'IfxPort_InputMode_noPullDevice',0,0,17
	.byte	'IfxPort_InputMode_pullDown',0,8,17
	.byte	'IfxPort_InputMode_pullUp',0,16,0,28
	.byte	'IfxPort_InputMode',0,7,60,3
	.word	70989
	.byte	28
	.byte	'IfxPort_OutputIdx',0,7,101,3
	.word	8701
	.byte	28
	.byte	'IfxPort_OutputMode',0,7,109,3
	.word	8632
	.byte	16,7,115,9,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,17
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,17
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,17
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,17
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,7,125,3
	.word	71193
	.byte	28
	.byte	'IfxPort_State',0,7,137,1,3
	.word	9014
	.byte	19,7,149,1,9,8,12
	.byte	'port',0
	.word	8627
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	305
	.byte	1,2,35,4,0,28
	.byte	'IfxPort_Pin',0,7,153,1,3
	.word	71532
	.byte	19,21,39,15,20,12
	.byte	'module',0
	.word	28557
	.byte	4,2,35,0,12
	.byte	'groupId',0
	.word	29231
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	71532
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	8701
	.byte	1,2,35,16,0,20
	.word	71592
	.byte	28
	.byte	'IfxVadc_GxBfl_Out',0,21,45,3
	.word	71660
	.byte	19,21,48,15,16,12
	.byte	'module',0
	.word	28557
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	71532
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	8701
	.byte	1,2,35,12,0,20
	.word	71691
	.byte	28
	.byte	'IfxVadc_Emux_Out',0,21,53,3
	.word	71742
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,22,45,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,22,48,3
	.word	71772
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,22,51,16,4,10
	.byte	'VSS',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,22,55,3
	.word	71833
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,22,58,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,22,62,3
	.word	71912
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,65,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,22,69,3
	.word	71998
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,72,16,4,10
	.byte	'CM',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	704
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	704
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,80,3
	.word	72087
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,83,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,89,3
	.word	72233
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,96,3
	.word	72360
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,99,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,103,3
	.word	72458
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,106,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,110,3
	.word	72551
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,113,16,4,10
	.byte	'MODREV',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,118,3
	.word	72644
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,121,16,4,10
	.byte	'XE',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,22,125,3
	.word	72751
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,22,136,1,3
	.word	72838
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,139,1,16,4,10
	.byte	'CID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,143,1,3
	.word	72992
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,22,146,1,16,4,10
	.byte	'DATA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,22,149,1,3
	.word	73086
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,22,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,22,163,1,3
	.word	73149
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,166,1,16,4,10
	.byte	'DE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	704
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	704
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,177,1,3
	.word	73367
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,180,1,16,4,10
	.byte	'DTA',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,184,1,3
	.word	73582
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,22,192,1,3
	.word	73676
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,22,199,1,3
	.word	73792
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,22,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	704
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,22,206,1,3
	.word	73893
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,22,212,1,3
	.word	73986
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,215,1,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,218,1,3
	.word	74066
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,221,1,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,22,233,1,3
	.word	74135
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,22,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,22,240,1,3
	.word	74364
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,247,1,3
	.word	74457
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,254,1,3
	.word	74552
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,129,2,16,4,10
	.byte	'RE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,22,133,2,3
	.word	74647
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,136,2,16,4,10
	.byte	'WE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,22,140,2,3
	.word	74737
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,143,2,16,4,10
	.byte	'SRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	704
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,22,161,2,3
	.word	74827
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,172,2,3
	.word	75151
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,22,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,22,180,2,3
	.word	75305
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,183,2,16,4,10
	.byte	'TST',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	704
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,202,2,3
	.word	75411
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,205,2,16,4,10
	.byte	'OPC',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,212,2,3
	.word	75760
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,215,2,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,218,2,3
	.word	75920
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,224,2,3
	.word	76001
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,230,2,3
	.word	76088
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,236,2,3
	.word	76175
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,22,243,2,3
	.word	76262
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,22,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	704
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	704
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	704
	.byte	6,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICR_Bits',0,22,253,2,3
	.word	76353
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,22,128,3,16,4,10
	.byte	'ISP',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,22,131,3,3
	.word	76496
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,22,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,22,139,3,3
	.word	76562
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,146,3,3
	.word	76668
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,153,3,3
	.word	76761
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,160,3,3
	.word	76854
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,22,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,22,167,3,3
	.word	76947
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,22,175,3,3
	.word	77032
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,22,183,3,3
	.word	77148
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,22,190,3,3
	.word	77259
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	704
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,3,3
	.word	77360
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,3,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,3,3
	.word	77490
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,3,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,22,221,3,3
	.word	77559
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	704
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,22,229,3,3
	.word	77788
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,22,237,3,3
	.word	77901
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,240,3,16,4,10
	.byte	'PSI',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,22,244,3,3
	.word	78014
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,247,3,16,4,10
	.byte	'FRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,22,129,4,3
	.word	78105
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,22,132,4,16,4,10
	.byte	'CDC',0,4
	.word	704
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	704
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	704
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,22,147,4,3
	.word	78308
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,156,4,3
	.word	78551
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,159,4,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,22,171,4,3
	.word	78679
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,22,174,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,22,177,4,3
	.word	78920
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,22,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,22,183,4,3
	.word	79003
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,186,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,189,4,3
	.word	79094
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,195,4,3
	.word	79185
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,22,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,22,202,4,3
	.word	79284
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,22,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,22,209,4,3
	.word	79391
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,220,4,3
	.word	79498
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,231,4,3
	.word	79652
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,234,4,16,4,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,238,4,3
	.word	79813
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	704
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,249,4,3
	.word	79911
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,252,4,16,4,10
	.byte	'Timer',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,255,4,3
	.word	80083
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,133,5,3
	.word	80163
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	704
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,153,5,3
	.word	80236
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,156,5,16,4,10
	.byte	'T0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,167,5,3
	.word	80554
	.byte	11,22,175,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71772
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,22,180,5,3
	.word	80749
	.byte	11,22,183,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71833
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,22,188,5,3
	.word	80808
	.byte	11,22,191,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71912
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,22,196,5,3
	.word	80869
	.byte	11,22,199,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71998
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,22,204,5,3
	.word	80930
	.byte	11,22,207,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72087
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,22,212,5,3
	.word	80992
	.byte	11,22,215,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72233
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,22,220,5,3
	.word	81055
	.byte	11,22,223,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72360
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,22,228,5,3
	.word	81119
	.byte	11,22,231,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72458
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,22,236,5,3
	.word	81184
	.byte	11,22,239,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72551
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,22,244,5,3
	.word	81247
	.byte	11,22,247,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72644
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,22,252,5,3
	.word	81310
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72751
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,22,132,6,3
	.word	81374
	.byte	11,22,135,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72838
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,22,140,6,3
	.word	81436
	.byte	11,22,143,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72992
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,22,148,6,3
	.word	81499
	.byte	11,22,151,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73086
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,22,156,6,3
	.word	81563
	.byte	11,22,159,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73149
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,22,164,6,3
	.word	81622
	.byte	11,22,167,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73367
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,22,172,6,3
	.word	81684
	.byte	11,22,175,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73582
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,22,180,6,3
	.word	81747
	.byte	11,22,183,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73676
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,22,188,6,3
	.word	81811
	.byte	11,22,191,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73792
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,22,196,6,3
	.word	81874
	.byte	11,22,199,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73893
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,22,204,6,3
	.word	81937
	.byte	11,22,207,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73986
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,22,212,6,3
	.word	81998
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74066
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,22,220,6,3
	.word	82061
	.byte	11,22,223,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74135
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,22,228,6,3
	.word	82124
	.byte	11,22,231,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74364
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,22,236,6,3
	.word	82187
	.byte	11,22,239,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74457
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,22,244,6,3
	.word	82248
	.byte	11,22,247,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74552
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,22,252,6,3
	.word	82311
	.byte	11,22,255,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74647
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,22,132,7,3
	.word	82374
	.byte	11,22,135,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74737
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,22,140,7,3
	.word	82436
	.byte	11,22,143,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74827
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,22,148,7,3
	.word	82498
	.byte	11,22,151,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75151
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,22,156,7,3
	.word	82560
	.byte	11,22,159,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75305
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,22,164,7,3
	.word	82623
	.byte	11,22,167,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75411
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,172,7,3
	.word	82684
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75760
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,180,7,3
	.word	82754
	.byte	11,22,183,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75920
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,188,7,3
	.word	82824
	.byte	11,22,191,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76001
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,196,7,3
	.word	82893
	.byte	11,22,199,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76088
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,204,7,3
	.word	82964
	.byte	11,22,207,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,212,7,3
	.word	83035
	.byte	11,22,215,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76262
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,22,220,7,3
	.word	83106
	.byte	11,22,223,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76353
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICR',0,22,228,7,3
	.word	83168
	.byte	11,22,231,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76496
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,22,236,7,3
	.word	83229
	.byte	11,22,239,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76562
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,22,244,7,3
	.word	83290
	.byte	11,22,247,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76668
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,22,252,7,3
	.word	83351
	.byte	11,22,255,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76761
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,22,132,8,3
	.word	83414
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76854
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,22,140,8,3
	.word	83477
	.byte	11,22,143,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76947
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,22,148,8,3
	.word	83540
	.byte	11,22,151,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77032
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,22,156,8,3
	.word	83600
	.byte	11,22,159,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77148
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,22,164,8,3
	.word	83663
	.byte	11,22,167,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77259
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,22,172,8,3
	.word	83726
	.byte	11,22,175,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77360
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,22,180,8,3
	.word	83789
	.byte	11,22,183,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77490
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,22,188,8,3
	.word	83851
	.byte	11,22,191,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77559
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,22,196,8,3
	.word	83914
	.byte	11,22,199,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77788
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,22,204,8,3
	.word	83977
	.byte	11,22,207,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77901
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,22,212,8,3
	.word	84039
	.byte	11,22,215,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78014
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,22,220,8,3
	.word	84101
	.byte	11,22,223,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78105
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,22,228,8,3
	.word	84163
	.byte	11,22,231,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78308
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,22,236,8,3
	.word	84225
	.byte	11,22,239,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78551
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,22,244,8,3
	.word	84286
	.byte	11,22,247,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78679
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,22,252,8,3
	.word	84349
	.byte	11,22,255,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78920
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,22,132,9,3
	.word	84413
	.byte	11,22,135,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79003
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,22,140,9,3
	.word	84483
	.byte	11,22,143,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79094
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,22,148,9,3
	.word	84553
	.byte	11,22,151,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79185
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,22,156,9,3
	.word	84627
	.byte	11,22,159,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79284
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,22,164,9,3
	.word	84701
	.byte	11,22,167,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79391
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,22,172,9,3
	.word	84771
	.byte	11,22,175,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79498
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,22,180,9,3
	.word	84841
	.byte	11,22,183,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79652
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,22,188,9,3
	.word	84904
	.byte	11,22,191,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79813
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,22,196,9,3
	.word	84968
	.byte	11,22,199,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79911
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,22,204,9,3
	.word	85034
	.byte	11,22,207,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80083
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,22,212,9,3
	.word	85099
	.byte	11,22,215,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80163
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,22,220,9,3
	.word	85166
	.byte	11,22,223,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80236
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,22,228,9,3
	.word	85230
	.byte	11,22,231,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80554
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,22,236,9,3
	.word	85294
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,22,247,9,25,8,12
	.byte	'L',0
	.word	81184
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	81247
	.byte	4,2,35,4,0,13
	.word	85360
	.byte	28
	.byte	'Ifx_CPU_CPR',0,22,251,9,3
	.word	85402
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,22,254,9,25,8,12
	.byte	'L',0
	.word	82248
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	82311
	.byte	4,2,35,4,0,13
	.word	85428
	.byte	28
	.byte	'Ifx_CPU_DPR',0,22,130,10,3
	.word	85470
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,22,133,10,25,16,12
	.byte	'LA',0
	.word	84701
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	84771
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	84553
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	84627
	.byte	4,2,35,12,0,13
	.word	85496
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,22,139,10,3
	.word	85578
	.byte	14,12
	.word	85099
	.byte	15,2,0,9
	.byte	'_Ifx_CPU_TPS',0,22,142,10,25,16,12
	.byte	'CON',0
	.word	85034
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	85610
	.byte	12,2,35,4,0,13
	.word	85619
	.byte	28
	.byte	'Ifx_CPU_TPS',0,22,146,10,3
	.word	85667
	.byte	9
	.byte	'_Ifx_CPU_TR',0,22,149,10,25,8,12
	.byte	'EVT',0
	.word	85230
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	85166
	.byte	4,2,35,4,0,13
	.word	85693
	.byte	28
	.byte	'Ifx_CPU_TR',0,22,153,10,3
	.word	85738
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,10,87,3
	.word	9195
	.byte	16,9,118,9,1,17
	.byte	'IfxCpu_CounterMode_normal',0,0,17
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,9,122,3
	.word	85790
	.byte	19,9,132,1,9,6,12
	.byte	'counter',0
	.word	9326
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	305
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,9,136,1,3
	.word	85877
	.byte	19,9,144,1,9,32,12
	.byte	'instruction',0
	.word	85877
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	85877
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	85877
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	85877
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	85877
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,9,151,1,3
	.word	85943
	.byte	9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,79,3
	.word	86061
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,85,3
	.word	86618
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,23,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAP_Bits',0,23,91,3
	.word	86695
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV_Bits',0,23,97,3
	.word	86767
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,23,100,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_CLC_Bits',0,23,107,3
	.word	86843
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,23,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_STM_CMCON_Bits',0,23,120,3
	.word	86984
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,23,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CMP_Bits',0,23,126,3
	.word	87202
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,23,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	282
	.byte	25,0,2,35,0,0,28
	.byte	'Ifx_STM_ICR_Bits',0,23,139,1,3
	.word	87269
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,23,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_STM_ID_Bits',0,23,147,1,3
	.word	87472
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,23,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_ISCR_Bits',0,23,157,1,3
	.word	87579
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,23,160,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST0_Bits',0,23,165,1,3
	.word	87730
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,23,168,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST1_Bits',0,23,172,1,3
	.word	87841
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,175,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,179,1,3
	.word	87933
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,23,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_STM_OCS_Bits',0,23,189,1,3
	.word	88029
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,23,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0_Bits',0,23,195,1,3
	.word	88175
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,201,1,3
	.word	88247
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,23,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM1_Bits',0,23,207,1,3
	.word	88323
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,23,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM2_Bits',0,23,213,1,3
	.word	88395
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,23,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM3_Bits',0,23,219,1,3
	.word	88467
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,23,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM4_Bits',0,23,225,1,3
	.word	88540
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,23,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM5_Bits',0,23,231,1,3
	.word	88613
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,23,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM6_Bits',0,23,237,1,3
	.word	88686
	.byte	11,23,245,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86061
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN0',0,23,250,1,3
	.word	88759
	.byte	11,23,253,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86618
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1',0,23,130,2,3
	.word	88823
	.byte	11,23,133,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86695
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAP',0,23,138,2,3
	.word	88887
	.byte	11,23,141,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86767
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV',0,23,146,2,3
	.word	88948
	.byte	11,23,149,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86843
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CLC',0,23,154,2,3
	.word	89011
	.byte	11,23,157,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86984
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMCON',0,23,162,2,3
	.word	89072
	.byte	11,23,165,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87202
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMP',0,23,170,2,3
	.word	89135
	.byte	11,23,173,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87269
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ICR',0,23,178,2,3
	.word	89196
	.byte	11,23,181,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87472
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ID',0,23,186,2,3
	.word	89257
	.byte	11,23,189,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87579
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ISCR',0,23,194,2,3
	.word	89317
	.byte	11,23,197,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87730
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST0',0,23,202,2,3
	.word	89379
	.byte	11,23,205,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87841
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST1',0,23,210,2,3
	.word	89442
	.byte	11,23,213,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87933
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR',0,23,218,2,3
	.word	89505
	.byte	11,23,221,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88029
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_OCS',0,23,226,2,3
	.word	89570
	.byte	11,23,229,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0',0,23,234,2,3
	.word	89631
	.byte	11,23,237,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88247
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV',0,23,242,2,3
	.word	89693
	.byte	11,23,245,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88323
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM1',0,23,250,2,3
	.word	89757
	.byte	11,23,253,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88395
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM2',0,23,130,3,3
	.word	89819
	.byte	11,23,133,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88467
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM3',0,23,138,3,3
	.word	89881
	.byte	11,23,141,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88540
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM4',0,23,146,3,3
	.word	89943
	.byte	11,23,149,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88613
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM5',0,23,154,3,3
	.word	90005
	.byte	11,23,157,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88686
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM6',0,23,162,3,3
	.word	90067
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,24,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,24,79,3
	.word	90129
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,24,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,24,85,3
	.word	90690
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,24,88,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,24,95,3
	.word	90771
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,24,98,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,24,111,3
	.word	90924
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,24,114,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,24,121,3
	.word	91172
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,24,124,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,24,128,1,3
	.word	91318
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,24,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,24,136,1,3
	.word	91416
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,24,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,24,144,1,3
	.word	91532
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,24,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,24,153,1,3
	.word	91648
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,24,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,24,162,1,3
	.word	91788
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,24,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,24,171,1,3
	.word	91928
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,24,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	856
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,24,193,1,3
	.word	92067
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,24,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,24,218,1,3
	.word	92429
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,24,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,24,254,1,3
	.word	92870
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,24,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,24,137,2,3
	.word	93474
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,24,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,24,156,2,3
	.word	93654
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,24,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,24,167,2,3
	.word	93976
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,24,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,24,174,2,3
	.word	94157
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,24,177,2,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,24,188,2,3
	.word	94257
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,24,191,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,24,194,2,3
	.word	94473
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,24,197,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,24,200,2,3
	.word	94552
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,24,203,2,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,24,208,2,3
	.word	94631
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,24,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	856
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,24,221,2,3
	.word	94742
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,24,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,24,233,2,3
	.word	94956
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,24,236,2,16,4,10
	.byte	'L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'RES8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RES9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RES10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RES11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'RES12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'RES13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'RES14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'RES15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,24,254,2,3
	.word	95142
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,24,129,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,24,135,3,3
	.word	95477
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,24,138,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,24,146,3,3
	.word	95620
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,149,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	305
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'BOOTSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,166,3,3
	.word	95809
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,24,169,3,16,4,10
	.byte	'S0ROM',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,24,201,3,3
	.word	96168
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,24,204,3,16,4,10
	.byte	'S0L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,24,235,3,3
	.word	96763
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,24,238,3,16,4,10
	.byte	'S0WOP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,24,141,4,3
	.word	97287
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,24,144,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,24,148,4,3
	.word	97869
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,24,151,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,24,155,4,3
	.word	97971
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,24,158,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,24,162,4,3
	.word	98073
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,24,165,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,24,169,4,3
	.word	98175
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,24,172,4,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,24,183,4,3
	.word	98269
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,24,186,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,24,189,4,3
	.word	98479
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,24,192,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,24,195,4,3
	.word	98552
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,24,198,4,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,24,205,4,3
	.word	98625
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,24,208,4,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,24,212,4,3
	.word	98780
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,24,215,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,24,222,4,3
	.word	98885
	.byte	11,24,230,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90129
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,24,235,4,3
	.word	99033
	.byte	11,24,238,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90690
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,24,243,4,3
	.word	99099
	.byte	11,24,246,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90771
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,24,251,4,3
	.word	99165
	.byte	11,24,254,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90924
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,24,131,5,3
	.word	99233
	.byte	11,24,134,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91172
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,24,139,5,3
	.word	99302
	.byte	11,24,142,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91318
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,24,147,5,3
	.word	99370
	.byte	11,24,150,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91416
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,24,155,5,3
	.word	99435
	.byte	11,24,158,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91532
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,24,163,5,3
	.word	99500
	.byte	11,24,166,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91648
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,24,171,5,3
	.word	99565
	.byte	11,24,174,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91788
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,24,179,5,3
	.word	99630
	.byte	11,24,182,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91928
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,24,187,5,3
	.word	99695
	.byte	11,24,190,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92067
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,24,195,5,3
	.word	99759
	.byte	11,24,198,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92429
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,24,203,5,3
	.word	99823
	.byte	11,24,206,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92870
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,24,211,5,3
	.word	99887
	.byte	11,24,214,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93474
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,24,219,5,3
	.word	99950
	.byte	11,24,222,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93654
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,24,227,5,3
	.word	100017
	.byte	11,24,230,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93976
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,24,235,5,3
	.word	100083
	.byte	11,24,238,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94157
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,24,243,5,3
	.word	100150
	.byte	11,24,246,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94257
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,24,251,5,3
	.word	100217
	.byte	11,24,254,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94473
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,24,131,6,3
	.word	100284
	.byte	11,24,134,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94552
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,24,139,6,3
	.word	100351
	.byte	11,24,142,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94631
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,24,147,6,3
	.word	100418
	.byte	11,24,150,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94742
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,24,155,6,3
	.word	100480
	.byte	11,24,158,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94956
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,24,163,6,3
	.word	100544
	.byte	11,24,166,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95142
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,24,171,6,3
	.word	100608
	.byte	11,24,174,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95477
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,24,179,6,3
	.word	100675
	.byte	11,24,182,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95620
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,24,187,6,3
	.word	100744
	.byte	11,24,190,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95809
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,24,195,6,3
	.word	100813
	.byte	11,24,198,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96168
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,24,203,6,3
	.word	100886
	.byte	11,24,206,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96763
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,24,211,6,3
	.word	100955
	.byte	11,24,214,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97287
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,24,219,6,3
	.word	101022
	.byte	11,24,222,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97869
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,24,227,6,3
	.word	101091
	.byte	11,24,230,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97971
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,24,235,6,3
	.word	101159
	.byte	11,24,238,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98073
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,24,243,6,3
	.word	101227
	.byte	11,24,246,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,24,251,6,3
	.word	101295
	.byte	11,24,254,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98269
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,24,131,7,3
	.word	101359
	.byte	11,24,134,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98479
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,24,139,7,3
	.word	101423
	.byte	11,24,142,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98552
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,24,147,7,3
	.word	101487
	.byte	11,24,150,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98625
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,24,155,7,3
	.word	101551
	.byte	11,24,158,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98780
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,24,163,7,3
	.word	101619
	.byte	11,24,166,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98885
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,24,171,7,3
	.word	101688
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,24,182,7,25,48,12
	.byte	'CFG',0
	.word	99165
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	99233
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	99302
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	19999
	.byte	36,2,35,12,0,13
	.word	101756
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,24,188,7,3
	.word	101839
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,24,191,7,25,48,12
	.byte	'CFG0',0
	.word	101091
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	101159
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	101227
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	19999
	.byte	36,2,35,12,0,13
	.word	101868
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,24,197,7,3
	.word	101952
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,24,200,7,25,92,12
	.byte	'CFG',0
	.word	101551
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	101619
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	101688
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	20972
	.byte	80,2,35,12,0,13
	.word	101980
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,24,206,7,3
	.word	102063
	.byte	30,1,1,6
	.word	102092
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,25,129,1,16
	.word	102095
	.byte	19,25,197,5,9,8,12
	.byte	'value',0
	.word	9326
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	9326
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,25,201,5,3
	.word	102140
	.byte	19,25,206,5,9,8,12
	.byte	'pDivider',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	305
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	305
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	28940
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,25,212,5,3
	.word	102211
	.byte	19,25,216,5,9,12,12
	.byte	'k2Step',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	28940
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	102100
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,25,221,5,3
	.word	102328
	.byte	6
	.word	102092
	.byte	19,25,229,5,9,40,12
	.byte	'ccucon0',0
	.word	102140
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	102140
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	102140
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	102140
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	102140
	.byte	8,2,35,32,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,25,236,5,3
	.word	102430
	.byte	19,25,240,5,9,8,12
	.byte	'value',0
	.word	9326
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	9326
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,25,244,5,3
	.word	102565
	.byte	6
	.word	102328
	.byte	19,25,249,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	102641
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	102211
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,25,254,5,3
	.word	102646
	.byte	9
	.byte	'_Ifx_CCU6_ACCEN0_Bits',0,26,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_CCU6_ACCEN0_Bits',0,26,79,3
	.word	102763
	.byte	9
	.byte	'_Ifx_CCU6_ACCEN1_Bits',0,26,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CCU6_ACCEN1_Bits',0,26,85,3
	.word	103322
	.byte	9
	.byte	'_Ifx_CCU6_CC60R_Bits',0,26,88,16,4,10
	.byte	'CCV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC60R_Bits',0,26,92,3
	.word	103401
	.byte	9
	.byte	'_Ifx_CCU6_CC60SR_Bits',0,26,95,16,4,10
	.byte	'CCS',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC60SR_Bits',0,26,99,3
	.word	103494
	.byte	9
	.byte	'_Ifx_CCU6_CC61R_Bits',0,26,102,16,4,10
	.byte	'CCV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC61R_Bits',0,26,106,3
	.word	103589
	.byte	9
	.byte	'_Ifx_CCU6_CC61SR_Bits',0,26,109,16,4,10
	.byte	'CCS',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC61SR_Bits',0,26,113,3
	.word	103682
	.byte	9
	.byte	'_Ifx_CCU6_CC62R_Bits',0,26,116,16,4,10
	.byte	'CCV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC62R_Bits',0,26,120,3
	.word	103777
	.byte	9
	.byte	'_Ifx_CCU6_CC62SR_Bits',0,26,123,16,4,10
	.byte	'CCS',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC62SR_Bits',0,26,127,3
	.word	103870
	.byte	9
	.byte	'_Ifx_CCU6_CC63R_Bits',0,26,130,1,16,4,10
	.byte	'CCV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC63R_Bits',0,26,134,1,3
	.word	103965
	.byte	9
	.byte	'_Ifx_CCU6_CC63SR_Bits',0,26,137,1,16,4,10
	.byte	'CCS',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CC63SR_Bits',0,26,141,1,3
	.word	104060
	.byte	9
	.byte	'_Ifx_CCU6_CLC_Bits',0,26,144,1,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_CCU6_CLC_Bits',0,26,151,1,3
	.word	104157
	.byte	9
	.byte	'_Ifx_CCU6_CMPMODIF_Bits',0,26,154,1,16,4,10
	.byte	'MCC60S',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'MCC61S',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'MCC62S',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	3,2,2,35,0,10
	.byte	'MCC63S',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'MCC60R',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'MCC61R',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MCC62R',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	3,2,2,35,1,10
	.byte	'MCC63R',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CCU6_CMPMODIF_Bits',0,26,168,1,3
	.word	104302
	.byte	9
	.byte	'_Ifx_CCU6_CMPSTAT_Bits',0,26,171,1,16,4,10
	.byte	'CC60ST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CC61ST',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CC62ST',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CCPOS60',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CCPOS61',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CCPOS62',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CC63ST',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CC60PS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'COUT60PS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'CC61PS',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'COUT61PS',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CC62PS',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'COUT62PS',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'COUT63PS',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'T13IM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_CMPSTAT_Bits',0,26,190,1,3
	.word	104599
	.byte	9
	.byte	'_Ifx_CCU6_ID_Bits',0,26,193,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODNUMBER',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_ID_Bits',0,26,198,1,3
	.word	104985
	.byte	9
	.byte	'_Ifx_CCU6_IEN_Bits',0,26,201,1,16,4,10
	.byte	'ENCC60R',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ENCC60F',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ENCC61R',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ENCC61F',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ENCC62R',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ENCC62F',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENT12OM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ENT12PM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ENT13CM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ENT13PM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ENTRPF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'ENCHE',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'ENWHE',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'ENIDLE',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ENSTR',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_IEN_Bits',0,26,220,1,3
	.word	105098
	.byte	9
	.byte	'_Ifx_CCU6_IMON_Bits',0,26,223,1,16,4,10
	.byte	'LBE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CCPOS0I',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CCPOS1I',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CCPOS2I',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CC60INI',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CC61INI',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CC62INI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CTRAPI',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T12HRI',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'T13HRI',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_CCU6_IMON_Bits',0,26,236,1,3
	.word	105474
	.byte	9
	.byte	'_Ifx_CCU6_INP_Bits',0,26,239,1,16,4,10
	.byte	'INPCC60',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'INPCC61',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'INPCC62',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'INPCHE',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'INPERR',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'INPT12',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'INPT13',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CCU6_INP_Bits',0,26,249,1,3
	.word	105735
	.byte	9
	.byte	'_Ifx_CCU6_IS_Bits',0,26,252,1,16,4,10
	.byte	'ICC60R',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ICC60F',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ICC61R',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ICC61F',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ICC62R',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ICC62F',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'T12OM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'T12PM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T13CM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'T13PM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'TRPF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'TRPS',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CHE',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'WHE',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'IDLE',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'STR',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_IS_Bits',0,26,143,2,3
	.word	105940
	.byte	9
	.byte	'_Ifx_CCU6_ISR_Bits',0,26,146,2,16,4,10
	.byte	'RCC60R',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RCC60F',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RCC61R',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RCC61F',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RCC62R',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RCC62F',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RT12OM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RT12PM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'RT13CM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RT13PM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RTRPF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'RCHE',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'RWHE',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'RIDLE',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'RSTR',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_ISR_Bits',0,26,165,2,3
	.word	106283
	.byte	9
	.byte	'_Ifx_CCU6_ISS_Bits',0,26,168,2,16,4,10
	.byte	'SCC60R',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SCC60F',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SCC61R',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SCC61F',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SCC62R',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'SCC62F',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ST12OM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ST12PM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ST13CM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ST13PM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'STRPF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'SWHC',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SCHE',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'SWHE',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'SIDLE',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'SSTR',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_ISS_Bits',0,26,187,2,3
	.word	106644
	.byte	9
	.byte	'_Ifx_CCU6_KRST0_Bits',0,26,190,2,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CCU6_KRST0_Bits',0,26,195,2,3
	.word	106998
	.byte	9
	.byte	'_Ifx_CCU6_KRST1_Bits',0,26,198,2,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CCU6_KRST1_Bits',0,26,202,2,3
	.word	107111
	.byte	9
	.byte	'_Ifx_CCU6_KRSTCLR_Bits',0,26,205,2,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CCU6_KRSTCLR_Bits',0,26,209,2,3
	.word	107205
	.byte	9
	.byte	'_Ifx_CCU6_KSCSR_Bits',0,26,212,2,16,4,10
	.byte	'SB0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SB1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SB2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SB3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_CCU6_KSCSR_Bits',0,26,219,2,3
	.word	107303
	.byte	9
	.byte	'_Ifx_CCU6_LI_Bits',0,26,222,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CCPOS0EN',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CCPOS1EN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CCPOS2EN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CC60INEN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CC61INEN',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CC62INEN',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CTRAPEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T12HREN',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'T13HREN',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'LBEEN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'INPLBE',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_LI_Bits',0,26,238,2,3
	.word	107442
	.byte	9
	.byte	'_Ifx_CCU6_MCFG_Bits',0,26,241,2,16,4,10
	.byte	'T12',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'T13',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'MCM',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CCU6_MCFG_Bits',0,26,247,2,3
	.word	107773
	.byte	9
	.byte	'_Ifx_CCU6_MCMCTR_Bits',0,26,250,2,16,4,10
	.byte	'SWSEL',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SWSYN',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'STE12U',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'STE12D',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'STE13U',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CCU6_MCMCTR_Bits',0,26,132,3,3
	.word	107895
	.byte	9
	.byte	'_Ifx_CCU6_MCMOUT_Bits',0,26,135,3,16,4,10
	.byte	'MCMP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'R',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EXPH',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'CURH',0,1
	.word	305
	.byte	3,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CCU6_MCMOUT_Bits',0,26,143,3,3
	.word	108109
	.byte	9
	.byte	'_Ifx_CCU6_MCMOUTS_Bits',0,26,146,3,16,4,10
	.byte	'MCMPS',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'STRMCM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EXPHS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'CURHS',0,1
	.word	305
	.byte	3,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'STRHP',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_MCMOUTS_Bits',0,26,156,3,3
	.word	108274
	.byte	9
	.byte	'_Ifx_CCU6_MODCTR_Bits',0,26,159,3,16,4,10
	.byte	'T12MODEN',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'MCMEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T13MODEN',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ECT13O',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_MODCTR_Bits',0,26,168,3,3
	.word	108489
	.byte	9
	.byte	'_Ifx_CCU6_MOSEL_Bits',0,26,171,3,16,4,10
	.byte	'TRIG0SEL',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'TRIG1SEL',0,1
	.word	305
	.byte	3,2,2,35,0,10
	.byte	'TRIG2SEL',0,2
	.word	856
	.byte	3,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_CCU6_MOSEL_Bits',0,26,177,3,3
	.word	108691
	.byte	9
	.byte	'_Ifx_CCU6_OCS_Bits',0,26,180,3,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'TGB',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'TG_P',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_CCU6_OCS_Bits',0,26,190,3,3
	.word	108830
	.byte	9
	.byte	'_Ifx_CCU6_PISEL0_Bits',0,26,193,3,16,4,10
	.byte	'ISCC60',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ISCC61',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'ISCC62',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'ISTRP',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'ISPOS0',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'ISPOS1',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'ISPOS2',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'IST12HR',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_PISEL0_Bits',0,26,204,3,3
	.word	109024
	.byte	9
	.byte	'_Ifx_CCU6_PISEL2_Bits',0,26,207,3,16,4,10
	.byte	'IST13HR',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ISCNT12',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'ISCNT13',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'T12EXT',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'T13EXT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CCU6_PISEL2_Bits',0,26,215,3,3
	.word	109250
	.byte	9
	.byte	'_Ifx_CCU6_PSLR_Bits',0,26,218,3,16,4,10
	.byte	'PSL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PSL63',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CCU6_PSLR_Bits',0,26,224,3,3
	.word	109424
	.byte	9
	.byte	'_Ifx_CCU6_T12_Bits',0,26,227,3,16,4,10
	.byte	'T12CV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_T12_Bits',0,26,231,3,3
	.word	109555
	.byte	9
	.byte	'_Ifx_CCU6_T12DTC_Bits',0,26,234,3,16,4,10
	.byte	'DTM',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DTE0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DTE1',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DTE2',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'DTR0',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'DTR1',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'DTR2',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CCU6_T12DTC_Bits',0,26,245,3,3
	.word	109648
	.byte	9
	.byte	'_Ifx_CCU6_T12MSEL_Bits',0,26,248,3,16,4,10
	.byte	'MSEL60',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'MSEL61',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'MSEL62',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'HSYNC',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'DBYP',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_T12MSEL_Bits',0,26,128,4,3
	.word	109864
	.byte	9
	.byte	'_Ifx_CCU6_T12PR_Bits',0,26,131,4,16,4,10
	.byte	'T12PV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_T12PR_Bits',0,26,135,4,3
	.word	110035
	.byte	9
	.byte	'_Ifx_CCU6_T13_Bits',0,26,138,4,16,4,10
	.byte	'T13CV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_T13_Bits',0,26,142,4,3
	.word	110132
	.byte	9
	.byte	'_Ifx_CCU6_T13PR_Bits',0,26,145,4,16,4,10
	.byte	'T13PV',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_T13PR_Bits',0,26,149,4,3
	.word	110225
	.byte	9
	.byte	'_Ifx_CCU6_TCTR0_Bits',0,26,152,4,16,4,10
	.byte	'T12CLK',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'T12PRE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'T12R',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'STE12',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CDIR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CTM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T13CLK',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'T13PRE',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'T13R',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'STE13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CCU6_TCTR0_Bits',0,26,165,4,3
	.word	110322
	.byte	9
	.byte	'_Ifx_CCU6_TCTR2_Bits',0,26,168,4,16,4,10
	.byte	'T12SSC',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'T13SSC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'T13TEC',0,1
	.word	305
	.byte	3,3,2,35,0,10
	.byte	'T13TED',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T12RSEL',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'T13RSEL',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,28
	.byte	'Ifx_CCU6_TCTR2_Bits',0,26,178,4,3
	.word	110571
	.byte	9
	.byte	'_Ifx_CCU6_TCTR4_Bits',0,26,181,4,16,4,10
	.byte	'T12RR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'T12RS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'T12RES',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DTRES',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'T12CNT',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'T12STR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'T12STD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'T13RR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'T13RS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'T13RES',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'T13CNT',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'T13STR',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'T13STD',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_TCTR4_Bits',0,26,199,4,3
	.word	110783
	.byte	9
	.byte	'_Ifx_CCU6_TRPCTR_Bits',0,26,202,4,16,4,10
	.byte	'TRPM0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TRPM1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'TRPM2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'TRPEN',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'TRPEN13',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'TRPPEN',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_CCU6_TRPCTR_Bits',0,26,212,4,3
	.word	111137
	.byte	11,26,220,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102763
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_ACCEN0',0,26,225,4,3
	.word	111346
	.byte	11,26,228,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103322
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_ACCEN1',0,26,233,4,3
	.word	111411
	.byte	11,26,236,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103401
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC60R',0,26,241,4,3
	.word	111476
	.byte	11,26,244,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103494
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC60SR',0,26,249,4,3
	.word	111540
	.byte	11,26,252,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103589
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC61R',0,26,129,5,3
	.word	111605
	.byte	11,26,132,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103682
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC61SR',0,26,137,5,3
	.word	111669
	.byte	11,26,140,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103777
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC62R',0,26,145,5,3
	.word	111734
	.byte	11,26,148,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103870
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC62SR',0,26,153,5,3
	.word	111798
	.byte	11,26,156,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103965
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC63R',0,26,161,5,3
	.word	111863
	.byte	11,26,164,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104060
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CC63SR',0,26,169,5,3
	.word	111927
	.byte	11,26,172,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104157
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CLC',0,26,177,5,3
	.word	111992
	.byte	11,26,180,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104302
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CMPMODIF',0,26,185,5,3
	.word	112054
	.byte	11,26,188,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104599
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_CMPSTAT',0,26,193,5,3
	.word	112121
	.byte	11,26,196,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104985
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_ID',0,26,201,5,3
	.word	112187
	.byte	11,26,204,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105098
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_IEN',0,26,209,5,3
	.word	112248
	.byte	11,26,212,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105474
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_IMON',0,26,217,5,3
	.word	112310
	.byte	11,26,220,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105735
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_INP',0,26,225,5,3
	.word	112373
	.byte	11,26,228,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105940
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_IS',0,26,233,5,3
	.word	112435
	.byte	11,26,236,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106283
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_ISR',0,26,241,5,3
	.word	112496
	.byte	11,26,244,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106644
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_ISS',0,26,249,5,3
	.word	112558
	.byte	11,26,252,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106998
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_KRST0',0,26,129,6,3
	.word	112620
	.byte	11,26,132,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107111
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_KRST1',0,26,137,6,3
	.word	112684
	.byte	11,26,140,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107205
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_KRSTCLR',0,26,145,6,3
	.word	112748
	.byte	11,26,148,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107303
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_KSCSR',0,26,153,6,3
	.word	112814
	.byte	11,26,156,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107442
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_LI',0,26,161,6,3
	.word	112878
	.byte	11,26,164,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107773
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MCFG',0,26,169,6,3
	.word	112939
	.byte	11,26,172,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107895
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MCMCTR',0,26,177,6,3
	.word	113002
	.byte	11,26,180,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108109
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MCMOUT',0,26,185,6,3
	.word	113067
	.byte	11,26,188,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108274
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MCMOUTS',0,26,193,6,3
	.word	113132
	.byte	11,26,196,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108489
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MODCTR',0,26,201,6,3
	.word	113198
	.byte	11,26,204,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108691
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_MOSEL',0,26,209,6,3
	.word	113263
	.byte	11,26,212,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108830
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_OCS',0,26,217,6,3
	.word	113327
	.byte	11,26,220,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109024
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_PISEL0',0,26,225,6,3
	.word	113389
	.byte	11,26,228,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109250
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_PISEL2',0,26,233,6,3
	.word	113454
	.byte	11,26,236,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109424
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_PSLR',0,26,241,6,3
	.word	113519
	.byte	11,26,244,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109555
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T12',0,26,249,6,3
	.word	113582
	.byte	11,26,252,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109648
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T12DTC',0,26,129,7,3
	.word	113644
	.byte	11,26,132,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109864
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T12MSEL',0,26,137,7,3
	.word	113709
	.byte	11,26,140,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110035
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T12PR',0,26,145,7,3
	.word	113775
	.byte	11,26,148,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110132
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T13',0,26,153,7,3
	.word	113839
	.byte	11,26,156,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110225
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_T13PR',0,26,161,7,3
	.word	113901
	.byte	11,26,164,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110322
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_TCTR0',0,26,169,7,3
	.word	113965
	.byte	11,26,172,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110571
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_TCTR2',0,26,177,7,3
	.word	114029
	.byte	11,26,180,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110783
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_TCTR4',0,26,185,7,3
	.word	114093
	.byte	11,26,188,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111137
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CCU6_TRPCTR',0,26,193,7,3
	.word	114157
	.byte	16,11,70,9,1,17
	.byte	'IfxVadc_AnalogConverterMode_off',0,0,17
	.byte	'IfxVadc_AnalogConverterMode_slowStandby',0,1,17
	.byte	'IfxVadc_AnalogConverterMode_fastStandby',0,2,17
	.byte	'IfxVadc_AnalogConverterMode_normalOperation',0,3,0,28
	.byte	'IfxVadc_AnalogConverterMode',0,11,76,3
	.word	114222
	.byte	28
	.byte	'IfxVadc_ArbitrationRounds',0,11,86,3
	.word	33958
	.byte	28
	.byte	'IfxVadc_BoundaryExtension',0,11,108,3
	.word	35228
	.byte	28
	.byte	'IfxVadc_BoundarySelection',0,11,118,3
	.word	35080
	.byte	28
	.byte	'IfxVadc_ChannelId',0,11,137,1,3
	.word	29523
	.byte	28
	.byte	'IfxVadc_ChannelReference',0,11,145,1,3
	.word	35001
	.byte	28
	.byte	'IfxVadc_ChannelResolution',0,11,155,1,3
	.word	28663
	.byte	28
	.byte	'IfxVadc_ChannelResult',0,11,177,1,3
	.word	30151
	.byte	16,11,182,1,9,1,17
	.byte	'IfxVadc_ChannelSelectionStyle_channelNumber',0,0,17
	.byte	'IfxVadc_ChannelSelectionStyle_binary',0,1,0,28
	.byte	'IfxVadc_ChannelSelectionStyle',0,11,187,1,3
	.word	114657
	.byte	16,11,199,1,9,1,17
	.byte	'IfxVadc_EmuxCodingScheme_binary',0,0,17
	.byte	'IfxVadc_EmuxCodingScheme_gray',0,1,0,28
	.byte	'IfxVadc_EmuxCodingScheme',0,11,203,1,3
	.word	114788
	.byte	16,11,207,1,9,1,17
	.byte	'IfxVadc_EmuxInterface_0',0,0,17
	.byte	'IfxVadc_EmuxInterface_1',0,1,0,28
	.byte	'IfxVadc_EmuxInterface',0,11,211,1,3
	.word	114895
	.byte	16,11,216,1,9,1,17
	.byte	'IfxVadc_EmuxSampleTimeControl_settingChanges',0,0,17
	.byte	'IfxVadc_EmuxSampleTimeControl_always',0,1,0,28
	.byte	'IfxVadc_EmuxSampleTimeControl',0,11,220,1,3
	.word	114985
	.byte	16,11,225,1,9,1,17
	.byte	'IfxVadc_EmuxSelectValue_0',0,0,17
	.byte	'IfxVadc_EmuxSelectValue_1',0,1,17
	.byte	'IfxVadc_EmuxSelectValue_2',0,2,17
	.byte	'IfxVadc_EmuxSelectValue_3',0,3,17
	.byte	'IfxVadc_EmuxSelectValue_4',0,4,17
	.byte	'IfxVadc_EmuxSelectValue_5',0,5,17
	.byte	'IfxVadc_EmuxSelectValue_6',0,6,17
	.byte	'IfxVadc_EmuxSelectValue_7',0,7,0,28
	.byte	'IfxVadc_EmuxSelectValue',0,11,235,1,3
	.word	115117
	.byte	16,11,240,1,9,1,17
	.byte	'IfxVadc_ExternalMultiplexerMode_softwareControl',0,0,17
	.byte	'IfxVadc_ExternalMultiplexerMode_steady',0,1,17
	.byte	'IfxVadc_ExternalMultiplexerMode_singleStep',0,2,17
	.byte	'IfxVadc_ExternalMultiplexerMode_sequence',0,3,0,28
	.byte	'IfxVadc_ExternalMultiplexerMode',0,11,246,1,3
	.word	115381
	.byte	16,11,250,1,9,1,17
	.byte	'IfxVadc_FifoMode_seperateResultRegister',0,0,17
	.byte	'IfxVadc_FifoMode_fifoStructure',0,1,17
	.byte	'IfxVadc_FifoMode_maximumMode',0,2,17
	.byte	'IfxVadc_FifoMode_minimumMode',0,3,0,28
	.byte	'IfxVadc_FifoMode',0,11,128,2,3
	.word	115608
	.byte	28
	.byte	'IfxVadc_GatingMode',0,11,138,2,3
	.word	32985
	.byte	28
	.byte	'IfxVadc_GatingSource',0,11,160,2,3
	.word	32143
	.byte	28
	.byte	'IfxVadc_InputClasses',0,11,170,2,3
	.word	34872
	.byte	28
	.byte	'IfxVadc_LimitCheck',0,11,180,2,3
	.word	35982
	.byte	28
	.byte	'IfxVadc_LowSupplyVoltageSelect',0,11,188,2,3
	.word	31729
	.byte	28
	.byte	'IfxVadc_RequestSlotPriority',0,11,139,3,3
	.word	33362
	.byte	28
	.byte	'IfxVadc_RequestSlotStartMode',0,11,147,3,3
	.word	33513
	.byte	16,11,151,3,9,1,17
	.byte	'IfxVadc_RequestSource_queue',0,0,17
	.byte	'IfxVadc_RequestSource_scan',0,1,17
	.byte	'IfxVadc_RequestSource_background',0,2,0,28
	.byte	'IfxVadc_RequestSource',0,11,156,3,3
	.word	116009
	.byte	16,11,161,3,9,1,17
	.byte	'IfxVadc_SleepMode_enable',0,0,17
	.byte	'IfxVadc_SleepMode_disable',0,1,0,28
	.byte	'IfxVadc_SleepMode',0,11,165,3,3
	.word	116141
	.byte	28
	.byte	'IfxVadc_SrcNr',0,11,179,3,3
	.word	34677
	.byte	28
	.byte	'IfxVadc_Status',0,11,194,3,3
	.word	31451
	.byte	28
	.byte	'IfxVadc_TriggerMode',0,11,204,3,3
	.word	33113
	.byte	28
	.byte	'IfxVadc_TriggerSource',0,11,226,3,3
	.word	32556
	.byte	28
	.byte	'IfxVadc_Adc',0,14,234,2,3
	.word	30580
	.byte	28
	.byte	'IfxVadc_Adc_GatingTriggerConfig',0,14,244,2,3
	.word	33269
	.byte	28
	.byte	'IfxVadc_Adc_ArbiterConfig',0,14,130,3,3
	.word	34110
	.byte	28
	.byte	'IfxVadc_Adc_BackgroundScanConfig',0,14,140,3,3
	.word	33838
	.byte	28
	.byte	'IfxVadc_Adc_ClassConfig',0,14,148,3,3
	.word	31673
	.byte	28
	.byte	'IfxVadc_Adc_Group',0,14,157,3,3
	.word	30601
	.byte	28
	.byte	'IfxVadc_Adc_QueueConfig',0,14,167,3,3
	.word	33724
	.byte	28
	.byte	'IfxVadc_Adc_ScanConfig',0,14,177,3,3
	.word	33614
	.byte	20
	.word	71691
	.byte	6
	.word	116601
	.byte	14,12
	.word	116606
	.byte	15,2,0,19,14,181,3,9,16,12
	.byte	'pins',0
	.word	116611
	.byte	12,2,35,0,12
	.byte	'outputMode',0
	.word	8632
	.byte	1,2,35,12,12
	.byte	'padDriver',0
	.word	71193
	.byte	1,2,35,13,0,28
	.byte	'IfxVadc_Adc_EmuxPinConfig',0,14,186,3,3
	.word	116620
	.byte	28
	.byte	'IfxVadc_Adc_Channel',0,14,197,3,3
	.word	30666
	.byte	28
	.byte	'IfxVadc_Adc_ChannelConfig',0,14,222,3,3
	.word	36121
	.byte	28
	.byte	'IfxVadc_Adc_Config',0,14,237,3,3
	.word	31808
	.byte	28
	.byte	'IfxVadc_Adc_GroupConfig',0,14,141,4,3
	.word	34252
.L136:
	.byte	19,27,15,9,16,12
	.byte	'vadc',0
	.word	30580
	.byte	4,2,35,0,12
	.byte	'adcGroup',0
	.word	30601
	.byte	12,2,35,4,0,28
	.byte	'App_VadcAutoScan',0,27,19,3
	.word	116840
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17
	.byte	40,0,3,8,28,13,0,0,18,13,0,73,19,11,15,56,9,0,0,19,19,1,58,15,59,15,57,15,11,15,0,0,20,38,0,73,19,0,0
	.byte	21,11,1,0,0,22,46,1,49,19,0,0,23,5,0,49,19,0,0,24,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0
	.byte	0,25,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,26,29,1,49,19,0,0,27,11,0,49,19,0,0
	.byte	28,22,0,3,8,58,15,59,15,57,15,73,19,0,0,29,21,0,54,15,0,0,30,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L20:
	.word	.L144-.L143
.L143:
	.half	3
	.word	.L146-.L145
.L145:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Std\\IfxVadc.h',0
	.byte	0,0,0
	.byte	'IfxVadc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxVadc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Adc\\IfxVadc_Adc.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxVadc_PinMap.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'IfxCcu6_regdef.h',0,1,0,0
	.byte	'Vadc.h',0,3,0,0,0
.L146:
.L144:
	.sdecl	'.debug_info',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_info'
.L21:
	.word	253
	.half	3
	.word	.L22
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L24,.L23
	.byte	2
	.word	.L17
	.byte	3
	.byte	'VadcAutoScan_init',0,1,15,6,1,1,1
	.word	.L6,.L57,.L5
	.byte	4
	.word	.L6,.L57
	.byte	5
	.byte	'adcConfig',0,1,20,24
	.word	.L58,.L59
	.byte	4
	.word	.L60,.L57
	.byte	5
	.byte	'adcGroupConfig',0,1,29,29
	.word	.L61,.L62
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_abbrev'
.L22:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_line'
.L23:
	.word	.L148-.L147
.L147:
	.half	3
	.word	.L150-.L149
.L149:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0,0
.L150:
	.byte	5,6,7,0,5,2
	.word	.L6
	.byte	3,14,1,5,35,9
	.half	.L137-.L6
	.byte	3,6,1,5,47,9
	.half	.L151-.L137
	.byte	1,5,31,9
	.half	.L152-.L151
	.byte	3,2,1,5,29,1,9
	.half	.L153-.L152
	.byte	3,3,1,5,51,9
	.half	.L154-.L153
	.byte	1,5,34,9
	.half	.L60-.L154
	.byte	3,4,1,5,65,9
	.half	.L155-.L60
	.byte	1,5,28,9
	.half	.L156-.L155
	.byte	3,3,1,9
	.half	.L157-.L156
	.byte	3,1,1,5,51,9
	.half	.L158-.L157
	.byte	3,3,1,5,48,9
	.half	.L159-.L158
	.byte	3,3,1,5,57,9
	.half	.L160-.L159
	.byte	3,3,1,5,42,9
	.half	.L161-.L160
	.byte	3,4,1,5,54,9
	.half	.L162-.L161
	.byte	1,5,1,9
	.half	.L25-.L162
	.byte	3,1,0,1,1
.L148:
	.sdecl	'.debug_ranges',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_ranges'
.L24:
	.word	-1,.L6,0,.L25-.L6,0,0
	.sdecl	'.debug_info',debug,cluster('Adc_Scan')
	.sect	'.debug_info'
.L26:
	.word	579
	.half	3
	.word	.L27
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L29,.L28
	.byte	2
	.word	.L17
	.byte	3
	.byte	'Adc_Scan',0,1,61,6,1,1,1
	.word	.L10,.L63,.L9
	.byte	4
	.word	.L64
	.byte	5
	.byte	'adcChannelConfig',0,1,66,28
	.word	.L65,.L66
	.byte	5
	.byte	'adcChannel',0,1,67,28
	.word	.L67,.L68
	.byte	6
	.word	.L69,.L63
	.byte	5
	.byte	'channels',0,1,78,11
	.word	.L70,.L71
	.byte	7
	.word	.L72,.L73,.L74
	.byte	8
	.word	.L75,.L76
	.byte	8
	.word	.L77,.L78
	.byte	8
	.word	.L79,.L80
	.byte	9
	.word	.L81,.L82
	.byte	0,7
	.word	.L72,.L83,.L84
	.byte	8
	.word	.L75,.L76
	.byte	8
	.word	.L77,.L78
	.byte	8
	.word	.L79,.L80
	.byte	0,7
	.word	.L85,.L84,.L3
	.byte	8
	.word	.L86,.L87
	.byte	9
	.word	.L88,.L89
	.byte	0,6
	.word	.L3,.L63
	.byte	5
	.byte	'conversionResult',0,1,90,18
	.word	.L90,.L91
	.byte	7
	.word	.L92,.L3,.L93
	.byte	8
	.word	.L94,.L95
	.byte	10
	.word	.L96,.L97
	.byte	7
	.word	.L100,.L3,.L93
	.byte	8
	.word	.L101,.L102
	.byte	8
	.word	.L103,.L104
	.byte	10
	.word	.L105,.L106
	.byte	5
	.byte	'tmpResult',0,2,137,16,18
	.word	.L90,.L107
	.byte	0,0,7
	.word	.L100,.L98,.L99
	.byte	8
	.word	.L101,.L102
	.byte	8
	.word	.L103,.L104
	.byte	0,0,0,7
	.word	.L92,.L98,.L99
	.byte	8
	.word	.L94,.L95
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Adc_Scan')
	.sect	'.debug_abbrev'
.L27:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,85,6,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,1,17,1
	.byte	18,1,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85,6,0,0,10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Adc_Scan')
	.sect	'.debug_line'
.L28:
	.word	.L164-.L163
.L163:
	.half	3
	.word	.L166-.L165
.L165:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Std\\IfxVadc.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Adc\\IfxVadc_Adc.h',0
	.byte	0,0,0,0
.L166:
	.byte	5,6,7,0,5,2
	.word	.L10
	.byte	3,60,1,5,59,9
	.half	.L138-.L10
	.byte	3,9,1,5,33,9
	.half	.L167-.L138
	.byte	1,5,73,9
	.half	.L168-.L167
	.byte	1,5,43,9
	.half	.L169-.L168
	.byte	3,1,1,5,41,1,9
	.half	.L170-.L169
	.byte	3,1,1,5,27,9
	.half	.L171-.L170
	.byte	3,3,1,5,47,9
	.half	.L172-.L171
	.byte	1,5,63,9
	.half	.L173-.L172
	.byte	1,5,23,9
	.half	.L69-.L173
	.byte	3,3,1,5,51,1,4,3,5,26,9
	.half	.L73-.L69
	.byte	3,156,9,1,4,1,5,25,9
	.half	.L74-.L73
	.byte	3,228,118,1,5,58,9
	.half	.L83-.L74
	.byte	3,2,1,4,3,5,28,9
	.half	.L84-.L83
	.byte	3,172,9,1,5,37,9
	.half	.L3-.L84
	.byte	3,80,1,5,44,9
	.half	.L174-.L3
	.byte	1,5,60,9
	.half	.L175-.L174
	.byte	1,4,2,5,29,9
	.half	.L176-.L175
	.byte	3,191,6,1,5,40,9
	.half	.L177-.L176
	.byte	1,4,1,5,33,9
	.half	.L140-.L177
	.byte	3,212,112,1,5,15,9
	.half	.L93-.L140
	.byte	1,5,37,7,9
	.half	.L98-.L93
	.byte	3,2,1,5,18,9
	.half	.L99-.L98
	.byte	3,1,1,5,1,9
	.half	.L178-.L99
	.byte	3,4,1,7,9
	.half	.L30-.L178
	.byte	0,1,1
.L164:
	.sdecl	'.debug_ranges',debug,cluster('Adc_Scan')
	.sect	'.debug_ranges'
.L29:
	.word	-1,.L10,0,.L30-.L10,0,0
.L64:
	.word	-1,.L10,0,.L63-.L10,-1,.L14,0,.L45-.L14,0,0
.L82:
	.word	-1,.L10,.L73-.L10,.L74-.L10,.L83-.L10,.L84-.L10,0,0
.L89:
	.word	-1,.L10,.L84-.L10,.L3-.L10,-1,.L12,0,.L50-.L12,0,0
.L97:
	.word	-1,.L10,.L3-.L10,.L93-.L10,.L98-.L10,.L99-.L10,0,0
.L106:
	.word	-1,.L10,.L3-.L10,.L93-.L10,.L98-.L10,.L99-.L10,0,0
	.sdecl	'.debug_info',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_info'
.L31:
	.word	593
	.half	3
	.word	.L32
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L34,.L33
	.byte	2
	.word	.L17
	.byte	3
	.byte	'EMG_Volt_Scan',0,1,104,6,1,1,1
	.word	.L16,.L108,.L15
	.byte	4
	.word	.L16,.L108
	.byte	5
	.byte	'adcChannelConfig',0,1,109,28
	.word	.L65,.L109
	.byte	5
	.byte	'adcChannel',0,1,110,28
	.word	.L67,.L110
	.byte	4
	.word	.L111,.L108
	.byte	5
	.byte	'channels',0,1,121,11
	.word	.L70,.L112
	.byte	6
	.word	.L72,.L113,.L114
	.byte	7
	.word	.L75,.L115
	.byte	7
	.word	.L77,.L116
	.byte	7
	.word	.L79,.L117
	.byte	8
	.word	.L81,.L118
	.byte	0,6
	.word	.L72,.L119,.L120
	.byte	7
	.word	.L75,.L115
	.byte	7
	.word	.L77,.L116
	.byte	7
	.word	.L79,.L117
	.byte	0,6
	.word	.L85,.L120,.L4
	.byte	7
	.word	.L86,.L121
	.byte	9
	.word	.L88,.L120,.L4
	.byte	0,4
	.word	.L4,.L108
	.byte	5
	.byte	'conversionResult',0,1,133,1,18
	.word	.L90,.L122
	.byte	6
	.word	.L92,.L4,.L123
	.byte	7
	.word	.L94,.L124
	.byte	10
	.word	.L96,.L125
	.byte	6
	.word	.L100,.L4,.L123
	.byte	7
	.word	.L101,.L128
	.byte	7
	.word	.L103,.L129
	.byte	10
	.word	.L105,.L130
	.byte	5
	.byte	'tmpResult',0,2,137,16,18
	.word	.L90,.L131
	.byte	0,0,6
	.word	.L100,.L126,.L127
	.byte	7
	.word	.L101,.L128
	.byte	7
	.word	.L103,.L129
	.byte	0,0,0,6
	.word	.L92,.L126,.L127
	.byte	7
	.word	.L94,.L124
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_abbrev'
.L32:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1,49,16
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_line'
.L33:
	.word	.L180-.L179
.L179:
	.half	3
	.word	.L182-.L181
.L181:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Std\\IfxVadc.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Adc\\IfxVadc_Adc.h',0
	.byte	0,0,0,0
.L182:
	.byte	5,6,7,0,5,2
	.word	.L16
	.byte	3,231,0,1,5,59,9
	.half	.L141-.L16
	.byte	3,9,1,5,49,9
	.half	.L183-.L141
	.byte	1,5,73,9
	.half	.L184-.L183
	.byte	1,5,43,9
	.half	.L185-.L184
	.byte	3,1,1,5,41,1,9
	.half	.L186-.L185
	.byte	3,1,1,5,37,9
	.half	.L187-.L186
	.byte	3,3,1,5,63,9
	.half	.L188-.L187
	.byte	1,5,23,9
	.half	.L111-.L188
	.byte	3,3,1,5,51,1,4,3,5,26,9
	.half	.L113-.L111
	.byte	3,241,8,1,4,1,5,25,9
	.half	.L114-.L113
	.byte	3,143,119,1,5,58,9
	.half	.L119-.L114
	.byte	3,2,1,4,3,5,28,9
	.half	.L120-.L119
	.byte	3,129,9,1,5,37,9
	.half	.L4-.L120
	.byte	3,80,1,5,44,9
	.half	.L189-.L4
	.byte	1,5,60,9
	.half	.L190-.L189
	.byte	1,4,2,5,29,9
	.half	.L191-.L190
	.byte	3,191,6,1,5,40,9
	.half	.L192-.L191
	.byte	1,4,1,5,33,9
	.half	.L142-.L192
	.byte	3,255,112,1,5,15,9
	.half	.L123-.L142
	.byte	1,5,37,7,9
	.half	.L126-.L123
	.byte	3,2,1,5,17,9
	.half	.L127-.L126
	.byte	3,1,1,5,1,9
	.half	.L193-.L127
	.byte	3,2,1,7,9
	.half	.L35-.L193
	.byte	0,1,1
.L180:
	.sdecl	'.debug_ranges',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_ranges'
.L34:
	.word	-1,.L16,0,.L35-.L16,0,0
.L118:
	.word	-1,.L16,.L113-.L16,.L114-.L16,.L119-.L16,.L120-.L16,0,0
.L125:
	.word	-1,.L16,.L4-.L16,.L123-.L16,.L126-.L16,.L127-.L16,0,0
.L130:
	.word	-1,.L16,.L4-.L16,.L123-.L16,.L126-.L16,.L127-.L16,0,0
	.sdecl	'.debug_info',debug,cluster('calc_batt_voltage')
	.sect	'.debug_info'
.L36:
	.word	214
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L17
	.byte	3
	.byte	'calc_batt_voltage',0,1,52,7
	.word	.L132
	.byte	1,1,1
	.word	.L8,.L133,.L7
	.byte	4
	.byte	'volt',0,1,52,32
	.word	.L134,.L135
	.byte	5
	.word	.L8,.L133
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('calc_batt_voltage')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('calc_batt_voltage')
	.sect	'.debug_line'
.L38:
	.word	.L195-.L194
.L194:
	.half	3
	.word	.L197-.L196
.L196:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0,0
.L197:
	.byte	5,17,7,0,5,2
	.word	.L8
	.byte	3,54,1,5,15,9
	.half	.L198-.L8
	.byte	1,5,36,9
	.half	.L199-.L198
	.byte	3,1,1,5,15,9
	.half	.L200-.L199
	.byte	1,5,1,3,3,1,7,9
	.half	.L40-.L200
	.byte	0,1,1
.L195:
	.sdecl	'.debug_ranges',debug,cluster('calc_batt_voltage')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L8,0,.L40-.L8,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L41:
	.word	174
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L17
	.byte	3
	.byte	'.cocofun_4',0,1,61,6,1
	.word	.L14,.L45,.L13
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L43:
	.word	.L202-.L201
.L201:
	.half	3
	.word	.L204-.L203
.L203:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0,0
.L204:
	.byte	5,59,7,0,5,2
	.word	.L14
	.byte	3,197,0,1,5,73,9
	.half	.L205-.L14
	.byte	1,9
	.half	.L45-.L205
	.byte	0,1,1,5,59,0,5,2
	.word	.L14
	.byte	3,240,0,1,5,73,9
	.half	.L205-.L14
	.byte	1,9
	.half	.L206-.L205
	.byte	3,85,1,7,9
	.half	.L45-.L206
	.byte	0,1,1
.L202:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L14,0,.L45-.L14,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L46:
	.word	174
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L49,.L48
	.byte	2
	.word	.L17
	.byte	3
	.byte	'.cocofun_5',0,1,61,6,1
	.word	.L12,.L50,.L11
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L48:
	.word	.L208-.L207
.L207:
	.half	3
	.word	.L210-.L209
.L209:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Vadc.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Adc\\IfxVadc_Adc.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Vadc\\Std\\IfxVadc.h',0
	.byte	0,0,0,0
.L210:
	.byte	4,2,5,28,7,0,5,2
	.word	.L12
	.byte	3,251,9,1,4,3,5,18,9
	.half	.L211-.L12
	.byte	3,145,9,1,5,24,9
	.half	.L212-.L211
	.byte	1,9
	.half	.L50-.L212
	.byte	0,1,1,4,2,5,28,0,5,2
	.word	.L12
	.byte	3,251,9,1,4,3,5,18,9
	.half	.L211-.L12
	.byte	3,145,9,1,5,24,9
	.half	.L212-.L211
	.byte	1,9
	.half	.L50-.L212
	.byte	0,1,1
.L208:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L49:
	.word	-1,.L12,0,.L50-.L12,0,0
	.sdecl	'.debug_info',debug,cluster('g_VadcAutoScan')
	.sect	'.debug_info'
.L51:
	.word	168
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L17
	.byte	3
	.byte	'g_VadcAutoScan',0,16,10,18
	.word	.L136
	.byte	1,5,3
	.word	g_VadcAutoScan
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_VadcAutoScan')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('batt_voltage')
	.sect	'.debug_info'
.L53:
	.word	166
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L17
	.byte	3
	.byte	'batt_voltage',0,16,12,7
	.word	.L132
	.byte	1,5,3
	.word	batt_voltage
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('batt_voltage')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('EMG_Voltage')
	.sect	'.debug_info'
.L55:
	.word	165
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\APP\\src\\Vadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L17
	.byte	3
	.byte	'EMG_Voltage',0,16,13,7
	.word	.L132
	.byte	1,5,3
	.word	EMG_Voltage
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('EMG_Voltage')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L13:
	.word	-1,.L14,0,.L45-.L14
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L11:
	.word	-1,.L12,0,.L50-.L12
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Adc_Scan')
	.sect	'.debug_loc'
.L9:
	.word	-1,.L10,0,.L138-.L10
	.half	2
	.byte	138,0
	.word	.L138-.L10,.L63-.L10
	.half	3
	.byte	138,224,0
	.word	.L63-.L10,.L63-.L10
	.half	2
	.byte	138,0
	.word	0,0
.L68:
	.word	-1,.L10,.L14-.L10,.L45-.L10
	.half	2
	.byte	145,104
	.word	0,.L84-.L10
	.half	2
	.byte	145,104
	.word	.L12-.L10,.L139-.L10
	.half	2
	.byte	145,104
	.word	.L3-.L10,.L63-.L10
	.half	2
	.byte	145,104
	.word	0,0
.L66:
	.word	-1,.L10,.L14-.L10,.L45-.L10
	.half	3
	.byte	145,160,127
	.word	0,.L84-.L10
	.half	3
	.byte	145,160,127
	.word	.L12-.L10,.L139-.L10
	.half	3
	.byte	145,160,127
	.word	.L3-.L10,.L63-.L10
	.half	3
	.byte	145,160,127
	.word	0,0
.L95:
	.word	0,0
.L71:
	.word	-1,.L10,.L83-.L10,.L84-.L10
	.half	1
	.byte	84
	.word	0,0
.L78:
	.word	0,0
.L91:
	.word	0,0
.L76:
	.word	0,0
.L87:
	.word	0,0
.L102:
	.word	0,0
.L80:
	.word	0,0
.L104:
	.word	0,0
.L107:
	.word	-1,.L10,.L140-.L10,.L63-.L10
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_loc'
.L15:
	.word	-1,.L16,0,.L141-.L16
	.half	2
	.byte	138,0
	.word	.L141-.L16,.L108-.L16
	.half	3
	.byte	138,224,0
	.word	.L108-.L16,.L108-.L16
	.half	2
	.byte	138,0
	.word	0,0
.L110:
	.word	-1,.L16,.L14-.L16,.L45-.L16
	.half	2
	.byte	145,104
	.word	0,.L120-.L16
	.half	2
	.byte	145,104
	.word	.L12-.L16,.L50-.L16
	.half	2
	.byte	145,104
	.word	.L4-.L16,.L108-.L16
	.half	2
	.byte	145,104
	.word	0,0
.L109:
	.word	-1,.L16,.L14-.L16,.L45-.L16
	.half	3
	.byte	145,160,127
	.word	0,.L120-.L16
	.half	3
	.byte	145,160,127
	.word	.L12-.L16,.L50-.L16
	.half	3
	.byte	145,160,127
	.word	.L4-.L16,.L108-.L16
	.half	3
	.byte	145,160,127
	.word	0,0
.L124:
	.word	0,0
.L112:
	.word	-1,.L16,.L119-.L16,.L120-.L16
	.half	1
	.byte	84
	.word	0,0
.L116:
	.word	0,0
.L122:
	.word	0,0
.L115:
	.word	0,0
.L121:
	.word	0,0
.L128:
	.word	0,0
.L117:
	.word	0,0
.L129:
	.word	0,0
.L131:
	.word	-1,.L16,.L142-.L16,.L108-.L16
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_loc'
.L5:
	.word	-1,.L6,0,.L137-.L6
	.half	2
	.byte	138,0
	.word	.L137-.L6,.L57-.L6
	.half	3
	.byte	138,216,0
	.word	.L57-.L6,.L57-.L6
	.half	2
	.byte	138,0
	.word	0,0
.L59:
	.word	-1,.L6,0,.L57-.L6
	.half	3
	.byte	145,168,127
	.word	0,0
.L62:
	.word	-1,.L6,0,.L57-.L6
	.half	2
	.byte	145,72
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('calc_batt_voltage')
	.sect	'.debug_loc'
.L7:
	.word	-1,.L8,0,.L133-.L8
	.half	2
	.byte	138,0
	.word	0,0
.L135:
	.word	-1,.L8,0,.L133-.L8
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L213:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('VadcAutoScan_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L213,.L6,.L57-.L6
	.byte	4
	.word	(.L137-.L6)/2
	.byte	19,216,0,22,26,4,19,138,216,0,4
	.word	(.L57-.L137)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('calc_batt_voltage')
	.sect	'.debug_frame'
	.word	24
	.word	.L213,.L8,.L133-.L8
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Adc_Scan')
	.sect	'.debug_frame'
	.word	36
	.word	.L213,.L10,.L63-.L10
	.byte	4
	.word	(.L138-.L10)/2
	.byte	19,224,0,22,26,4,19,138,224,0,4
	.word	(.L63-.L138)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('EMG_Volt_Scan')
	.sect	'.debug_frame'
	.word	36
	.word	.L213,.L16,.L108-.L16
	.byte	4
	.word	(.L141-.L16)/2
	.byte	19,224,0,22,26,4,19,138,224,0,4
	.word	(.L108-.L141)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L214:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L214,.L12,.L50-.L12
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L214,.L14,.L45-.L14
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
