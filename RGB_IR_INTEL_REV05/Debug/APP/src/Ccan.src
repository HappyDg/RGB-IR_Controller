	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc15772a --dep-file=APP\\src\\.Ccan.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --make-target=APP\\src\\Ccan.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o APP\\src\\Ccan.src ..\\APP\\src\\Ccan.c"
	.compiler_name		"ctc"
	;source	'..\\APP\\src\\Ccan.c'

	
$TC16X
	.sdecl	'.zrodata.Ccan..4.cnt',data,rom
	.sect	'.zrodata.Ccan..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	-268337152
	.sdecl	'.zrodata.Ccan..5.cnt',data,rom
	.sect	'.zrodata.Ccan..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	500000
	.sdecl	'.zrodata.Ccan..6.cnt',data,rom
	.sect	'.zrodata.Ccan..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	2147483647
	
	.sdecl	'.text.Ccan.init_Ccan_Trans',code,cluster('init_Ccan_Trans')
	.sect	'.text.Ccan.init_Ccan_Trans'
	.align	2
	
	.global	init_Ccan_Trans

; ..\APP\src\Ccan.c	     1  /*
; ..\APP\src\Ccan.c	     2   * Ccan.c
; ..\APP\src\Ccan.c	     3   *
; ..\APP\src\Ccan.c	     4   *  Created on: 2019. 10. 7.
; ..\APP\src\Ccan.c	     5   *      Author: junseok.lee
; ..\APP\src\Ccan.c	     6   */
; ..\APP\src\Ccan.c	     7  #include "Ccan.h"
; ..\APP\src\Ccan.c	     8  #include "Spisoc.h"
; ..\APP\src\Ccan.c	     9  #include "util.h"
; ..\APP\src\Ccan.c	    10  
; ..\APP\src\Ccan.c	    11  App_Ccan_struct g_Ccan;
; ..\APP\src\Ccan.c	    12  
; ..\APP\src\Ccan.c	    13  IfxMultican_Message Ccan_msg_2B0;
; ..\APP\src\Ccan.c	    14  IfxMultican_Message Ccan_msg_367;
; ..\APP\src\Ccan.c	    15  IfxMultican_Message Ccan_msg_316;
; ..\APP\src\Ccan.c	    16  IfxMultican_Message Ccan_msg_329;
; ..\APP\src\Ccan.c	    17  
; ..\APP\src\Ccan.c	    18  void init_Ccan_Trans(void)
; Function init_Ccan_Trans
.L3:
init_Ccan_Trans:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	mov	d15,#64
.L150:
	fcall	.cocofun_8
.L67:

; ..\APP\src\Ccan.c	    19  {
; ..\APP\src\Ccan.c	    20  	/*	C-CAN	*/
; ..\APP\src\Ccan.c	    21  	/*	STB Enable	*/
; ..\APP\src\Ccan.c	    22  	IfxPort_setPinHigh(&MODULE_P02,6);
; ..\APP\src\Ccan.c	    23  	/*	EN Enable	*/
; ..\APP\src\Ccan.c	    24  	IfxPort_setPinHigh(&MODULE_P14,4);
; ..\APP\src\Ccan.c	    25  
; ..\APP\src\Ccan.c	    26  }
	ret
.L65:
	
__init_Ccan_Trans_function_end:
	.size	init_Ccan_Trans,__init_Ccan_Trans_function_end-init_Ccan_Trans
.L24:
	; End of function
	
	.sdecl	'.text.Ccan..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.Ccan..cocofun_8'
	.align	2
; Function .cocofun_8
.L5:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	movh.a	a15,#61444
	st.w	[a15]@los(0xf003a204),d15
.L273:
	mov	d15,#16
.L274:
	st.w	[a15]@los(0xf003b404),d15
	fret
.L54:
	; End of function
	.sdecl	'.text.Ccan.sleep_Ccan_Trans',code,cluster('sleep_Ccan_Trans')
	.sect	'.text.Ccan.sleep_Ccan_Trans'
	.align	2
	
	.global	sleep_Ccan_Trans

; ..\APP\src\Ccan.c	    27  
; ..\APP\src\Ccan.c	    28  void sleep_Ccan_Trans(void)
; Function sleep_Ccan_Trans
.L7:
sleep_Ccan_Trans:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	movh	d15,#64
.L221:
	fcall	.cocofun_8
.L99:

; ..\APP\src\Ccan.c	    29  {
; ..\APP\src\Ccan.c	    30  	/*	C-CAN	*/
; ..\APP\src\Ccan.c	    31  	/*	STB Disable	*/
; ..\APP\src\Ccan.c	    32  	IfxPort_setPinLow(&MODULE_P02,6);
; ..\APP\src\Ccan.c	    33  	/*	EN Enable	*/
; ..\APP\src\Ccan.c	    34  	IfxPort_setPinHigh(&MODULE_P14,4);
; ..\APP\src\Ccan.c	    35  
; ..\APP\src\Ccan.c	    36  }
	ret
.L97:
	
__sleep_Ccan_Trans_function_end:
	.size	sleep_Ccan_Trans,__sleep_Ccan_Trans_function_end-sleep_Ccan_Trans
.L34:
	; End of function
	
	.sdecl	'.text.Ccan.init_Ccan',code,cluster('init_Ccan')
	.sect	'.text.Ccan.init_Ccan'
	.align	2
	
	.global	init_Ccan

; ..\APP\src\Ccan.c	    37  
; ..\APP\src\Ccan.c	    38  void init_Ccan(void)
; Function init_Ccan
.L9:
init_Ccan:	.type	func

; ..\APP\src\Ccan.c	    39  {
; ..\APP\src\Ccan.c	    40  	/* create module config */
; ..\APP\src\Ccan.c	    41  	    IfxMultican_Can_Config canConfig;
; ..\APP\src\Ccan.c	    42  	    IfxMultican_Can_initModuleConfig(&canConfig, &MODULE_CAN);
	ld.w	d15,.4.cnt
.L155:
	sub.a	a10,#200
.L131:
	mov.a	a5,d15
.L156:
	mov.aa	a4,a10
.L157:
	call	IfxMultican_Can_initModuleConfig
.L158:

; ..\APP\src\Ccan.c	    43  
; ..\APP\src\Ccan.c	    44  	    /* initialize module */
; ..\APP\src\Ccan.c	    45  	    IfxMultican_Can_initModule(&g_Ccan.drivers.can, &canConfig);
	movh.a	a12,#@his(g_Ccan)
	lea	a12,[a12]@los(g_Ccan)
.L159:
	mov.aa	a5,a10
	mov.aa	a4,a12
	call	IfxMultican_Can_initModule
.L85:

; ..\APP\src\Ccan.c	    46  
; ..\APP\src\Ccan.c	    47  	    /* create CAN node config */
; ..\APP\src\Ccan.c	    48  	    IfxMultican_Can_NodeConfig canNodeConfig;
; ..\APP\src\Ccan.c	    49  	    IfxMultican_Can_Node_initConfig(&canNodeConfig, &g_Ccan.drivers.can);
	lea	a4,[a10]76
.L160:
	mov.aa	a5,a12
	call	IfxMultican_Can_Node_initConfig
.L161:

; ..\APP\src\Ccan.c	    50  
; ..\APP\src\Ccan.c	    51  	    canNodeConfig.baudrate = 500000;     /* 500 KBaud	*/
	ld.w	d15,.5.cnt
.L162:
	st.w	[a10]84,d15
.L163:

; ..\APP\src\Ccan.c	    52  	    //canNodeConfig.baudrate = 100000;     /* 100 KBaud	low can */
; ..\APP\src\Ccan.c	    53  
; ..\APP\src\Ccan.c	    54  	    /* source Node */
; ..\APP\src\Ccan.c	    55  	    {
; ..\APP\src\Ccan.c	    56  	        canNodeConfig.nodeId    = IfxMultican_NodeId_1;
	mov	d15,#1
	st.b	[a10]80,d15
.L164:

; ..\APP\src\Ccan.c	    57  	        canNodeConfig.rxPin     = &IfxMultican_RXD1B_P14_1_IN;
	movh.a	a15,#@his(IfxMultican_RXD1B_P14_1_IN)
	lea	a15,[a15]@los(IfxMultican_RXD1B_P14_1_IN)
.L165:
	st.a	[a10]116,a15
.L166:

; ..\APP\src\Ccan.c	    58  	        canNodeConfig.rxPinMode = IfxPort_InputMode_pullUp;
	mov	d15,#16
	st.b	[a10]120,d15
.L167:

; ..\APP\src\Ccan.c	    59  	        canNodeConfig.txPin     = &IfxMultican_TXD1_P14_0_OUT;
	movh.a	a15,#@his(IfxMultican_TXD1_P14_0_OUT)
	lea	a15,[a15]@los(IfxMultican_TXD1_P14_0_OUT)
.L168:
	st.a	[a10]124,a15
.L169:

; ..\APP\src\Ccan.c	    60  	        canNodeConfig.txPinMode = IfxPort_OutputMode_pushPull;
	mov	d15,#128
	st.b	[a10]128,d15
.L170:

; ..\APP\src\Ccan.c	    61  
; ..\APP\src\Ccan.c	    62  	        IfxMultican_Can_Node_init(&g_Ccan.drivers.canDstNode, &canNodeConfig);
	lea	a15,[a12]16
.L171:
	lea	a5,[a10]76
	mov.aa	a4,a15
	call	IfxMultican_Can_Node_init
.L88:

; ..\APP\src\Ccan.c	    63  	    }
; ..\APP\src\Ccan.c	    64  
; ..\APP\src\Ccan.c	    65  	    /* source Message object */
; ..\APP\src\Ccan.c	    66  	    {
; ..\APP\src\Ccan.c	    67  	        /* create message object config */
; ..\APP\src\Ccan.c	    68  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Ccan.c	    69  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_Ccan.drivers.canDstNode);
	lea	a4,[a10]140
.L172:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L173:

; ..\APP\src\Ccan.c	    70  
; ..\APP\src\Ccan.c	    71  	        canMsgObjConfig.msgObjId              = 0;
	mov	d15,#0
	st.w	[a10]144,d15
.L174:

; ..\APP\src\Ccan.c	    72  	        canMsgObjConfig.messageId             = 0x367;
	mov	d0,#871
	st.w	[a10]174,d0
.L175:

; ..\APP\src\Ccan.c	    73  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
	ld.w	d8,.6.cnt
.L176:
	st.w	[a10]170,d8
.L177:

; ..\APP\src\Ccan.c	    74  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	st.b	[a10]168,d15
.L178:

; ..\APP\src\Ccan.c	    75  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L179:

; ..\APP\src\Ccan.c	    76  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Ccan.c	    77  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Ccan.c	    78  
; ..\APP\src\Ccan.c	    79  	        /* initialize message object */
; ..\APP\src\Ccan.c	    80  	        IfxMultican_Can_MsgObj_init(&g_Ccan.drivers.canMsgObj_367, &canMsgObjConfig);
	lea	a4,[a12]28
.L180:
	ld.bu	d15,[a10]154
.L181:
	lea	a5,[a10]140
.L182:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L183:
	call	IfxMultican_Can_MsgObj_init
.L89:

; ..\APP\src\Ccan.c	    81  	    }
; ..\APP\src\Ccan.c	    82  
; ..\APP\src\Ccan.c	    83  	    {
; ..\APP\src\Ccan.c	    84  	        /* create message object config */
; ..\APP\src\Ccan.c	    85  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Ccan.c	    86  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_Ccan.drivers.canDstNode);
	lea	a4,[a10]140
.L184:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L185:

; ..\APP\src\Ccan.c	    87  
; ..\APP\src\Ccan.c	    88  	        canMsgObjConfig.msgObjId              = 1;
	mov	d15,#1
	st.w	[a10]144,d15
.L186:

; ..\APP\src\Ccan.c	    89  	        canMsgObjConfig.messageId             = 0x2B0;
	mov	d15,#688
	st.w	[a10]174,d15
.L187:

; ..\APP\src\Ccan.c	    90  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Ccan.c	    91  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L188:
	st.b	[a10]168,d15
.L189:

; ..\APP\src\Ccan.c	    92  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L190:

; ..\APP\src\Ccan.c	    93  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Ccan.c	    94  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Ccan.c	    95  
; ..\APP\src\Ccan.c	    96  	        /* initialize message object */
; ..\APP\src\Ccan.c	    97  	        IfxMultican_Can_MsgObj_init(&g_Ccan.drivers.canMsgObj_2B0, &canMsgObjConfig);
	lea	a4,[a12]44
.L191:
	ld.bu	d15,[a10]154
.L192:
	lea	a5,[a10]140
.L193:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L194:
	call	IfxMultican_Can_MsgObj_init
.L92:

; ..\APP\src\Ccan.c	    98  	    }
; ..\APP\src\Ccan.c	    99  	    {
; ..\APP\src\Ccan.c	   100  	        /* create message object config */
; ..\APP\src\Ccan.c	   101  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Ccan.c	   102  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_Ccan.drivers.canDstNode);
	lea	a4,[a10]140
.L195:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L196:

; ..\APP\src\Ccan.c	   103  
; ..\APP\src\Ccan.c	   104  	        canMsgObjConfig.msgObjId              = 2;
	mov	d15,#2
	st.w	[a10]144,d15
.L197:

; ..\APP\src\Ccan.c	   105  	        canMsgObjConfig.messageId             = 0x316;
	mov	d15,#790
	st.w	[a10]174,d15
.L198:

; ..\APP\src\Ccan.c	   106  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Ccan.c	   107  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L199:
	st.b	[a10]168,d15
.L200:

; ..\APP\src\Ccan.c	   108  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L201:

; ..\APP\src\Ccan.c	   109  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Ccan.c	   110  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Ccan.c	   111  
; ..\APP\src\Ccan.c	   112  	        /* initialize message object */
; ..\APP\src\Ccan.c	   113  	        IfxMultican_Can_MsgObj_init(&g_Ccan.drivers.canMsgObj_316, &canMsgObjConfig);
	lea	a4,[a12]60
.L202:
	ld.bu	d15,[a10]154
.L203:
	lea	a5,[a10]140
.L204:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L205:
	call	IfxMultican_Can_MsgObj_init
.L94:

; ..\APP\src\Ccan.c	   114  	    }
; ..\APP\src\Ccan.c	   115  	    {
; ..\APP\src\Ccan.c	   116  	        /* create message object config */
; ..\APP\src\Ccan.c	   117  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Ccan.c	   118  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_Ccan.drivers.canDstNode);
	lea	a4,[a10]140
.L206:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L207:

; ..\APP\src\Ccan.c	   119  
; ..\APP\src\Ccan.c	   120  	        canMsgObjConfig.msgObjId              = 3;
	mov	d15,#3
	st.w	[a10]144,d15
.L208:

; ..\APP\src\Ccan.c	   121  	        canMsgObjConfig.messageId             = 0x329;
	mov	d15,#809
	st.w	[a10]174,d15
.L209:

; ..\APP\src\Ccan.c	   122  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Ccan.c	   123  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L210:
	st.b	[a10]168,d15
.L211:

; ..\APP\src\Ccan.c	   124  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L212:

; ..\APP\src\Ccan.c	   125  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Ccan.c	   126  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Ccan.c	   127  
; ..\APP\src\Ccan.c	   128  	        /* initialize message object */
; ..\APP\src\Ccan.c	   129  	        IfxMultican_Can_MsgObj_init(&g_Ccan.drivers.canMsgObj_329, &canMsgObjConfig);
	lea	a4,[a12]76
.L213:
	ld.bu	d15,[a10]154
.L214:
	lea	a5,[a10]140
.L215:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L216:
	j	IfxMultican_Can_MsgObj_init
.L82:
	
__init_Ccan_function_end:
	.size	init_Ccan,__init_Ccan_function_end-init_Ccan
.L29:
	; End of function
	
	.sdecl	'.text.Ccan.init_Ccan_msg',code,cluster('init_Ccan_msg')
	.sect	'.text.Ccan.init_Ccan_msg'
	.align	2
	
	.global	init_Ccan_msg

; ..\APP\src\Ccan.c	   130  	    }
; ..\APP\src\Ccan.c	   131  
; ..\APP\src\Ccan.c	   132  
; ..\APP\src\Ccan.c	   133  }
; ..\APP\src\Ccan.c	   134  
; ..\APP\src\Ccan.c	   135  void init_Ccan_msg(void)
; Function init_Ccan_msg
.L11:
init_Ccan_msg:	.type	func

; ..\APP\src\Ccan.c	   136  {
; ..\APP\src\Ccan.c	   137  	IfxMultican_Message_init(&Ccan_msg_2B0, 0x2B0, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Ccan_msg_2B0)
	lea	a15,[a15]@los(Ccan_msg_2B0)
.L226:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d15,#688
	st.w	[a15],d15
.L227:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	mov	d0,#-1
	st.w	[a15]6,d0
.L228:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a15]10,d0
.L229:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	mov	d15,#8
	st.b	[a15]4,d15
.L230:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	mov	d1,#0
	st.b	[a15]14,d1
.L110:

; ..\APP\src\Ccan.c	   138  	IfxMultican_Message_init(&Ccan_msg_367, 0x367, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Ccan_msg_367)
	lea	a15,[a15]@los(Ccan_msg_367)
.L231:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#871
	fcall	.cocofun_7
.L122:

; ..\APP\src\Ccan.c	   139  	IfxMultican_Message_init(&Ccan_msg_316, 0x316, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Ccan_msg_316)
	lea	a15,[a15]@los(Ccan_msg_316)
.L232:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#790
	fcall	.cocofun_7
.L124:

; ..\APP\src\Ccan.c	   140  	IfxMultican_Message_init(&Ccan_msg_329, 0x329, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Ccan_msg_329)
	lea	a15,[a15]@los(Ccan_msg_329)
.L233:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#809
	fcall	.cocofun_7
.L125:

; ..\APP\src\Ccan.c	   141  
; ..\APP\src\Ccan.c	   142  
; ..\APP\src\Ccan.c	   143  }
	ret
.L108:
	
__init_Ccan_msg_function_end:
	.size	init_Ccan_msg,__init_Ccan_msg_function_end-init_Ccan_msg
.L39:
	; End of function
	
	.sdecl	'.text.Ccan..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.Ccan..cocofun_7'
	.align	2
; Function .cocofun_7
.L13:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	st.w	[a15],d2
.L265:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	st.w	[a15]6,d0
.L266:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a15]10,d0
.L267:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	st.b	[a15]4,d15
.L268:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	st.b	[a15]14,d1
	fret
.L49:
	; End of function
	.sdecl	'.text.Ccan.Recieve_Ccan_10ms',code,cluster('Recieve_Ccan_10ms')
	.sect	'.text.Ccan.Recieve_Ccan_10ms'
	.align	2
	
	.global	Recieve_Ccan_10ms

; ..\APP\src\Ccan.c	   144  
; ..\APP\src\Ccan.c	   145  void Recieve_Ccan_10ms(void)
; Function Recieve_Ccan_10ms
.L15:
Recieve_Ccan_10ms:	.type	func
	sub.a	a10,#8
.L132:

; ..\APP\src\Ccan.c	   146  {
; ..\APP\src\Ccan.c	   147  	Ccan_msg msg;
; ..\APP\src\Ccan.c	   148  
; ..\APP\src\Ccan.c	   149  
; ..\APP\src\Ccan.c	   150  	IfxMultican_Status  readStatus = IfxMultican_Can_MsgObj_readMessage(&g_Ccan.drivers.canMsgObj_367, &Ccan_msg_367);
	movh.a	a15,#@his(Ccan_msg_367)
	lea	a15,[a15]@los(Ccan_msg_367)
.L238:
	movh.a	a12,#@his(g_Ccan)
	lea	a12,[a12]@los(g_Ccan)
.L239:
	lea	a4,[a12]28
.L240:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L241:

; ..\APP\src\Ccan.c	   151  	readStatus = IfxMultican_Can_MsgObj_readMessage(&g_Ccan.drivers.canMsgObj_2B0, &Ccan_msg_2B0);
	movh.a	a13,#@his(Ccan_msg_2B0)
	lea	a13,[a13]@los(Ccan_msg_2B0)
.L242:
	lea	a4,[a12]44
.L243:
	mov.aa	a5,a13
	call	IfxMultican_Can_MsgObj_readMessage
.L244:

; ..\APP\src\Ccan.c	   152  	readStatus = IfxMultican_Can_MsgObj_readMessage(&g_Ccan.drivers.canMsgObj_316, &Ccan_msg_316);
	movh.a	a14,#@his(Ccan_msg_316)
	lea	a14,[a14]@los(Ccan_msg_316)
.L245:
	lea	a4,[a12]60
.L246:
	mov.aa	a5,a14
	call	IfxMultican_Can_MsgObj_readMessage
.L247:

; ..\APP\src\Ccan.c	   153  	readStatus = IfxMultican_Can_MsgObj_readMessage(&g_Ccan.drivers.canMsgObj_329, &Ccan_msg_329);
	movh.a	a5,#@his(Ccan_msg_329)
	lea	a5,[a5]@los(Ccan_msg_329)
	st.a	[a10],a5
.L248:
	lea	a4,[a12]76
.L249:
	call	IfxMultican_Can_MsgObj_readMessage
.L250:

; ..\APP\src\Ccan.c	   154  
; ..\APP\src\Ccan.c	   155  
; ..\APP\src\Ccan.c	   156  	veh_gear_disp = (uint8)(Ccan_msg_367.data[1]&GEAR_DISP_MASK);
	ld.w	d15,[a15]10
.L251:

; ..\APP\src\Ccan.c	   157  
; ..\APP\src\Ccan.c	   158  	g_spi_msg.spi_data_field_tx[4] = Ccan_msg_2B0.data[0]&STR_ANGLE_LOW_MASK;
	movh.a	a15,#@his(g_spi_msg)
.L252:
	and	d15,#15
	st.b	veh_gear_disp,d15
.L253:
	lea	a15,[a15]@los(g_spi_msg)
.L254:
	ld.w	d15,[a13]6
.L255:
	st.b	[a15]36,d15
.L256:

; ..\APP\src\Ccan.c	   159  	g_spi_msg.spi_data_field_tx[5] = (Ccan_msg_2B0.data[0]&STR_ANGLE_HIGH_MASK)>>8;
	sh	d15,#-8
	st.b	[a15]37,d15
.L257:

; ..\APP\src\Ccan.c	   160  
; ..\APP\src\Ccan.c	   161  	msg.byte4 = Ccan_msg_316.data[0];
	ld.w	d15,[a14]6
.L133:

; ..\APP\src\Ccan.c	   162  	g_spi_msg.spi_data_field_tx[6] = msg.ems_316_low.RPM_LOW;
	extr.u	d0,d15,#8,#8
	st.b	[a15]38,d0
.L258:

; ..\APP\src\Ccan.c	   163  	g_spi_msg.spi_data_field_tx[7] = msg.ems_316_low.RPM_HIGH;
	extr.u	d15,d15,#16,#8
	st.b	[a15]39,d15
.L134:

; ..\APP\src\Ccan.c	   164  
; ..\APP\src\Ccan.c	   165  	msg.byte4 = Ccan_msg_316.data[1];
	ld.w	d15,[a14]10
.L135:

; ..\APP\src\Ccan.c	   166  	g_spi_msg.spi_data_field_tx[8] = msg.ems_316_high.VS;
	extr.u	d15,d15,#16,#8
	st.b	[a15]40,d15
.L136:

; ..\APP\src\Ccan.c	   167  
; ..\APP\src\Ccan.c	   168  	msg.byte4 = Ccan_msg_329.data[1];
	ld.a	a2,[a10]
	ld.w	d15,[a2]10
.L137:

; ..\APP\src\Ccan.c	   169  	g_spi_msg.spi_data_field_tx[9] = msg.ems_329_high.ACC_PEDAL;
	extr.u	d0,d15,#16,#8
	st.b	[a15]41,d0
.L259:

; ..\APP\src\Ccan.c	   170  	g_spi_msg.spi_data_field_tx[10] = msg.ems_329_high.THROTTLE;
	extr.u	d0,d15,#8,#8
	st.b	[a15]42,d0
.L260:

; ..\APP\src\Ccan.c	   171  
; ..\APP\src\Ccan.c	   172  	veh_break = msg.ems_329_high.BRAKE_ACT;
	extr.u	d15,d15,#6,#2
	st.b	veh_break,d15
.L138:

; ..\APP\src\Ccan.c	   173  
; ..\APP\src\Ccan.c	   174  
; ..\APP\src\Ccan.c	   175  }
	ret
.L126:
	
__Recieve_Ccan_10ms_function_end:
	.size	Recieve_Ccan_10ms,__Recieve_Ccan_10ms_function_end-Recieve_Ccan_10ms
.L44:
	; End of function
	
	.sdecl	'.bss.Ccan.g_Ccan',data,cluster('g_Ccan')
	.sect	'.bss.Ccan.g_Ccan'
	.global	g_Ccan
	.align	4
g_Ccan:	.type	object
	.size	g_Ccan,92
	.space	92
	.sdecl	'.bss.Ccan.Ccan_msg_2B0',data,cluster('Ccan_msg_2B0')
	.sect	'.bss.Ccan.Ccan_msg_2B0'
	.global	Ccan_msg_2B0
	.align	4
Ccan_msg_2B0:	.type	object
	.size	Ccan_msg_2B0,16
	.space	16
	.sdecl	'.bss.Ccan.Ccan_msg_367',data,cluster('Ccan_msg_367')
	.sect	'.bss.Ccan.Ccan_msg_367'
	.global	Ccan_msg_367
	.align	4
Ccan_msg_367:	.type	object
	.size	Ccan_msg_367,16
	.space	16
	.sdecl	'.bss.Ccan.Ccan_msg_316',data,cluster('Ccan_msg_316')
	.sect	'.bss.Ccan.Ccan_msg_316'
	.global	Ccan_msg_316
	.align	4
Ccan_msg_316:	.type	object
	.size	Ccan_msg_316,16
	.space	16
	.sdecl	'.bss.Ccan.Ccan_msg_329',data,cluster('Ccan_msg_329')
	.sect	'.bss.Ccan.Ccan_msg_329'
	.global	Ccan_msg_329
	.align	4
Ccan_msg_329:	.type	object
	.size	Ccan_msg_329,16
	.space	16
	.calls	'init_Ccan','IfxMultican_Can_initModuleConfig'
	.calls	'init_Ccan','IfxMultican_Can_initModule'
	.calls	'init_Ccan','IfxMultican_Can_Node_initConfig'
	.calls	'init_Ccan','IfxMultican_Can_Node_init'
	.calls	'init_Ccan','IfxMultican_Can_MsgObj_initConfig'
	.calls	'init_Ccan','IfxMultican_Can_MsgObj_init'
	.calls	'Recieve_Ccan_10ms','IfxMultican_Can_MsgObj_readMessage'
	.calls	'init_Ccan_Trans','.cocofun_8'
	.calls	'sleep_Ccan_Trans','.cocofun_8'
	.calls	'init_Ccan_msg','.cocofun_7'
	.calls	'init_Ccan_Trans','',0
	.calls	'.cocofun_8','',0
	.calls	'sleep_Ccan_Trans','',0
	.calls	'init_Ccan','',200
	.calls	'init_Ccan_msg','',0
	.calls	'.cocofun_7','',0
	.extern	IfxMultican_RXD1B_P14_1_IN
	.extern	IfxMultican_TXD1_P14_0_OUT
	.extern	IfxMultican_Can_initModule
	.extern	IfxMultican_Can_initModuleConfig
	.extern	IfxMultican_Can_Node_init
	.extern	IfxMultican_Can_Node_initConfig
	.extern	IfxMultican_Can_MsgObj_init
	.extern	IfxMultican_Can_MsgObj_initConfig
	.extern	IfxMultican_Can_MsgObj_readMessage
	.extern	g_spi_msg
	.extern	veh_gear_disp
	.extern	veh_break
	.calls	'Recieve_Ccan_10ms','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L17:
	.word	127537
	.half	3
	.word	.L18
	.byte	4
.L16:
	.byte	1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L19
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	195
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	169
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	201
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	201
	.byte	8
	.byte	'value',0,2,118,43
	.word	169
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	322
	.byte	4,2,35,0,0,13
	.word	612
	.byte	6
	.word	651
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	656
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,11,6,187,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	720
	.byte	4,2,35,0,0,4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,195,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	878
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,157,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,203,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1122
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,243,13,25,12,12
	.byte	'CON0',0
	.word	816
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1082
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1313
	.byte	4,2,35,8,0,13
	.word	1353
	.byte	6
	.word	1416
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1421
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	856
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1421
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	856
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	856
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1421
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,231,2,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1651
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,129,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,191,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1967
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,231,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2538
	.byte	4,2,35,0,0,14,4
	.word	305
	.byte	15,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,247,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2666
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,135,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2881
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,143,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3096
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,255,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3533
	.byte	4,2,35,0,0,14,24
	.word	305
	.byte	15,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,160,3,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,135,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3856
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,181,3,16,4,10
	.byte	'PD8',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,143,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4160
	.byte	4,2,35,0,0,14,8
	.word	305
	.byte	15,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,223,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4485
	.byte	4,2,35,0,0,14,12
	.word	305
	.byte	15,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,255,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4825
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,247,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,166,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,8,207,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5402
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,8,223,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5549
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,11,8,231,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5718
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,215,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5890
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,8,159,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6065
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,8,175,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6239
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,8,183,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6413
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6589
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,209,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,199,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6745
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,151,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7078
	.byte	4,2,35,0,0,14,96
	.word	305
	.byte	15,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,8,215,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,207,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7522
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,159,5,25,128,2,12
	.byte	'OUT',0
	.word	1927
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2498
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2617
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	2841
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3056
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3273
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3493
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2657
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3807
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	3847
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4120
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4436
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4476
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4776
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	4816
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5151
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5362
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	4476
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5509
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5678
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	5850
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6025
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6199
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6373
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6549
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6705
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7038
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7386
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	7426
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	7482
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8049
	.byte	4,3,35,252,1,0,13
	.word	8089
	.byte	6
	.word	8622
.L66:
	.byte	2
	.byte	'IfxPort_setPinHigh',0,3,7,247,3,17,1,1
.L68:
	.byte	8
	.byte	'port',0,7,247,3,43
	.word	8627
.L70:
	.byte	8
	.byte	'pinIndex',0,7,247,3,55
	.word	305
.L72:
	.byte	16,3,0,0
.L98:
	.byte	2
	.byte	'IfxPort_setPinLow',0,3,7,253,3,17,1,1
.L100:
	.byte	8
	.byte	'port',0,7,253,3,42
	.word	8627
.L102:
	.byte	8
	.byte	'pinIndex',0,7,253,3,54
	.word	305
.L104:
	.byte	16,3,0,0,17,7,54,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,2
	.byte	'IfxPort_setPinModeInput',0,3,7,131,4,17,1,1,8
	.byte	'port',0,7,131,4,48
	.word	8627
	.byte	8
	.byte	'pinIndex',0,7,131,4,60
	.word	305
	.byte	8
	.byte	'mode',0,7,131,4,88
	.word	8757
	.byte	3,0,17,7,105,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,7,91,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,7,137,4,17,1,1,8
	.byte	'port',0,7,137,4,49
	.word	8627
	.byte	8
	.byte	'pinIndex',0,7,137,4,61
	.word	305
	.byte	8
	.byte	'mode',0,7,137,4,90
	.word	8962
	.byte	8
	.byte	'index',0,7,137,4,114
	.word	9031
	.byte	3,0,17,7,131,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0
.L73:
	.byte	2
	.byte	'IfxPort_setPinState',0,3,7,143,4,17,1,1
.L74:
	.byte	8
	.byte	'port',0,7,143,4,44
	.word	8627
.L76:
	.byte	8
	.byte	'pinIndex',0,7,143,4,56
	.word	305
.L78:
	.byte	8
	.byte	'action',0,7,143,4,80
	.word	9344
.L80:
	.byte	3,0,9
	.byte	'_Ifx_CAN_N_CR_Bits',0,10,172,3,16,4,10
	.byte	'INIT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TRIE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'LECIE',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ALIE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CANDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'TXDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CCE',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CALM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'SUSEN',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'FDEN',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,11,10,215,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9525
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_SR_Bits',0,10,241,3,16,4,10
	.byte	'LEC',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'TXOK',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RXOK',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ALERT',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EWRN',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'BOFF',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'LLE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LOE',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'SUSACK',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RESI',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'FLEC',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,10,135,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9778
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_IPR_Bits',0,10,221,3,16,4,10
	.byte	'ALINP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'LECINP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'TRINP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CFCINP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'TEINP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,10,247,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10043
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_PCR_Bits',0,10,232,3,16,4,10
	.byte	'RXSEL',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'LBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,10,255,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10220
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_BTEVR_Bits',0,10,147,3,16,4,10
	.byte	'BRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'SJW',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'DIV8',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TSEG2',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'TSEG1',0,2
	.word	856
	.byte	6,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,199,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10363
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_BTR_Bits',0,10,161,3,16,4,10
	.byte	'BRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'SJW',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'TSEG1',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'TSEG2',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'DIV8',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,207,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10603
	.byte	4,2,35,0,0,11,10,129,8,5,4,12
	.byte	'BTEVR',0
	.word	10563
	.byte	4,2,35,0,12
	.byte	'BTR',0
	.word	10733
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_ECNT_Bits',0,10,188,3,16,4,10
	.byte	'REC',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TEC',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'EWRNLVL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'LETD',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'LEINC',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	6,0,2,35,3,0,11,10,223,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10808
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_FCR_Bits',0,10,209,3,16,4,10
	.byte	'CFC',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'CFSEL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'CFMOD',0,1
	.word	305
	.byte	2,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'CFCIE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'CFCOV',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,239,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10981
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TCCR_Bits',0,10,130,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TPSC',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	6,14,2,35,0,10
	.byte	'TRIGSRC',0,1
	.word	305
	.byte	3,3,2,35,2,10
	.byte	'reserved_21',0,2
	.word	856
	.byte	11,0,2,35,2,0,11,10,143,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11177
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TRTR_Bits',0,10,151,4,16,4,10
	.byte	'RELOAD',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'TEIE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'TE',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,159,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11348
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TTTR_Bits',0,10,161,4,16,4,10
	.byte	'RELOAD',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'TXMO',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,10,167,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11510
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_FBTR_Bits',0,10,199,3,16,4,10
	.byte	'FBRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'FSJW',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'FTSEG1',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'FTSEG2',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,10,231,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11651
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TDCR_Bits',0,10,140,4,16,4,10
	.byte	'TDCV',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'TDCO',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'TDC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,151,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11810
	.byte	4,2,35,0,0,14,192,1
	.word	305
	.byte	15,191,1,0,9
	.byte	'_Ifx_CAN_N',0,10,251,7,25,128,2,12
	.byte	'CR',0
	.word	9738
	.byte	4,2,35,0,12
	.byte	'SR',0
	.word	10003
	.byte	4,2,35,4,12
	.byte	'IPR',0
	.word	10180
	.byte	4,2,35,8,12
	.byte	'PCR',0
	.word	10323
	.byte	4,2,35,12,19
	.word	10773
	.byte	4,2,35,16,12
	.byte	'ECNT',0
	.word	10941
	.byte	4,2,35,20,12
	.byte	'FCR',0
	.word	11137
	.byte	4,2,35,24,12
	.byte	'TCCR',0
	.word	11308
	.byte	4,2,35,28,12
	.byte	'TRTR',0
	.word	11470
	.byte	4,2,35,32,12
	.byte	'TATTR',0
	.word	11611
	.byte	4,2,35,36,12
	.byte	'TBTTR',0
	.word	11611
	.byte	4,2,35,40,12
	.byte	'TCTTR',0
	.word	11611
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	4476
	.byte	8,2,35,48,12
	.byte	'FBTR',0
	.word	11770
	.byte	4,2,35,56,12
	.byte	'TDCR',0
	.word	11953
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	11993
	.byte	192,1,2,35,64,0,13
	.word	12004
	.byte	6
	.word	12253
	.byte	2
	.byte	'IfxMultican_Node_activate',0,3,9,169,10,17,1,1,8
	.byte	'hwNode',0,9,169,10,54
	.word	12258
	.byte	3,0,2
	.byte	'IfxMultican_Node_deactivate',0,3,9,175,10,17,1,1,8
	.byte	'hwNode',0,9,175,10,56
	.word	12258
	.byte	3,0,9
	.byte	'_Ifx_CAN_CLC_Bits',0,10,92,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,10,215,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12369
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ID_Bits',0,10,111,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,231,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12525
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_FDR_Bits',0,10,102,16,4,10
	.byte	'STEP',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,223,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12646
	.byte	4,2,35,0,0,14,216,1
	.word	305
	.byte	15,215,1,0,9
	.byte	'_Ifx_CAN_OCS_Bits',0,10,170,4,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'TGB',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'TG_P',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,175,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12797
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRSTCLR_Bits',0,10,134,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,10,255,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13003
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRST1_Bits',0,10,127,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,10,247,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13109
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRST0_Bits',0,10,119,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,10,239,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13212
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ACCEN1_Bits',0,10,86,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,207,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13334
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ACCEN0_Bits',0,10,49,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,10,199,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13423
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_LIST_Bits',0,10,141,1,16,4,10
	.byte	'BEGIN',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'END',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SIZE',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,10,135,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13992
	.byte	4,2,35,0,0,14,64
	.word	14106
	.byte	15,15,0,9
	.byte	'_Ifx_CAN_MSPND_Bits',0,10,141,3,16,4,10
	.byte	'PND',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,191,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14155
	.byte	4,2,35,0,0,14,32
	.word	14197
	.byte	15,7,0,14,32
	.word	305
	.byte	15,31,0,9
	.byte	'_Ifx_CAN_MSID_Bits',0,10,128,3,16,4,10
	.byte	'INDEX',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,11,10,175,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14255
	.byte	4,2,35,0,0,14,32
	.word	14320
	.byte	15,7,0,9
	.byte	'_Ifx_CAN_MSIMASK_Bits',0,10,135,3,16,4,10
	.byte	'IM',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,183,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14369
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_PANCTR_Bits',0,10,183,4,16,4,10
	.byte	'PANCMD',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RBUSY',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'PANAR1',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PANAR2',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,183,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14452
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MCR_Bits',0,10,151,1,16,4,10
	.byte	'CLKSEL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'DXCM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	3,4,2,35,1,10
	.byte	'MPSEL',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,143,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14630
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MITR_Bits',0,10,186,1,16,4,10
	.byte	'IT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,167,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14813
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MECR_Bits',0,10,162,1,16,4,10
	.byte	'TH',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'INP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'NODE',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'ANYED',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CAPEIE',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'DEPTH',0,1
	.word	305
	.byte	3,2,2,35,3,10
	.byte	'SOF',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,10,151,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14916
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MESTAT_Bits',0,10,177,1,16,4,10
	.byte	'CAPT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'CAPRED',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'CAPE',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,11,10,159,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15163
	.byte	4,2,35,0,0,14,40
	.word	305
	.byte	15,39,0,14,128,6
	.word	12004
	.byte	15,2,0,13
	.word	15313
	.byte	14,128,22
	.word	305
	.byte	15,255,21,0,9
	.byte	'_Ifx_CAN_MO_EDATA0_Bits',0,10,130,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,215,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15339
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_FCR_Bits',0,10,193,2,16,4,10
	.byte	'MMC',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'RXTOE',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'BRS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'FDF',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'GDFS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'IDC',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DLCC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'DATC',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RXIE',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'TXIE',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'OVIE',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'FRREN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'RMM',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SDT',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'STT',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'DLC',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,143,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15470
	.byte	4,2,35,0,0,11,10,201,7,5,4,12
	.byte	'EDATA0',0
	.word	15430
	.byte	4,2,35,0,12
	.byte	'FCR',0
	.word	15839
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA1_Bits',0,10,139,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,223,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15915
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_FGPR_Bits',0,10,218,2,16,4,10
	.byte	'BOT',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TOP',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'CUR',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'SEL',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,151,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16046
	.byte	4,2,35,0,0,11,10,207,7,5,4,12
	.byte	'EDATA1',0
	.word	16006
	.byte	4,2,35,0,12
	.byte	'FGPR',0
	.word	16135
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA2_Bits',0,10,148,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,231,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16212
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_IPR_Bits',0,10,227,2,16,4,10
	.byte	'RXINP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'TXINP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'MPN',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'CFCVAL',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,159,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16343
	.byte	4,2,35,0,0,11,10,213,7,5,4,12
	.byte	'EDATA2',0
	.word	16303
	.byte	4,2,35,0,12
	.byte	'IPR',0
	.word	16438
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_AMR_Bits',0,10,193,1,16,4,10
	.byte	'AM',0,4
	.word	282
	.byte	29,3,2,35,0,10
	.byte	'MIDE',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,175,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16514
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA3_Bits',0,10,157,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,239,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16635
	.byte	4,2,35,0,0,11,10,219,7,5,4,12
	.byte	'AMR',0
	.word	16595
	.byte	4,2,35,0,12
	.byte	'EDATA3',0
	.word	16726
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_DATAL_Bits',0,10,249,1,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,207,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16802
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA4_Bits',0,10,166,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,247,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16932
	.byte	4,2,35,0,0,11,10,225,7,5,4,12
	.byte	'DATAL',0
	.word	16892
	.byte	4,2,35,0,12
	.byte	'EDATA4',0
	.word	17023
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_DATAH_Bits',0,10,240,1,16,4,10
	.byte	'DB4',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB5',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB6',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB7',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,199,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17101
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA5_Bits',0,10,175,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,255,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17231
	.byte	4,2,35,0,0,11,10,231,7,5,4,12
	.byte	'DATAH',0
	.word	17191
	.byte	4,2,35,0,12
	.byte	'EDATA5',0
	.word	17322
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_AR_Bits',0,10,201,1,16,4,10
	.byte	'ID',0,4
	.word	282
	.byte	29,3,2,35,0,10
	.byte	'IDE',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PRI',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,183,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17400
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA6_Bits',0,10,184,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,135,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17511
	.byte	4,2,35,0,0,11,10,237,7,5,4,12
	.byte	'AR',0
	.word	17471
	.byte	4,2,35,0,12
	.byte	'EDATA6',0
	.word	17602
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_CTR_Bits',0,10,209,1,16,4,10
	.byte	'RESRXPND',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RESTXPND',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RESRXUPD',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RESNEWDAT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RESMSGLST',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RESMSGVAL',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RESRTSEL',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RESRXEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'RESTXRQ',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RESTXEN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RESTXEN1',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RESDIR',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SETRXPND',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SETTXPND',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'SETRXUPD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'SETNEWDAT',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'SETMSGLST',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'SETMSGVAL',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SETRTSEL',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'SETRXEN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SETTXRQ',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SETTXEN0',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'SETTXEN1',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SETDIR',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,191,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17677
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_STAT_Bits',0,10,236,2,16,4,10
	.byte	'RXPND',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TXPND',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RXUPD',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'NEWDAT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'MSGLST',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'MSGVAL',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RTSEL',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RXEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TXRQ',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TXEN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'TXEN1',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'DIR',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'LIST',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'PPREV',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PNEXT',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,167,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18269
	.byte	4,2,35,0,0,11,10,243,7,5,4,12
	.byte	'CTR',0
	.word	18229
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	18551
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO',0,10,199,7,25,32,19
	.word	15879
	.byte	4,2,35,0,19
	.word	16175
	.byte	4,2,35,4,19
	.word	16478
	.byte	4,2,35,8,19
	.word	16766
	.byte	4,2,35,12,19
	.word	17063
	.byte	4,2,35,16,19
	.word	17362
	.byte	4,2,35,20,19
	.word	17642
	.byte	4,2,35,24,19
	.word	18591
	.byte	4,2,35,28,0,14,128,32
	.word	18625
	.byte	15,127,0,13
	.word	18716
	.byte	14,128,64
	.word	305
	.byte	15,255,63,0,9
	.byte	'_Ifx_CAN',0,10,159,8,25,128,128,1,12
	.byte	'CLC',0
	.word	12485
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	12606
	.byte	4,2,35,8,12
	.byte	'FDR',0
	.word	12746
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	12786
	.byte	216,1,2,35,16,12
	.byte	'OCS',0
	.word	12963
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	13069
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	13172
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	13294
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	13383
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	13952
	.byte	4,3,35,252,1,12
	.byte	'LIST',0
	.word	14146
	.byte	64,3,35,128,2,12
	.byte	'MSPND',0
	.word	14237
	.byte	32,3,35,192,2,12
	.byte	'reserved_160',0
	.word	14246
	.byte	32,3,35,224,2,12
	.byte	'MSID',0
	.word	14360
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	14246
	.byte	32,3,35,160,3,12
	.byte	'MSIMASK',0
	.word	14412
	.byte	4,3,35,192,3,12
	.byte	'PANCTR',0
	.word	14590
	.byte	4,3,35,196,3,12
	.byte	'MCR',0
	.word	14773
	.byte	4,3,35,200,3,12
	.byte	'MITR',0
	.word	14876
	.byte	4,3,35,204,3,12
	.byte	'MECR',0
	.word	15123
	.byte	4,3,35,208,3,12
	.byte	'MESTAT',0
	.word	15264
	.byte	4,3,35,212,3,12
	.byte	'reserved_1D8',0
	.word	15304
	.byte	40,3,35,216,3,12
	.byte	'N',0
	.word	15323
	.byte	128,6,3,35,128,4,12
	.byte	'reserved_500',0
	.word	15328
	.byte	128,22,3,35,128,10,12
	.byte	'MO',0
	.word	18726
	.byte	128,32,3,35,128,32,12
	.byte	'reserved_2000',0
	.word	18731
	.byte	128,64,3,35,128,64,0,13
	.word	18742
	.byte	6
	.word	19225
	.byte	17,11,64,9,1,18
	.byte	'IfxMultican_NodeId_none',0,127,18
	.byte	'IfxMultican_NodeId_0',0,0,18
	.byte	'IfxMultican_NodeId_1',0,1,18
	.byte	'IfxMultican_NodeId_2',0,2,0,7
	.byte	'IfxMultican_Node_getPointer',0,3,9,193,10,23
	.word	12258
	.byte	1,1,8
	.byte	'mcan',0,9,193,10,60
	.word	19230
	.byte	8
	.byte	'node',0,9,193,10,85
	.word	19235
	.byte	3,0,4
	.byte	'unsigned long int',0,4,7,17,9,80,9,1,18
	.byte	'IfxMultican_DataLengthCode_0',0,0,18
	.byte	'IfxMultican_DataLengthCode_1',0,1,18
	.byte	'IfxMultican_DataLengthCode_2',0,2,18
	.byte	'IfxMultican_DataLengthCode_3',0,3,18
	.byte	'IfxMultican_DataLengthCode_4',0,4,18
	.byte	'IfxMultican_DataLengthCode_5',0,5,18
	.byte	'IfxMultican_DataLengthCode_6',0,6,18
	.byte	'IfxMultican_DataLengthCode_7',0,7,18
	.byte	'IfxMultican_DataLengthCode_8',0,8,18
	.byte	'IfxMultican_DataLengthCode_12',0,9,18
	.byte	'IfxMultican_DataLengthCode_16',0,10,18
	.byte	'IfxMultican_DataLengthCode_20',0,11,18
	.byte	'IfxMultican_DataLengthCode_24',0,12,18
	.byte	'IfxMultican_DataLengthCode_32',0,13,18
	.byte	'IfxMultican_DataLengthCode_48',0,14,18
	.byte	'IfxMultican_DataLengthCode_64',0,15,0,14,8
	.word	19406
	.byte	15,1,0
.L130:
	.byte	20,9,214,1,9,16,12
	.byte	'id',0
	.word	19406
	.byte	4,2,35,0,12
	.byte	'lengthCode',0
	.word	19427
	.byte	1,2,35,4,12
	.byte	'data',0
	.word	19936
	.byte	8,2,35,6,12
	.byte	'fastBitRate',0
	.word	305
	.byte	1,2,35,14,0,6
	.word	19945
.L109:
	.byte	2
	.byte	'IfxMultican_Message_init',0,3,9,164,8,17,1,1
.L111:
	.byte	8
	.byte	'msg',0,9,164,8,63
	.word	20019
.L113:
	.byte	8
	.byte	'id',0,9,164,8,75
	.word	19406
.L115:
	.byte	8
	.byte	'dataLow',0,9,164,8,86
	.word	19406
.L117:
	.byte	8
	.byte	'dataHigh',0,9,164,8,102
	.word	19406
.L119:
	.byte	8
	.byte	'lengthCode',0,9,164,8,139,1
	.word	19427
.L121:
	.byte	3,0,13
	.word	18625
	.byte	6
	.word	20140
	.byte	2
	.byte	'IfxMultican_MsgObj_clearRxPending',0,3,9,198,8,17,1,1,8
	.byte	'hwObj',0,9,198,8,63
	.word	20145
	.byte	3,0,2
	.byte	'IfxMultican_MsgObj_clearTxPending',0,3,9,204,8,17,1,1,8
	.byte	'hwObj',0,9,204,8,63
	.word	20145
	.byte	3,0,4
	.byte	'long int',0,4,5,7
	.byte	'IfxMultican_MsgObj_getPointer',0,3,9,236,8,24
	.word	20145
	.byte	1,1,8
	.byte	'mcan',0,9,236,8,63
	.word	19230
	.byte	8
	.byte	'msgObjId',0,9,236,8,90
	.word	20268
	.byte	3,0,17,13,83,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,12,170,5,31
	.word	20356
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,12,185,4,20
	.word	305
	.byte	1,1,3,0,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,12,190,5,19
	.word	19406
	.byte	1,1,8
	.byte	'address',0,12,190,5,55
	.word	19406
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,12,198,5,20
	.word	305
	.byte	1,1,8
	.byte	'address',0,12,198,5,70
	.word	19406
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,12,153,7,17,1,1,8
	.byte	'address',0,12,153,7,56
	.word	19406
	.byte	8
	.byte	'count',0,12,153,7,72
	.word	19406
	.byte	3,0,4
	.byte	'float',0,4,4,7
	.byte	'IfxScuCcu_getStmFrequency',0,3,14,175,8,20
	.word	20695
	.byte	1,1,3,0,9
	.byte	'_Ifx_DMA_CLC_Bits',0,16,131,4,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,16,160,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20744
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ID_Bits',0,16,155,4,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,16,184,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20901
	.byte	4,2,35,0,0,14,20
	.word	305
	.byte	15,19,0,9
	.byte	'_Ifx_DMA_MEMCON_Bits',0,16,163,4,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	2,30,2,35,0,10
	.byte	'INTERR',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'RMWERR',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'DATAERR',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'PMIC',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'ERRDIS',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	22,0,2,35,0,0,11,16,192,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21032
	.byte	4,2,35,0,0,14,28
	.word	305
	.byte	15,27,0,9
	.byte	'_Ifx_DMA_ACCEN00_Bits',0,16,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,128,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21309
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN01_Bits',0,16,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,136,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21879
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN10_Bits',0,16,88,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,144,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21969
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN11_Bits',0,16,125,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,152,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22539
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN20_Bits',0,16,131,1,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,160,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22629
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN21_Bits',0,16,168,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,168,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23200
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN30_Bits',0,16,174,1,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,176,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23291
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ACCEN31_Bits',0,16,211,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,184,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23862
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_EER_Bits',0,16,233,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'ESER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EDER',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	6,0,2,35,2,10
	.byte	'ERER',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'ELER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,16,200,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23953
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ERRSR_Bits',0,16,246,1,16,4,10
	.byte	'LEC',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	9,0,2,35,0,10
	.byte	'SER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DER',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'SPBER',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'SRIER',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'RAMER',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SLLER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'DLLER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,16,208,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24177
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_CLRE_Bits',0,16,217,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'CSER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'CDER',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'CSPBER',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'CSRIER',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'CRAMER',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CSLLER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'CDLLER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,16,192,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24469
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_SR_Bits',0,16,161,3,16,4,10
	.byte	'RS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	3,4,2,35,0,10
	.byte	'WS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	856
	.byte	11,0,2,35,0,10
	.byte	'CH',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,11,16,216,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24752
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R0_Bits',0,16,193,2,16,4,10
	.byte	'RD00',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD01',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD02',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD03',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,248,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24932
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R1_Bits',0,16,202,2,16,4,10
	.byte	'RD10',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD11',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD12',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD13',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,128,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25067
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R2_Bits',0,16,211,2,16,4,10
	.byte	'RD20',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD21',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD22',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD23',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,136,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25202
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R3_Bits',0,16,220,2,16,4,10
	.byte	'RD30',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD31',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD32',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD33',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,144,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25337
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R4_Bits',0,16,229,2,16,4,10
	.byte	'RD40',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD41',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD42',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD43',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,152,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25472
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R5_Bits',0,16,238,2,16,4,10
	.byte	'RD50',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD51',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD52',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD53',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,160,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25607
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R6_Bits',0,16,247,2,16,4,10
	.byte	'RD60',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD61',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD62',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD63',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,168,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25742
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_R7_Bits',0,16,128,3,16,4,10
	.byte	'RD70',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RD71',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RD72',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RD73',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,176,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25877
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_RDCRC_Bits',0,16,137,3,16,4,10
	.byte	'RDCRC',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,184,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26012
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_SDCRC_Bits',0,16,149,3,16,4,10
	.byte	'SDCRC',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,200,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26103
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_SADR_Bits',0,16,143,3,16,4,10
	.byte	'SADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,192,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26194
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_DADR_Bits',0,16,187,2,16,4,10
	.byte	'DADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,240,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26283
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_ADICR_Bits',0,16,135,2,16,4,10
	.byte	'SMF',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'INCS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'DMF',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'INCD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CBLS',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CBLD',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SHCT',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'SCBE',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'DCBE',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'STAMP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'ETRL',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'WRPSE',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'WRPDE',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'INTCT',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'IRDV',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,16,216,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26372
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_CHCR_Bits',0,16,155,2,16,4,10
	.byte	'TREL',0,2
	.word	856
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'BLKM',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'RROAT',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'CHMODE',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'CHDW',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'PATSEL',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PRSEL',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'DMAPRIO',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,16,224,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26688
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_SHADR_Bits',0,16,155,3,16,4,10
	.byte	'SHADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,208,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26967
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME_CHSR_Bits',0,16,171,2,16,4,10
	.byte	'TCOUNT',0,2
	.word	856
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'LXO',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'WRPS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WRPD',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'ICH',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'IPM',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'BUFFER',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'FROZEN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,232,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27058
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_BLK_ME',0,16,144,8,25,112,12
	.byte	'SR',0
	.word	24892
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	4816
	.byte	12,2,35,4,12
	.byte	'R0',0
	.word	25027
	.byte	4,2,35,16,12
	.byte	'R1',0
	.word	25162
	.byte	4,2,35,20,12
	.byte	'R2',0
	.word	25297
	.byte	4,2,35,24,12
	.byte	'R3',0
	.word	25432
	.byte	4,2,35,28,12
	.byte	'R4',0
	.word	25567
	.byte	4,2,35,32,12
	.byte	'R5',0
	.word	25702
	.byte	4,2,35,36,12
	.byte	'R6',0
	.word	25837
	.byte	4,2,35,40,12
	.byte	'R7',0
	.word	25972
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	14246
	.byte	32,2,35,48,12
	.byte	'RDCRC',0
	.word	26063
	.byte	4,2,35,80,12
	.byte	'SDCRC',0
	.word	26154
	.byte	4,2,35,84,12
	.byte	'SADR',0
	.word	26243
	.byte	4,2,35,88,12
	.byte	'DADR',0
	.word	26332
	.byte	4,2,35,92,12
	.byte	'ADICR',0
	.word	26648
	.byte	4,2,35,96,12
	.byte	'CHCR',0
	.word	26927
	.byte	4,2,35,100,12
	.byte	'SHADR',0
	.word	27018
	.byte	4,2,35,104,12
	.byte	'CHSR',0
	.word	27291
	.byte	4,2,35,108,0,13
	.word	27331
	.byte	9
	.byte	'_Ifx_DMA_BLK',0,16,178,8,25,128,1,12
	.byte	'EER',0
	.word	24137
	.byte	4,2,35,0,12
	.byte	'ERRSR',0
	.word	24429
	.byte	4,2,35,4,12
	.byte	'CLRE',0
	.word	24712
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'ME',0
	.word	27619
	.byte	112,2,35,16,0,13
	.word	27624
	.byte	14,128,31
	.word	305
	.byte	15,255,30,0,13
	.word	27624
	.byte	9
	.byte	'_Ifx_DMA_OTSS_Bits',0,16,185,4,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'BS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,16,208,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27740
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_ERRINTR_Bits',0,16,141,4,16,4,10
	.byte	'SIT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,168,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27879
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_PRR0_Bits',0,16,194,4,16,4,10
	.byte	'PAT00',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'PAT01',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'PAT02',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PAT03',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,216,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27985
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_PRR1_Bits',0,16,203,4,16,4,10
	.byte	'PAT10',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'PAT11',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'PAT12',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PAT13',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,16,224,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28119
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_TIME_Bits',0,16,226,4,16,4,10
	.byte	'COUNT',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,248,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28253
	.byte	4,2,35,0,0,14,236,1
	.word	305
	.byte	15,235,1,0,9
	.byte	'_Ifx_DMA_MODE_Bits',0,16,178,4,16,4,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,200,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28347
	.byte	4,2,35,0,0,14,16
	.word	28411
	.byte	15,3,0,14,240,9
	.word	305
	.byte	15,239,9,0,9
	.byte	'_Ifx_DMA_HRR_Bits',0,16,148,4,16,4,10
	.byte	'HRP',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,16,176,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28471
	.byte	4,2,35,0,0,14,64
	.word	28533
	.byte	15,15,0,14,192,3
	.word	305
	.byte	15,191,3,0,9
	.byte	'_Ifx_DMA_SUSENR_Bits',0,16,219,4,16,4,10
	.byte	'SUSEN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,240,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28593
	.byte	4,2,35,0,0,14,64
	.word	28660
	.byte	15,15,0,9
	.byte	'_Ifx_DMA_SUSACR_Bits',0,16,212,4,16,4,10
	.byte	'SUSAC',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,232,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28709
	.byte	4,2,35,0,0,14,64
	.word	28776
	.byte	15,15,0,9
	.byte	'_Ifx_DMA_TSR_Bits',0,16,232,4,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'HTRE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'TRL',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CH',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'HLTREQ',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'HLTACK',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'ECH',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DCH',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'CTL',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'HLTCLR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,16,128,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28825
	.byte	4,2,35,0,0,14,64
	.word	29100
	.byte	15,15,0,9
	.byte	'_Ifx_DMA_CH_RDCRCR_Bits',0,16,235,3,16,4,10
	.byte	'RDCRC',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,128,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29149
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_SDCRCR_Bits',0,16,247,3,16,4,10
	.byte	'SDCRC',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,144,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29237
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_SADR_Bits',0,16,241,3,16,4,10
	.byte	'SADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,136,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29325
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_DADR_Bits',0,16,229,3,16,4,10
	.byte	'DADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,248,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29410
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_ADICR_Bits',0,16,172,3,16,4,10
	.byte	'SMF',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'INCS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'DMF',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'INCD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CBLS',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CBLD',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SHCT',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'SCBE',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'DCBE',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'STAMP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'ETRL',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'WRPSE',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'WRPDE',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'INTCT',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'IRDV',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,16,224,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29495
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_CHCFGR_Bits',0,16,192,3,16,4,10
	.byte	'TREL',0,2
	.word	856
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'BLKM',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'RROAT',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'CHMODE',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'CHDW',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'PATSEL',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PRSEL',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'DMAPRIO',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,16,232,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29807
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_SHADR_Bits',0,16,253,3,16,4,10
	.byte	'SHADR',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,152,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30084
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH_CHCSR_Bits',0,16,208,3,16,4,10
	.byte	'TCOUNT',0,2
	.word	856
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'LXO',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'WRPS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WRPD',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'ICH',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'IPM',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'BUFFER',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'FROZEN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SWB',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CWRP',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'CICH',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SIT',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'SCH',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,240,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30171
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DMA_CH',0,16,188,8,25,32,12
	.byte	'RDCRCR',0
	.word	29197
	.byte	4,2,35,0,12
	.byte	'SDCRCR',0
	.word	29285
	.byte	4,2,35,4,12
	.byte	'SADR',0
	.word	29370
	.byte	4,2,35,8,12
	.byte	'DADR',0
	.word	29455
	.byte	4,2,35,12,12
	.byte	'ADICR',0
	.word	29767
	.byte	4,2,35,16,12
	.byte	'CHCFGR',0
	.word	30044
	.byte	4,2,35,20,12
	.byte	'SHADR',0
	.word	30131
	.byte	4,2,35,24,12
	.byte	'CHCSR',0
	.word	30478
	.byte	4,2,35,28,0,14,128,4
	.word	30518
	.byte	15,15,0,13
	.word	30658
	.byte	14,128,60
	.word	305
	.byte	15,255,59,0,9
	.byte	'_Ifx_DMA',0,16,211,8,25,128,128,1,12
	.byte	'CLC',0
	.word	20861
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	20983
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	21023
	.byte	20,2,35,12,12
	.byte	'MEMCON',0
	.word	21260
	.byte	4,2,35,32,12
	.byte	'reserved_24',0
	.word	21300
	.byte	28,2,35,36,12
	.byte	'ACCEN00',0
	.word	21839
	.byte	4,2,35,64,12
	.byte	'ACCEN01',0
	.word	21929
	.byte	4,2,35,68,12
	.byte	'ACCEN10',0
	.word	22499
	.byte	4,2,35,72,12
	.byte	'ACCEN11',0
	.word	22589
	.byte	4,2,35,76,12
	.byte	'ACCEN20',0
	.word	23160
	.byte	4,2,35,80,12
	.byte	'ACCEN21',0
	.word	23251
	.byte	4,2,35,84,12
	.byte	'ACCEN30',0
	.word	23822
	.byte	4,2,35,88,12
	.byte	'ACCEN31',0
	.word	23913
	.byte	4,2,35,92,12
	.byte	'reserved_60',0
	.word	11993
	.byte	192,1,2,35,96,12
	.byte	'BLK0',0
	.word	27719
	.byte	128,1,3,35,160,2,12
	.byte	'reserved_1A0',0
	.word	27724
	.byte	128,31,3,35,160,3,12
	.byte	'BLK1',0
	.word	27735
	.byte	128,1,3,35,160,34,12
	.byte	'reserved_11A0',0
	.word	7426
	.byte	96,3,35,160,35,12
	.byte	'OTSS',0
	.word	27839
	.byte	4,3,35,128,36,12
	.byte	'ERRINTR',0
	.word	27945
	.byte	4,3,35,132,36,12
	.byte	'PRR0',0
	.word	28079
	.byte	4,3,35,136,36,12
	.byte	'PRR1',0
	.word	28213
	.byte	4,3,35,140,36,12
	.byte	'TIME',0
	.word	28296
	.byte	4,3,35,144,36,12
	.byte	'reserved_1214',0
	.word	28336
	.byte	236,1,3,35,148,36,12
	.byte	'MODE',0
	.word	28451
	.byte	16,3,35,128,38,12
	.byte	'reserved_1310',0
	.word	28460
	.byte	240,9,3,35,144,38,12
	.byte	'HRR',0
	.word	28573
	.byte	64,3,35,128,48,12
	.byte	'reserved_1840',0
	.word	28582
	.byte	192,3,3,35,192,48,12
	.byte	'SUSENR',0
	.word	28700
	.byte	64,3,35,128,52,12
	.byte	'reserved_1A40',0
	.word	28582
	.byte	192,3,3,35,192,52,12
	.byte	'SUSACR',0
	.word	28816
	.byte	64,3,35,128,56,12
	.byte	'reserved_1C40',0
	.word	28582
	.byte	192,3,3,35,192,56,12
	.byte	'TSR',0
	.word	29140
	.byte	64,3,35,128,60,12
	.byte	'reserved_1E40',0
	.word	28582
	.byte	192,3,3,35,192,60,12
	.byte	'CH',0
	.word	30668
	.byte	128,4,3,35,128,64,12
	.byte	'reserved_2200',0
	.word	30673
	.byte	128,60,3,35,128,68,0,13
	.word	30684
	.byte	6
	.word	31386
	.byte	17,17,81,9,1,18
	.byte	'IfxDma_ChannelId_none',0,127,18
	.byte	'IfxDma_ChannelId_0',0,0,18
	.byte	'IfxDma_ChannelId_1',0,1,18
	.byte	'IfxDma_ChannelId_2',0,2,18
	.byte	'IfxDma_ChannelId_3',0,3,18
	.byte	'IfxDma_ChannelId_4',0,4,18
	.byte	'IfxDma_ChannelId_5',0,5,18
	.byte	'IfxDma_ChannelId_6',0,6,18
	.byte	'IfxDma_ChannelId_7',0,7,18
	.byte	'IfxDma_ChannelId_8',0,8,18
	.byte	'IfxDma_ChannelId_9',0,9,18
	.byte	'IfxDma_ChannelId_10',0,10,18
	.byte	'IfxDma_ChannelId_11',0,11,18
	.byte	'IfxDma_ChannelId_12',0,12,18
	.byte	'IfxDma_ChannelId_13',0,13,18
	.byte	'IfxDma_ChannelId_14',0,14,18
	.byte	'IfxDma_ChannelId_15',0,15,0,7
	.byte	'IfxDma_isChannelTransactionPending',0,3,15,242,10,20
	.word	305
	.byte	1,1,8
	.byte	'dma',0,15,242,10,64
	.word	31391
	.byte	8
	.byte	'channelId',0,15,242,10,86
	.word	31396
	.byte	3,0,2
	.byte	'IfxDma_startChannelTransaction',0,3,15,235,11,17,1,1,8
	.byte	'dma',0,15,235,11,57
	.word	31391
	.byte	8
	.byte	'channelId',0,15,235,11,79
	.word	31396
	.byte	3,0,2
	.byte	'IfxDma_setChannelDestinationAddress',0,3,15,144,11,17,1,1,8
	.byte	'dma',0,15,144,11,62
	.word	31391
	.byte	8
	.byte	'channelId',0,15,144,11,84
	.word	31396
	.byte	8
	.byte	'address',0,15,144,11,101
	.word	201
	.byte	3,0,21
	.word	195
	.byte	6
	.word	32017
	.byte	2
	.byte	'IfxDma_setChannelSourceAddress',0,3,15,203,11,17,1,1,8
	.byte	'dma',0,15,203,11,57
	.word	31391
	.byte	8
	.byte	'channelId',0,15,203,11,79
	.word	31396
	.byte	8
	.byte	'address',0,15,203,11,102
	.word	32022
	.byte	3,0,2
	.byte	'IfxDma_setChannelTransferCount',0,3,15,220,11,17,1,1,8
	.byte	'dma',0,15,220,11,57
	.word	31391
	.byte	8
	.byte	'channelId',0,15,220,11,79
	.word	31396
	.byte	8
	.byte	'transferCount',0,15,220,11,97
	.word	19406
	.byte	3,0,2
	.byte	'IfxDma_clearChannelInterrupt',0,3,15,128,9,17,1,1,8
	.byte	'dma',0,15,128,9,55
	.word	31391
	.byte	8
	.byte	'channelId',0,15,128,9,77
	.word	31396
	.byte	3,0,7
	.byte	'IfxDma_getAndClearChannelInterrupt',0,3,15,206,9,20
	.word	305
	.byte	1,1,8
	.byte	'dma',0,15,206,9,64
	.word	31391
	.byte	8
	.byte	'channelId',0,15,206,9,86
	.word	31396
	.byte	3,0,7
	.byte	'IfxDma_getChannelInterrupt',0,3,15,150,10,20
	.word	305
	.byte	1,1,8
	.byte	'dma',0,15,150,10,56
	.word	31391
	.byte	8
	.byte	'channelId',0,15,150,10,78
	.word	31396
	.byte	3,0,7
	.byte	'IfxDma_getSrcPointer',0,3,15,217,10,35
	.word	656
	.byte	1,1,8
	.byte	'dma',0,15,217,10,65
	.word	31391
	.byte	8
	.byte	'channelId',0,15,217,10,87
	.word	31396
	.byte	3,0,9
	.byte	'_Ifx_QSPI_CLC_Bits',0,19,127,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,19,239,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32505
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_PISEL_Bits',0,19,254,1,16,4,10
	.byte	'MRIS',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SRIS',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'SCIS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SLSIS',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,19,207,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32662
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ID_Bits',0,19,208,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,19,159,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32885
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_GLOBALCON_Bits',0,19,189,1,16,4,10
	.byte	'TQ',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'SI',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EXPECT',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'LB',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'DEL0',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'STROBE',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'SRF',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'STIP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'MS',0,1
	.word	305
	.byte	2,5,2,35,3,10
	.byte	'AREN',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'RESETS',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,19,143,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33008
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_GLOBALCON1_Bits',0,19,170,1,16,4,10
	.byte	'ERRORENS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXEN',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXEN',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1EN',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2EN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USREN',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOINT',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'RXFIFOINT',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'PT1',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PT2',0,2
	.word	856
	.byte	3,6,2,35,2,10
	.byte	'TXFM',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'RXFM',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,19,151,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33312
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_BACON_Bits',0,19,88,16,4,10
	.byte	'LAST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'IPRE',0,1
	.word	305
	.byte	3,4,2,35,0,10
	.byte	'IDLE',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'LPRE',0,2
	.word	856
	.byte	3,6,2,35,0,10
	.byte	'LEAD',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'TPRE',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'TRAIL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PARTYP',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'UINT',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'MSB',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'BYTE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'DL',0,2
	.word	856
	.byte	5,4,2,35,2,10
	.byte	'CS',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,19,215,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33638
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ECON_Bits',0,19,143,1,16,4,10
	.byte	'Q',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'A',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'B',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'C',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'CPH',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CPOL',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PAREN',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	15,2,2,35,0,10
	.byte	'BE',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,19,255,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33911
	.byte	4,2,35,0,0,14,32
	.word	34075
	.byte	15,7,0,9
	.byte	'_Ifx_QSPI_STATUS_Bits',0,19,169,2,16,4,10
	.byte	'ERRORFLAGS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXF',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1F',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2F',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USRF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOLEVEL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'RXFIFOLEVEL',0,1
	.word	305
	.byte	3,2,2,35,2,10
	.byte	'SLAVESEL',0,2
	.word	856
	.byte	4,6,2,35,2,10
	.byte	'RPV',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'TPV',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PHASE',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,19,239,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34124
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_STATUS1_Bits',0,19,158,2,16,4,10
	.byte	'BITCOUNT',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	20,4,2,35,0,10
	.byte	'BRDEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BRD',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SPDEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'SPD',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,19,247,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34429
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_SSOC_Bits',0,19,151,2,16,4,10
	.byte	'AOL',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'OEN',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,19,231,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34605
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_FLAGSCLEAR_Bits',0,19,157,1,16,4,10
	.byte	'ERRORCLEARS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXC',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1C',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2C',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USRC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,19,135,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34702
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_XXLCON_Bits',0,19,187,2,16,4,10
	.byte	'XDL',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'BYTECOUNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,19,255,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34922
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_MIXENTRY_Bits',0,19,238,1,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,191,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35027
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_BACONENTRY_Bits',0,19,106,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,223,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35111
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_DATAENTRY_Bits',0,19,137,1,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,247,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35196
	.byte	4,2,35,0,0,14,32
	.word	35241
	.byte	15,7,0,9
	.byte	'_Ifx_QSPI_RXEXIT_Bits',0,19,139,2,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,215,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35290
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_RXEXITD_Bits',0,19,145,2,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,223,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35372
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_CAPCON_Bits',0,19,112,16,4,10
	.byte	'CAP',0,2
	.word	856
	.byte	15,1,2,35,0,10
	.byte	'OVF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EDGECON',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'INS',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'EN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,2
	.word	856
	.byte	7,4,2,35,2,10
	.byte	'CAPC',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'CAPS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'CAPF',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CAPSEL',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,19,231,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35455
	.byte	4,2,35,0,0,14,68
	.word	305
	.byte	15,67,0,9
	.byte	'_Ifx_QSPI_OCS_Bits',0,19,244,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,19,199,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35699
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRSTCLR_Bits',0,19,231,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,19,183,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35860
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRST1_Bits',0,19,224,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,19,175,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35967
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRST0_Bits',0,19,216,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,19,167,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36072
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ACCEN1_Bits',0,19,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,19,207,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36196
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ACCEN0_Bits',0,19,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,19,199,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36286
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI',0,19,143,4,25,128,2,12
	.byte	'CLC',0
	.word	32622
	.byte	4,2,35,0,12
	.byte	'PISEL',0
	.word	32845
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	32968
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'GLOBALCON',0
	.word	33272
	.byte	4,2,35,16,12
	.byte	'GLOBALCON1',0
	.word	33598
	.byte	4,2,35,20,12
	.byte	'BACON',0
	.word	33871
	.byte	4,2,35,24,12
	.byte	'reserved_1C',0
	.word	2657
	.byte	4,2,35,28,12
	.byte	'ECON',0
	.word	34115
	.byte	32,2,35,32,12
	.byte	'STATUS',0
	.word	34389
	.byte	4,2,35,64,12
	.byte	'STATUS1',0
	.word	34565
	.byte	4,2,35,68,12
	.byte	'SSOC',0
	.word	34662
	.byte	4,2,35,72,12
	.byte	'reserved_4C',0
	.word	4476
	.byte	8,2,35,76,12
	.byte	'FLAGSCLEAR',0
	.word	34882
	.byte	4,2,35,84,12
	.byte	'XXLCON',0
	.word	34987
	.byte	4,2,35,88,12
	.byte	'MIXENTRY',0
	.word	35071
	.byte	4,2,35,92,12
	.byte	'BACONENTRY',0
	.word	35156
	.byte	4,2,35,96,12
	.byte	'DATAENTRY',0
	.word	35281
	.byte	32,2,35,100,12
	.byte	'reserved_84',0
	.word	4816
	.byte	12,3,35,132,1,12
	.byte	'RXEXIT',0
	.word	35332
	.byte	4,3,35,144,1,12
	.byte	'RXEXITD',0
	.word	35415
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4476
	.byte	8,3,35,152,1,12
	.byte	'CAPCON',0
	.word	35650
	.byte	4,3,35,160,1,12
	.byte	'reserved_A4',0
	.word	35690
	.byte	68,3,35,164,1,12
	.byte	'OCS',0
	.word	35820
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	35927
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	36032
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	36156
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	36246
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	36816
	.byte	4,3,35,252,1,0,13
	.word	36856
	.byte	6
	.word	37400
	.byte	7
	.byte	'IfxQspi_readReceiveFifo',0,3,18,195,7,19
	.word	19406
	.byte	1,1,8
	.byte	'qspi',0,18,195,7,53
	.word	37405
	.byte	3,0,2
	.byte	'IfxQspi_writeTransmitFifo',0,3,18,154,8,17,1,1,8
	.byte	'qspi',0,18,154,8,53
	.word	37405
	.byte	8
	.byte	'data',0,18,154,8,66
	.word	19406
	.byte	3,0,7
	.byte	'IfxQspi_getModuleFrequency',0,3,18,207,6,18
	.word	20695
	.byte	1,1,8
	.byte	'qspi',0,18,207,6,55
	.word	37405
	.byte	3,0,17,18,143,1,9,1,18
	.byte	'IfxQspi_Phase_wait',0,0,18
	.byte	'IfxQspi_Phase_idleA',0,1,18
	.byte	'IfxQspi_Phase_idleB',0,2,18
	.byte	'IfxQspi_Phase_lead',0,3,18
	.byte	'IfxQspi_Phase_data',0,4,18
	.byte	'IfxQspi_Phase_trail',0,5,18
	.byte	'IfxQspi_Phase_expect',0,6,18
	.byte	'IfxQspi_Phase_leadStrobe',0,7,18
	.byte	'IfxQspi_Phase_trailStrobe',0,8,0,7
	.byte	'IfxQspi_getPhase',0,3,18,213,6,26
	.word	37581
	.byte	1,1,8
	.byte	'qspi',0,18,213,6,53
	.word	37405
	.byte	3,0,2
	.byte	'IfxQspi_writeBasicConfiguration',0,3,18,243,7,17,1,1,8
	.byte	'qspi',0,18,243,7,59
	.word	37405
	.byte	8
	.byte	'baconVal',0,18,243,7,72
	.word	19406
	.byte	3,0,17,18,59,9,1,18
	.byte	'IfxQspi_ChannelId_0',0,0,18
	.byte	'IfxQspi_ChannelId_1',0,1,18
	.byte	'IfxQspi_ChannelId_2',0,2,18
	.byte	'IfxQspi_ChannelId_3',0,3,18
	.byte	'IfxQspi_ChannelId_4',0,4,18
	.byte	'IfxQspi_ChannelId_5',0,5,18
	.byte	'IfxQspi_ChannelId_6',0,6,18
	.byte	'IfxQspi_ChannelId_7',0,7,18
	.byte	'IfxQspi_ChannelId_8',0,8,18
	.byte	'IfxQspi_ChannelId_9',0,9,18
	.byte	'IfxQspi_ChannelId_10',0,10,18
	.byte	'IfxQspi_ChannelId_11',0,11,18
	.byte	'IfxQspi_ChannelId_12',0,12,18
	.byte	'IfxQspi_ChannelId_13',0,13,18
	.byte	'IfxQspi_ChannelId_14',0,14,0,2
	.byte	'IfxQspi_writeExtendedConfiguration',0,3,18,141,8,17,1,1,8
	.byte	'qspi',0,18,141,8,62
	.word	37405
	.byte	8
	.byte	'channelId',0,18,141,8,86
	.word	37914
	.byte	8
	.byte	'econVal',0,18,141,8,104
	.word	19406
	.byte	3,0,2
	.byte	'IfxQspi_writeMixedDataTransmitFifo',0,3,18,148,8,17,1,1,8
	.byte	'qspi',0,18,148,8,62
	.word	37405
	.byte	8
	.byte	'mixEntryVal',0,18,148,8,75
	.word	19406
	.byte	3,0,7
	.byte	'IfxQspi_getIndex',0,3,18,191,6,19
	.word	19406
	.byte	1,1,8
	.byte	'qspi',0,18,191,6,46
	.word	37405
	.byte	3,0,9
	.byte	'_Ifx_STM_CLC_Bits',0,21,100,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,21,149,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38475
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ID_Bits',0,21,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,21,181,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38631
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0_Bits',0,21,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,229,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38753
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM1_Bits',0,21,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,245,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38838
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM2_Bits',0,21,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,253,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38923
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM3_Bits',0,21,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,133,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39008
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM4_Bits',0,21,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,141,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39094
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM5_Bits',0,21,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,149,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39180
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM6_Bits',0,21,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,157,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39266
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAP_Bits',0,21,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,133,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39352
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CMP_Bits',0,21,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,165,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39439
	.byte	4,2,35,0,0,14,8
	.word	39481
	.byte	15,1,0,9
	.byte	'_Ifx_STM_CMCON_Bits',0,21,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,11,21,157,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39530
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ICR_Bits',0,21,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	282
	.byte	25,0,2,35,0,0,11,21,173,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39761
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ISCR_Bits',0,21,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,21,189,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39978
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,21,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,237,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40142
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAPSV_Bits',0,21,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,141,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40229
	.byte	4,2,35,0,0,14,144,1
	.word	305
	.byte	15,143,1,0,9
	.byte	'_Ifx_STM_OCS_Bits',0,21,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,21,221,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40329
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,21,175,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,21,213,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40489
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST1_Bits',0,21,168,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,21,205,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40595
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST0_Bits',0,21,160,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,21,197,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40699
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,21,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,21,253,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40822
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,21,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,21,245,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40911
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM',0,21,173,3,25,128,2,12
	.byte	'CLC',0
	.word	38591
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	38713
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'TIM0',0
	.word	38798
	.byte	4,2,35,16,12
	.byte	'TIM1',0
	.word	38883
	.byte	4,2,35,20,12
	.byte	'TIM2',0
	.word	38968
	.byte	4,2,35,24,12
	.byte	'TIM3',0
	.word	39054
	.byte	4,2,35,28,12
	.byte	'TIM4',0
	.word	39140
	.byte	4,2,35,32,12
	.byte	'TIM5',0
	.word	39226
	.byte	4,2,35,36,12
	.byte	'TIM6',0
	.word	39312
	.byte	4,2,35,40,12
	.byte	'CAP',0
	.word	39399
	.byte	4,2,35,44,12
	.byte	'CMP',0
	.word	39521
	.byte	8,2,35,48,12
	.byte	'CMCON',0
	.word	39721
	.byte	4,2,35,56,12
	.byte	'ICR',0
	.word	39938
	.byte	4,2,35,60,12
	.byte	'ISCR',0
	.word	40102
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	4816
	.byte	12,2,35,68,12
	.byte	'TIM0SV',0
	.word	40189
	.byte	4,2,35,80,12
	.byte	'CAPSV',0
	.word	40278
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	40318
	.byte	144,1,2,35,88,12
	.byte	'OCS',0
	.word	40449
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	40555
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	40659
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	40782
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	40871
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	41440
	.byte	4,3,35,252,1,0,13
	.word	41480
	.byte	6
	.word	41900
	.byte	7
	.byte	'IfxStm_get',0,3,20,202,3,19
	.word	169
	.byte	1,1,8
	.byte	'stm',0,20,202,3,39
	.word	41905
	.byte	3,0,7
	.byte	'IfxStm_getFrequency',0,3,20,219,3,20
	.word	20695
	.byte	1,1,8
	.byte	'stm',0,20,219,3,49
	.word	41905
	.byte	16,3,0,0,7
	.byte	'IfxStm_getLower',0,3,20,229,3,19
	.word	19406
	.byte	1,1,8
	.byte	'stm',0,20,229,3,44
	.word	41905
	.byte	3,0,22
	.word	140
	.byte	3,0,22
	.word	206
	.byte	23
	.word	224
	.byte	3,0,22
	.word	239
	.byte	23
	.word	253
	.byte	23
	.word	266
	.byte	3,0,22
	.word	661
	.byte	23
	.word	689
	.byte	3,0,22
	.word	1426
	.byte	23
	.word	1466
	.byte	23
	.word	1484
	.byte	3,0,22
	.word	1504
	.byte	23
	.word	1542
	.byte	23
	.word	1560
	.byte	3,0,22
	.word	1580
	.byte	23
	.word	1631
	.byte	3,0,22
	.word	8632
	.byte	23
	.word	8659
	.byte	23
	.word	8673
	.byte	16,24
	.word	9447
	.byte	23
	.word	9475
	.byte	23
	.word	9489
	.byte	23
	.word	9507
	.byte	25
	.word	9523
	.byte	0,3,0,0,22
	.word	8695
	.byte	23
	.word	8721
	.byte	23
	.word	8735
	.byte	16,24
	.word	9447
	.byte	23
	.word	9475
	.byte	23
	.word	9489
	.byte	23
	.word	9507
	.byte	25
	.word	9523
	.byte	0,3,0,0,22
	.word	8882
	.byte	23
	.word	8914
	.byte	23
	.word	8928
	.byte	23
	.word	8946
	.byte	3,0,22
	.word	9248
	.byte	23
	.word	9281
	.byte	23
	.word	9295
	.byte	23
	.word	9313
	.byte	23
	.word	9327
	.byte	3,0,22
	.word	9447
	.byte	23
	.word	9475
	.byte	23
	.word	9489
	.byte	23
	.word	9507
	.byte	3,0,22
	.word	12263
	.byte	23
	.word	12297
	.byte	3,0,22
	.word	12315
	.byte	23
	.word	12351
	.byte	3,0,22
	.word	19336
	.byte	23
	.word	19376
	.byte	23
	.word	19390
	.byte	3,0,22
	.word	20024
	.byte	23
	.word	20057
	.byte	23
	.word	20070
	.byte	23
	.word	20082
	.byte	23
	.word	20099
	.byte	23
	.word	20117
	.byte	3,0,22
	.word	20150
	.byte	23
	.word	20192
	.byte	3,0,22
	.word	20209
	.byte	23
	.word	20251
	.byte	3,0,22
	.word	20280
	.byte	23
	.word	20322
	.byte	23
	.word	20336
	.byte	3,0,22
	.word	20411
	.byte	3,0,22
	.word	20445
	.byte	3,0,22
	.word	20487
	.byte	23
	.word	20528
	.byte	3,0,22
	.word	20547
	.byte	23
	.word	20602
	.byte	3,0,22
	.word	20621
	.byte	23
	.word	20661
	.byte	23
	.word	20678
	.byte	3,0,22
	.word	20704
	.byte	3,0,17,9,191,1,9,2,18
	.byte	'IfxMultican_Status_ok',0,0,18
	.byte	'IfxMultican_Status_notInitialised',0,1,18
	.byte	'IfxMultican_Status_wrongParam',0,2,18
	.byte	'IfxMultican_Status_wrongPin',0,4,18
	.byte	'IfxMultican_Status_busHeavy',0,8,18
	.byte	'IfxMultican_Status_busOff',0,16,18
	.byte	'IfxMultican_Status_notSentBusy',0,32,18
	.byte	'IfxMultican_Status_receiveEmpty',0,192,0,18
	.byte	'IfxMultican_Status_messageLost',0,128,1,18
	.byte	'IfxMultican_Status_newData',0,128,2,18
	.byte	'IfxMultican_Status_newDataButOneLost',0,128,3,0,20,22,191,6,9,4,12
	.byte	'mcan',0
	.word	19230
	.byte	4,2,35,0,0,6
	.word	42830
	.byte	17,9,69,9,1,18
	.byte	'IfxMultican_ClockSelect_noClock',0,0,18
	.byte	'IfxMultican_ClockSelect_fclc',0,1,18
	.byte	'IfxMultican_ClockSelect_fosc0',0,2,18
	.byte	'IfxMultican_ClockSelect_fErayPll',0,4,0,17,23,49,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,0,20,22,147,6,9,4,12
	.byte	'priority',0
	.word	856
	.byte	2,2,35,0,12
	.byte	'typeOfService',0
	.word	42994
	.byte	1,2,35,2,0,14,64
	.word	43035
	.byte	15,15,0
.L83:
	.byte	20,22,198,6,9,76,12
	.byte	'module',0
	.word	19230
	.byte	4,2,35,0,12
	.byte	'clockSelect',0
	.word	42856
	.byte	1,2,35,4,12
	.byte	'moduleFreq',0
	.word	20695
	.byte	4,2,35,6,12
	.byte	'nodePointer',0
	.word	43083
	.byte	64,2,35,10,0,21
	.word	43092
	.byte	6
	.word	43177
	.byte	26
	.byte	'IfxMultican_Can_initModule',0,22,178,7,31
	.word	42471
	.byte	1,1,1,1,8
	.byte	'mcan',0,22,178,7,75
	.word	42851
	.byte	8
	.byte	'config',0,22,178,7,111
	.word	43182
	.byte	0,6
	.word	43092
	.byte	27
	.byte	'IfxMultican_Can_initModuleConfig',0,22,188,7,17,1,1,1,1,8
	.byte	'config',0,22,188,7,74
	.word	43258
	.byte	8
	.byte	'mcan',0,22,188,7,91
	.word	19230
	.byte	0,20,22,177,6,9,12,12
	.byte	'mcan',0
	.word	19230
	.byte	4,2,35,0,12
	.byte	'node',0
	.word	12258
	.byte	4,2,35,4,12
	.byte	'nodeId',0
	.word	19235
	.byte	1,2,35,8,12
	.byte	'fastNode',0
	.word	305
	.byte	1,2,35,9,0,6
	.word	43336
	.byte	20,22,251,5,9,20,12
	.byte	'nominalBaudrate',0
	.word	19406
	.byte	4,2,35,0,12
	.byte	'nominalSynchJumpWidth',0
	.word	856
	.byte	2,2,35,4,12
	.byte	'nominalSamplePoint',0
	.word	856
	.byte	2,2,35,6,12
	.byte	'fastBaudrate',0
	.word	19406
	.byte	4,2,35,8,12
	.byte	'fastSynchJumpWidth',0
	.word	856
	.byte	2,2,35,12,12
	.byte	'fastSamplePoint',0
	.word	856
	.byte	2,2,35,14,12
	.byte	'loopDelayOffset',0
	.word	856
	.byte	2,2,35,16,0,20,7,149,1,9,8,12
	.byte	'port',0
	.word	8627
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	305
	.byte	1,2,35,4,0,17,25,94,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,20,24,39,15,20,12
	.byte	'module',0
	.word	19230
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	19235
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	43640
	.byte	1,2,35,16,0,21
	.word	43758
	.byte	6
	.word	43825
	.byte	20,24,48,15,20,12
	.byte	'module',0
	.word	19230
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	19235
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	9031
	.byte	1,2,35,16,0,21
	.word	43835
	.byte	6
	.word	43902
	.byte	17,11,74,9,1,18
	.byte	'IfxMultican_SrcId_0',0,0,18
	.byte	'IfxMultican_SrcId_1',0,1,18
	.byte	'IfxMultican_SrcId_2',0,2,18
	.byte	'IfxMultican_SrcId_3',0,3,18
	.byte	'IfxMultican_SrcId_4',0,4,18
	.byte	'IfxMultican_SrcId_5',0,5,18
	.byte	'IfxMultican_SrcId_6',0,6,18
	.byte	'IfxMultican_SrcId_7',0,7,18
	.byte	'IfxMultican_SrcId_8',0,8,18
	.byte	'IfxMultican_SrcId_9',0,9,18
	.byte	'IfxMultican_SrcId_10',0,10,18
	.byte	'IfxMultican_SrcId_11',0,11,18
	.byte	'IfxMultican_SrcId_12',0,12,18
	.byte	'IfxMultican_SrcId_13',0,13,18
	.byte	'IfxMultican_SrcId_14',0,14,18
	.byte	'IfxMultican_SrcId_15',0,15,0,20,22,155,6,9,2,12
	.byte	'enabled',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'srcId',0
	.word	43912
	.byte	1,2,35,1,0
.L86:
	.byte	20,22,237,6,9,64,12
	.byte	'module',0
	.word	19230
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	19235
	.byte	1,2,35,4,12
	.byte	'analyzerMode',0
	.word	305
	.byte	1,2,35,5,12
	.byte	'loopBackMode',0
	.word	305
	.byte	1,2,35,6,12
	.byte	'baudrate',0
	.word	19406
	.byte	4,2,35,8,12
	.byte	'samplePoint',0
	.word	856
	.byte	2,2,35,12,12
	.byte	'synchJumpWidth',0
	.word	856
	.byte	2,2,35,14,12
	.byte	'flexibleDataRate',0
	.word	305
	.byte	1,2,35,16,12
	.byte	'fdConfig',0
	.word	43410
	.byte	20,2,35,20,12
	.byte	'rxPin',0
	.word	43830
	.byte	4,2,35,40,12
	.byte	'rxPinMode',0
	.word	8757
	.byte	1,2,35,44,12
	.byte	'txPin',0
	.word	43907
	.byte	4,2,35,48,12
	.byte	'txPinMode',0
	.word	8962
	.byte	1,2,35,52,12
	.byte	'errorWarningLevel',0
	.word	305
	.byte	1,2,35,53,12
	.byte	'transferInterrupt',0
	.word	44276
	.byte	2,2,35,54,12
	.byte	'lastErrorCodeInterrupt',0
	.word	44276
	.byte	2,2,35,56,12
	.byte	'alertInterrupt',0
	.word	44276
	.byte	2,2,35,58,12
	.byte	'frameCounterInterrupt',0
	.word	44276
	.byte	2,2,35,60,12
	.byte	'timerInterrupt',0
	.word	44276
	.byte	2,2,35,62,0,21
	.word	44315
	.byte	6
	.word	44738
	.byte	26
	.byte	'IfxMultican_Can_Node_init',0,22,250,7,31
	.word	42471
	.byte	1,1,1,1,8
	.byte	'node',0,22,250,7,79
	.word	43405
	.byte	8
	.byte	'config',0,22,250,7,119
	.word	44743
	.byte	0,6
	.word	44315
	.byte	27
	.byte	'IfxMultican_Can_Node_initConfig',0,22,132,8,17,1,1,1,1,8
	.byte	'config',0,22,132,8,77
	.word	44818
	.byte	8
	.byte	'mcan',0,22,132,8,102
	.word	42851
	.byte	0,20,22,208,6,9,16,12
	.byte	'node',0
	.word	43405
	.byte	4,2,35,0,12
	.byte	'msgObjId',0
	.word	20268
	.byte	4,2,35,4,12
	.byte	'msgObjCount',0
	.word	856
	.byte	2,2,35,8,12
	.byte	'fifoPointer',0
	.word	20268
	.byte	4,2,35,10,0,6
	.word	44895
	.byte	20,22,163,6,9,16,10
	.byte	'singleDataTransfer',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'singleTransmitTrial',0,1
	.word	305
	.byte	1,6,2,35,0,12
	.byte	'messageLen',0
	.word	19427
	.byte	1,2,35,1,10
	.byte	'extendedFrame',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'matchingId',0,1
	.word	305
	.byte	1,6,2,35,2,12
	.byte	'topMsgObjId',0
	.word	20268
	.byte	4,2,35,4,12
	.byte	'bottomMsgObjId',0
	.word	20268
	.byte	4,2,35,8,10
	.byte	'fastBitRate',0,1
	.word	305
	.byte	1,7,2,35,12,0,17,9,102,9,1,18
	.byte	'IfxMultican_Frame_receive',0,0,18
	.byte	'IfxMultican_Frame_transmit',0,1,18
	.byte	'IfxMultican_Frame_remoteRequest',0,2,18
	.byte	'IfxMultican_Frame_remoteAnswer',0,3,0,17,9,174,1,9,1,18
	.byte	'IfxMultican_Priority_ListOrder',0,1,18
	.byte	'IfxMultican_Priority_CAN_ID',0,2,0,20,22,136,6,9,6,10
	.byte	'copyDataLengthCode',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'copyData',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'copyId',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'enableTransmit',0,1
	.word	305
	.byte	1,4,2,35,0,12
	.byte	'gatewayDstObjId',0
	.word	20268
	.byte	4,2,35,2,0
.L90:
	.byte	20,22,218,6,9,56,12
	.byte	'node',0
	.word	43405
	.byte	4,2,35,0,12
	.byte	'msgObjId',0
	.word	20268
	.byte	4,2,35,4,12
	.byte	'msgObjCount',0
	.word	856
	.byte	2,2,35,8,12
	.byte	'control',0
	.word	44981
	.byte	16,2,35,12,12
	.byte	'frame',0
	.word	45184
	.byte	1,2,35,28,12
	.byte	'acceptanceMask',0
	.word	19406
	.byte	4,2,35,30,12
	.byte	'messageId',0
	.word	19406
	.byte	4,2,35,34,12
	.byte	'priority',0
	.word	45314
	.byte	1,2,35,38,12
	.byte	'rxInterrupt',0
	.word	44276
	.byte	2,2,35,40,12
	.byte	'txInterrupt',0
	.word	44276
	.byte	2,2,35,42,10
	.byte	'gatewayTransfers',0,1
	.word	305
	.byte	1,7,2,35,44,12
	.byte	'gatewayConfig',0
	.word	45384
	.byte	6,2,35,46,12
	.byte	'firstSlaveObjId',0
	.word	20268
	.byte	4,2,35,52,0,21
	.word	45510
	.byte	6
	.word	45781
	.byte	26
	.byte	'IfxMultican_Can_MsgObj_init',0,22,245,8,31
	.word	42471
	.byte	1,1,1,1,8
	.byte	'msgObj',0,22,245,8,83
	.word	44976
	.byte	8
	.byte	'config',0,22,245,8,127
	.word	45786
	.byte	0,6
	.word	45510
	.byte	27
	.byte	'IfxMultican_Can_MsgObj_initConfig',0,22,255,8,17,1,1,1,1,8
	.byte	'config',0,22,255,8,81
	.word	45865
	.byte	8
	.byte	'node',0,22,255,8,111
	.word	43405
	.byte	0,26
	.byte	'IfxMultican_Can_MsgObj_readMessage',0,22,158,9,31
	.word	42471
	.byte	1,1,1,1,8
	.byte	'msgObj',0,22,158,9,90
	.word	44976
	.byte	8
	.byte	'msg',0,22,158,9,119
	.word	20019
	.byte	0,22
	.word	31768
	.byte	23
	.word	31815
	.byte	23
	.word	31828
	.byte	3,0,22
	.word	31849
	.byte	23
	.word	31888
	.byte	23
	.word	31901
	.byte	3,0,22
	.word	31922
	.byte	23
	.word	31966
	.byte	23
	.word	31979
	.byte	23
	.word	31998
	.byte	3,0,22
	.word	32027
	.byte	23
	.word	32066
	.byte	23
	.word	32079
	.byte	23
	.word	32098
	.byte	3,0,22
	.word	32117
	.byte	23
	.word	32156
	.byte	23
	.word	32169
	.byte	23
	.word	32188
	.byte	3,0,22
	.word	32213
	.byte	23
	.word	32250
	.byte	23
	.word	32263
	.byte	3,0,22
	.word	32284
	.byte	23
	.word	32331
	.byte	23
	.word	32344
	.byte	3,0,22
	.word	32365
	.byte	23
	.word	32404
	.byte	23
	.word	32417
	.byte	3,0,22
	.word	32438
	.byte	23
	.word	32471
	.byte	23
	.word	32484
	.byte	3,0,22
	.word	37410
	.byte	23
	.word	37446
	.byte	3,0,22
	.word	37462
	.byte	23
	.word	37496
	.byte	23
	.word	37510
	.byte	3,0,22
	.word	37526
	.byte	23
	.word	37565
	.byte	3,0,22
	.word	37795
	.byte	23
	.word	37824
	.byte	3,0,22
	.word	37840
	.byte	23
	.word	37880
	.byte	23
	.word	37894
	.byte	3,0,22
	.word	38255
	.byte	23
	.word	38298
	.byte	23
	.word	38312
	.byte	23
	.word	38331
	.byte	3,0,22
	.word	38350
	.byte	23
	.word	38393
	.byte	23
	.word	38407
	.byte	3,0,22
	.word	38430
	.byte	23
	.word	38459
	.byte	3,0,20,26,39,9,4,10
	.byte	'G_SEL_DISP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'RESEVED',0,4
	.word	19406
	.byte	28,0,2,35,0,0,20,26,45,9,4,10
	.byte	'RESERVED',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'BRAKE_ACT',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'THROTTLE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ACC_PEDAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RESERVED2',0,1
	.word	305
	.byte	8,0,2,35,3,0,20,26,54,9,4,10
	.byte	'RESERVED',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'RPM_LOW',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'RPM_HIGH',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RESERVED2',0,1
	.word	305
	.byte	8,0,2,35,3,0,20,26,62,9,4,10
	.byte	'RESERVED',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'VS',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'RESERVED2',0,1
	.word	305
	.byte	8,0,2,35,3,0
.L127:
	.byte	11,26,69,9,4,12
	.byte	'cgw_pc5_high',0
	.word	46311
	.byte	4,2,35,0,12
	.byte	'ems_329_high',0
	.word	46358
	.byte	4,2,35,0,12
	.byte	'ems_316_low',0
	.word	46467
	.byte	4,2,35,0,12
	.byte	'ems_316_high',0
	.word	46553
	.byte	4,2,35,0,12
	.byte	'byte4',0
	.word	19406
	.byte	4,2,35,0,0,22
	.word	41910
	.byte	23
	.word	41933
	.byte	3,0,22
	.word	41948
	.byte	23
	.word	41980
	.byte	16,24
	.word	20704
	.byte	25
	.word	20742
	.byte	0,3,0,0,22
	.word	41997
	.byte	23
	.word	42025
	.byte	3,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,27,1,1
	.word	46771
	.byte	28
	.byte	'__size_t',0,27,1,1
	.word	282
	.byte	28
	.byte	'__ptrdiff_t',0,27,1,1
	.word	298
	.byte	29,1,6
	.word	46839
	.byte	28
	.byte	'__codeptr',0,27,1,1
	.word	46841
	.byte	28
	.byte	'__intptr_t',0,27,1,1
	.word	298
	.byte	28
	.byte	'__uintptr_t',0,27,1,1
	.word	282
	.byte	28
	.byte	'_iob_flag_t',0,28,82,25
	.word	856
	.byte	28
	.byte	'uint8',0,29,89,24
	.word	305
	.byte	28
	.byte	'sint16',0,29,90,24
	.word	46771
	.byte	28
	.byte	'uint16',0,29,91,24
	.word	856
	.byte	28
	.byte	'sint32',0,29,92,24
	.word	20268
	.byte	28
	.byte	'uint32',0,29,93,24
	.word	19406
	.byte	28
	.byte	'float32',0,29,94,24
	.word	20695
	.byte	28
	.byte	'boolean',0,29,104,24
	.word	305
	.byte	4
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,25,36,28
	.word	47029
	.byte	28
	.byte	'uint64',0,25,37,28
	.word	169
	.byte	28
	.byte	'pvoid',0,25,40,28
	.word	201
	.byte	28
	.byte	'Ifx_TickTime',0,25,43,28
	.word	47029
	.byte	28
	.byte	'Ifx_SizeT',0,25,56,16
	.word	46771
	.byte	28
	.byte	'Ifx_Priority',0,25,67,16
	.word	856
	.byte	17,25,80,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0,28
	.byte	'Ifx_ActiveState',0,25,84,3
	.word	47150
	.byte	17,25,86,9,1,18
	.byte	'Ifx_ParityMode_even',0,0,18
	.byte	'Ifx_ParityMode_odd',0,1,0,28
	.byte	'Ifx_ParityMode',0,25,90,3
	.word	47225
	.byte	28
	.byte	'Ifx_RxSel',0,25,104,3
	.word	43640
	.byte	28
	.byte	'IfxMultican_NodeId',0,11,70,3
	.word	19235
	.byte	28
	.byte	'IfxMultican_SrcId',0,11,92,3
	.word	43912
	.byte	28
	.byte	'IfxSrc_Tos',0,23,53,3
	.word	42994
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	322
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	612
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,86,25,12,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	47434
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,4,91,3
	.word	47493
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,94,25,4,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	47521
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,4,97,3
	.word	47558
	.byte	14,64
	.word	612
	.byte	15,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,100,25,64,12
	.byte	'INT',0
	.word	47586
	.byte	64,2,35,0,0,13
	.word	47595
	.byte	28
	.byte	'Ifx_SRC_CAN',0,4,103,3
	.word	47627
	.byte	14,32
	.word	612
	.byte	15,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,4,106,25,32,12
	.byte	'INT',0
	.word	47652
	.byte	32,2,35,0,0,13
	.word	47661
	.byte	28
	.byte	'Ifx_SRC_CAN1',0,4,109,3
	.word	47694
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	47720
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	47792
	.byte	14,8
	.word	612
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,12
	.byte	'SR',0
	.word	47818
	.byte	8,2,35,0,0,13
	.word	47827
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	47863
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,4,127,25,32,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	21300
	.byte	28,2,35,4,0,13
	.word	47893
	.byte	28
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	47947
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,4,134,1,25,80,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	4816
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	47586
	.byte	64,2,35,16,0,13
	.word	47973
	.byte	28
	.byte	'Ifx_SRC_DMA',0,4,139,1,3
	.word	48038
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,142,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	48064
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,4,145,1,3
	.word	48097
	.byte	9
	.byte	'_Ifx_SRC_ERAY',0,4,148,1,25,80,12
	.byte	'INT',0
	.word	47818
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	47818
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	47818
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	47818
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	612
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	612
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	15304
	.byte	40,2,35,40,0,13
	.word	48124
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,4,157,1,3
	.word	48251
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,160,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	48278
	.byte	28
	.byte	'Ifx_SRC_ETH',0,4,163,1,3
	.word	48310
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,4,166,1,25,8,12
	.byte	'WUT',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	612
	.byte	4,2,35,4,0,13
	.word	48336
	.byte	28
	.byte	'Ifx_SRC_EVR',0,4,170,1,3
	.word	48383
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,4,173,1,25,12,12
	.byte	'DONE',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	48409
	.byte	28
	.byte	'Ifx_SRC_FFT',0,4,178,1,3
	.word	48469
	.byte	14,240,11
	.word	305
	.byte	15,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,181,1,25,128,12,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	48495
	.byte	240,11,2,35,16,0,13
	.word	48506
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,4,188,1,3
	.word	48602
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,191,1,25,48,12
	.byte	'CIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	612
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	3847
	.byte	24,2,35,24,0,13
	.word	48629
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,4,200,1,3
	.word	48746
	.byte	14,236,2
	.word	305
	.byte	15,235,2,0,14,32
	.word	47652
	.byte	15,0,0,14,224,7
	.word	305
	.byte	15,223,7,0,14,64
	.word	47652
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_GTM',0,4,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	48774
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	4816
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	48785
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	48794
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	48805
	.byte	64,3,35,128,11,0,13
	.word	48814
	.byte	28
	.byte	'Ifx_SRC_GTM',0,4,212,1,3
	.word	48961
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,215,1,25,8,12
	.byte	'HSM',0
	.word	47818
	.byte	8,2,35,0,0,13
	.word	48987
	.byte	28
	.byte	'Ifx_SRC_HSM',0,4,218,1,3
	.word	49020
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,221,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	49046
	.byte	28
	.byte	'Ifx_SRC_LMU',0,4,224,1,3
	.word	49078
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,227,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	49104
	.byte	28
	.byte	'Ifx_SRC_PMU',0,4,230,1,3
	.word	49136
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,233,1,25,24,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	612
	.byte	4,2,35,20,0,13
	.word	49162
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,4,241,1,3
	.word	49255
	.byte	14,16
	.word	612
	.byte	15,3,0,9
	.byte	'_Ifx_SRC_SCU',0,4,244,1,25,20,12
	.byte	'DTS',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	49282
	.byte	16,2,35,4,0,13
	.word	49291
	.byte	28
	.byte	'Ifx_SRC_SCU',0,4,248,1,3
	.word	49337
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,4,251,1,25,16,12
	.byte	'SR',0
	.word	49282
	.byte	16,2,35,0,0,13
	.word	49363
	.byte	28
	.byte	'Ifx_SRC_SENT',0,4,254,1,3
	.word	49396
	.byte	14,12
	.word	612
	.byte	15,2,0,9
	.byte	'_Ifx_SRC_SMU',0,4,129,2,25,12,12
	.byte	'SR',0
	.word	49423
	.byte	12,2,35,0,0,13
	.word	49432
	.byte	28
	.byte	'Ifx_SRC_SMU',0,4,132,2,3
	.word	49464
	.byte	14,88
	.word	305
	.byte	15,87,0,9
	.byte	'_Ifx_SRC_STM',0,4,135,2,25,96,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	49490
	.byte	88,2,35,8,0,13
	.word	49499
	.byte	28
	.byte	'Ifx_SRC_STM',0,4,140,2,3
	.word	49565
	.byte	14,176,2
	.word	305
	.byte	15,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,4,143,2,25,192,2,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	49591
	.byte	176,2,2,35,16,0,13
	.word	49602
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,4,150,2,3
	.word	49700
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,153,2,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	49729
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,4,159,2,3
	.word	49803
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,162,2,25,4,12
	.byte	'SRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	49831
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,4,165,2,3
	.word	49865
	.byte	14,24
	.word	47434
	.byte	15,1,0,13
	.word	49892
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	49901
	.byte	24,2,35,0,0,13
	.word	49906
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,4,181,2,3
	.word	49946
	.byte	13
	.word	47521
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,184,2,25,4,12
	.byte	'SPB',0
	.word	49976
	.byte	4,2,35,0,0,13
	.word	49981
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,4,187,2,3
	.word	50015
	.byte	14,64
	.word	47595
	.byte	15,0,0,13
	.word	50042
	.byte	14,32
	.word	47661
	.byte	15,0,0,13
	.word	50056
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,190,2,25,96,12
	.byte	'CAN',0
	.word	50051
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	50065
	.byte	32,2,35,64,0,13
	.word	50070
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,4,194,2,3
	.word	50118
	.byte	14,32
	.word	47720
	.byte	15,1,0,13
	.word	50145
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,197,2,25,32,12
	.byte	'CCU6',0
	.word	50154
	.byte	32,2,35,0,0,13
	.word	50159
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,4,200,2,3
	.word	50195
	.byte	13
	.word	47827
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	50223
	.byte	8,2,35,0,0,13
	.word	50228
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,4,206,2,3
	.word	50272
	.byte	14,32
	.word	47893
	.byte	15,0,0,13
	.word	50304
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,209,2,25,32,12
	.byte	'CPU',0
	.word	50313
	.byte	32,2,35,0,0,13
	.word	50318
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,4,212,2,3
	.word	50352
	.byte	14,80
	.word	47973
	.byte	15,0,0,13
	.word	50379
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,215,2,25,80,12
	.byte	'DMA',0
	.word	50388
	.byte	80,2,35,0,0,13
	.word	50393
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,4,218,2,3
	.word	50427
	.byte	14,4
	.word	48064
	.byte	15,0,0,13
	.word	50454
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,221,2,25,4,12
	.byte	'EMEM',0
	.word	50463
	.byte	4,2,35,0,0,13
	.word	50468
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,4,224,2,3
	.word	50504
	.byte	14,80
	.word	48124
	.byte	15,0,0,13
	.word	50532
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,227,2,25,80,12
	.byte	'ERAY',0
	.word	50541
	.byte	80,2,35,0,0,13
	.word	50546
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,4,230,2,3
	.word	50582
	.byte	14,4
	.word	48278
	.byte	15,0,0,13
	.word	50610
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,233,2,25,4,12
	.byte	'ETH',0
	.word	50619
	.byte	4,2,35,0,0,13
	.word	50624
	.byte	28
	.byte	'Ifx_SRC_GETH',0,4,236,2,3
	.word	50658
	.byte	14,8
	.word	48336
	.byte	15,0,0,13
	.word	50685
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,4,239,2,25,8,12
	.byte	'EVR',0
	.word	50694
	.byte	8,2,35,0,0,13
	.word	50699
	.byte	28
	.byte	'Ifx_SRC_GEVR',0,4,242,2,3
	.word	50733
	.byte	14,12
	.word	48409
	.byte	15,0,0,13
	.word	50760
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,4,245,2,25,12,12
	.byte	'FFT',0
	.word	50769
	.byte	12,2,35,0,0,13
	.word	50774
	.byte	28
	.byte	'Ifx_SRC_GFFT',0,4,248,2,3
	.word	50808
	.byte	14,128,12
	.word	48506
	.byte	15,0,0,13
	.word	50835
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	50845
	.byte	128,12,2,35,0,0,13
	.word	50850
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,4,254,2,3
	.word	50888
	.byte	14,48
	.word	48629
	.byte	15,0,0,13
	.word	50916
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,129,3,25,48,12
	.byte	'GPT12',0
	.word	50925
	.byte	48,2,35,0,0,13
	.word	50930
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,4,132,3,3
	.word	50968
	.byte	14,192,11
	.word	48814
	.byte	15,0,0,13
	.word	50997
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,135,3,25,192,11,12
	.byte	'GTM',0
	.word	51007
	.byte	192,11,2,35,0,0,13
	.word	51012
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,4,138,3,3
	.word	51048
	.byte	14,8
	.word	48987
	.byte	15,0,0,13
	.word	51075
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,141,3,25,8,12
	.byte	'HSM',0
	.word	51084
	.byte	8,2,35,0,0,13
	.word	51089
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,4,144,3,3
	.word	51123
	.byte	14,4
	.word	49046
	.byte	15,0,0,13
	.word	51150
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,147,3,25,4,12
	.byte	'LMU',0
	.word	51159
	.byte	4,2,35,0,0,13
	.word	51164
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,4,150,3,3
	.word	51198
	.byte	14,8
	.word	49104
	.byte	15,1,0,13
	.word	51225
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,153,3,25,8,12
	.byte	'PMU',0
	.word	51234
	.byte	8,2,35,0,0,13
	.word	51239
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,4,156,3,3
	.word	51273
	.byte	14,96
	.word	49162
	.byte	15,3,0,13
	.word	51300
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,159,3,25,96,12
	.byte	'QSPI',0
	.word	51309
	.byte	96,2,35,0,0,13
	.word	51314
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,4,162,3,3
	.word	51350
	.byte	13
	.word	49291
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,165,3,25,20,12
	.byte	'SCU',0
	.word	51378
	.byte	20,2,35,0,0,13
	.word	51383
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,4,168,3,3
	.word	51417
	.byte	14,16
	.word	49363
	.byte	15,0,0,13
	.word	51444
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,171,3,25,16,12
	.byte	'SENT',0
	.word	51453
	.byte	16,2,35,0,0,13
	.word	51458
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,4,174,3,3
	.word	51494
	.byte	14,12
	.word	49432
	.byte	15,0,0,13
	.word	51522
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,177,3,25,12,12
	.byte	'SMU',0
	.word	51531
	.byte	12,2,35,0,0,13
	.word	51536
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,4,180,3,3
	.word	51570
	.byte	14,96
	.word	49499
	.byte	15,0,0,13
	.word	51597
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,183,3,25,96,12
	.byte	'STM',0
	.word	51606
	.byte	96,2,35,0,0,13
	.word	51611
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,4,186,3,3
	.word	51645
	.byte	14,64
	.word	49729
	.byte	15,3,0,13
	.word	51672
	.byte	14,224,1
	.word	305
	.byte	15,223,1,0,14,192,2
	.word	49602
	.byte	15,0,0,13
	.word	51697
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,189,3,25,224,4,12
	.byte	'G',0
	.word	51681
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	51686
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	51707
	.byte	192,2,3,35,160,2,0,13
	.word	51712
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,4,194,3,3
	.word	51782
	.byte	13
	.word	49831
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,197,3,25,4,12
	.byte	'XBAR',0
	.word	51810
	.byte	4,2,35,0,0,13
	.word	51815
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,4,200,3,3
	.word	51851
	.byte	28
	.byte	'Ifx_CAN_ACCEN0_Bits',0,10,83,3
	.word	13423
	.byte	28
	.byte	'Ifx_CAN_ACCEN1_Bits',0,10,89,3
	.word	13334
	.byte	28
	.byte	'Ifx_CAN_CLC_Bits',0,10,99,3
	.word	12369
	.byte	28
	.byte	'Ifx_CAN_FDR_Bits',0,10,108,3
	.word	12646
	.byte	28
	.byte	'Ifx_CAN_ID_Bits',0,10,116,3
	.word	12525
	.byte	28
	.byte	'Ifx_CAN_KRST0_Bits',0,10,124,3
	.word	13212
	.byte	28
	.byte	'Ifx_CAN_KRST1_Bits',0,10,131,1,3
	.word	13109
	.byte	28
	.byte	'Ifx_CAN_KRSTCLR_Bits',0,10,138,1,3
	.word	13003
	.byte	28
	.byte	'Ifx_CAN_LIST_Bits',0,10,148,1,3
	.word	13992
	.byte	28
	.byte	'Ifx_CAN_MCR_Bits',0,10,159,1,3
	.word	14630
	.byte	28
	.byte	'Ifx_CAN_MECR_Bits',0,10,174,1,3
	.word	14916
	.byte	28
	.byte	'Ifx_CAN_MESTAT_Bits',0,10,183,1,3
	.word	15163
	.byte	28
	.byte	'Ifx_CAN_MITR_Bits',0,10,190,1,3
	.word	14813
	.byte	28
	.byte	'Ifx_CAN_MO_AMR_Bits',0,10,198,1,3
	.word	16514
	.byte	28
	.byte	'Ifx_CAN_MO_AR_Bits',0,10,206,1,3
	.word	17400
	.byte	28
	.byte	'Ifx_CAN_MO_CTR_Bits',0,10,237,1,3
	.word	17677
	.byte	28
	.byte	'Ifx_CAN_MO_DATAH_Bits',0,10,246,1,3
	.word	17101
	.byte	28
	.byte	'Ifx_CAN_MO_DATAL_Bits',0,10,255,1,3
	.word	16802
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA0_Bits',0,10,136,2,3
	.word	15339
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA1_Bits',0,10,145,2,3
	.word	15915
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA2_Bits',0,10,154,2,3
	.word	16212
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA3_Bits',0,10,163,2,3
	.word	16635
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA4_Bits',0,10,172,2,3
	.word	16932
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA5_Bits',0,10,181,2,3
	.word	17231
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA6_Bits',0,10,190,2,3
	.word	17511
	.byte	28
	.byte	'Ifx_CAN_MO_FCR_Bits',0,10,215,2,3
	.word	15470
	.byte	28
	.byte	'Ifx_CAN_MO_FGPR_Bits',0,10,224,2,3
	.word	16046
	.byte	28
	.byte	'Ifx_CAN_MO_IPR_Bits',0,10,233,2,3
	.word	16343
	.byte	28
	.byte	'Ifx_CAN_MO_STAT_Bits',0,10,253,2,3
	.word	18269
	.byte	28
	.byte	'Ifx_CAN_MSID_Bits',0,10,132,3,3
	.word	14255
	.byte	28
	.byte	'Ifx_CAN_MSIMASK_Bits',0,10,138,3,3
	.word	14369
	.byte	28
	.byte	'Ifx_CAN_MSPND_Bits',0,10,144,3,3
	.word	14155
	.byte	28
	.byte	'Ifx_CAN_N_BTEVR_Bits',0,10,158,3,3
	.word	10363
	.byte	28
	.byte	'Ifx_CAN_N_BTR_Bits',0,10,169,3,3
	.word	10603
	.byte	28
	.byte	'Ifx_CAN_N_CR_Bits',0,10,185,3,3
	.word	9525
	.byte	28
	.byte	'Ifx_CAN_N_ECNT_Bits',0,10,196,3,3
	.word	10808
	.byte	28
	.byte	'Ifx_CAN_N_FBTR_Bits',0,10,206,3,3
	.word	11651
	.byte	28
	.byte	'Ifx_CAN_N_FCR_Bits',0,10,218,3,3
	.word	10981
	.byte	28
	.byte	'Ifx_CAN_N_IPR_Bits',0,10,229,3,3
	.word	10043
	.byte	28
	.byte	'Ifx_CAN_N_PCR_Bits',0,10,238,3,3
	.word	10220
	.byte	28
	.byte	'Ifx_CAN_N_SR_Bits',0,10,255,3,3
	.word	9778
	.byte	28
	.byte	'Ifx_CAN_N_TCCR_Bits',0,10,137,4,3
	.word	11177
	.byte	28
	.byte	'Ifx_CAN_N_TDCR_Bits',0,10,148,4,3
	.word	11810
	.byte	28
	.byte	'Ifx_CAN_N_TRTR_Bits',0,10,158,4,3
	.word	11348
	.byte	28
	.byte	'Ifx_CAN_N_TTTR_Bits',0,10,167,4,3
	.word	11510
	.byte	28
	.byte	'Ifx_CAN_OCS_Bits',0,10,180,4,3
	.word	12797
	.byte	28
	.byte	'Ifx_CAN_PANCTR_Bits',0,10,191,4,3
	.word	14452
	.byte	28
	.byte	'Ifx_CAN_ACCEN0',0,10,204,4,3
	.word	13952
	.byte	28
	.byte	'Ifx_CAN_ACCEN1',0,10,212,4,3
	.word	13383
	.byte	28
	.byte	'Ifx_CAN_CLC',0,10,220,4,3
	.word	12485
	.byte	28
	.byte	'Ifx_CAN_FDR',0,10,228,4,3
	.word	12746
	.byte	28
	.byte	'Ifx_CAN_ID',0,10,236,4,3
	.word	12606
	.byte	28
	.byte	'Ifx_CAN_KRST0',0,10,244,4,3
	.word	13294
	.byte	28
	.byte	'Ifx_CAN_KRST1',0,10,252,4,3
	.word	13172
	.byte	28
	.byte	'Ifx_CAN_KRSTCLR',0,10,132,5,3
	.word	13069
	.byte	28
	.byte	'Ifx_CAN_LIST',0,10,140,5,3
	.word	14106
	.byte	28
	.byte	'Ifx_CAN_MCR',0,10,148,5,3
	.word	14773
	.byte	28
	.byte	'Ifx_CAN_MECR',0,10,156,5,3
	.word	15123
	.byte	28
	.byte	'Ifx_CAN_MESTAT',0,10,164,5,3
	.word	15264
	.byte	28
	.byte	'Ifx_CAN_MITR',0,10,172,5,3
	.word	14876
	.byte	28
	.byte	'Ifx_CAN_MO_AMR',0,10,180,5,3
	.word	16595
	.byte	28
	.byte	'Ifx_CAN_MO_AR',0,10,188,5,3
	.word	17471
	.byte	28
	.byte	'Ifx_CAN_MO_CTR',0,10,196,5,3
	.word	18229
	.byte	28
	.byte	'Ifx_CAN_MO_DATAH',0,10,204,5,3
	.word	17191
	.byte	28
	.byte	'Ifx_CAN_MO_DATAL',0,10,212,5,3
	.word	16892
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA0',0,10,220,5,3
	.word	15430
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA1',0,10,228,5,3
	.word	16006
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA2',0,10,236,5,3
	.word	16303
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA3',0,10,244,5,3
	.word	16726
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA4',0,10,252,5,3
	.word	17023
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA5',0,10,132,6,3
	.word	17322
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA6',0,10,140,6,3
	.word	17602
	.byte	28
	.byte	'Ifx_CAN_MO_FCR',0,10,148,6,3
	.word	15839
	.byte	28
	.byte	'Ifx_CAN_MO_FGPR',0,10,156,6,3
	.word	16135
	.byte	28
	.byte	'Ifx_CAN_MO_IPR',0,10,164,6,3
	.word	16438
	.byte	28
	.byte	'Ifx_CAN_MO_STAT',0,10,172,6,3
	.word	18551
	.byte	28
	.byte	'Ifx_CAN_MSID',0,10,180,6,3
	.word	14320
	.byte	28
	.byte	'Ifx_CAN_MSIMASK',0,10,188,6,3
	.word	14412
	.byte	28
	.byte	'Ifx_CAN_MSPND',0,10,196,6,3
	.word	14197
	.byte	28
	.byte	'Ifx_CAN_N_BTEVR',0,10,204,6,3
	.word	10563
	.byte	28
	.byte	'Ifx_CAN_N_BTR',0,10,212,6,3
	.word	10733
	.byte	28
	.byte	'Ifx_CAN_N_CR',0,10,220,6,3
	.word	9738
	.byte	28
	.byte	'Ifx_CAN_N_ECNT',0,10,228,6,3
	.word	10941
	.byte	28
	.byte	'Ifx_CAN_N_FBTR',0,10,236,6,3
	.word	11770
	.byte	28
	.byte	'Ifx_CAN_N_FCR',0,10,244,6,3
	.word	11137
	.byte	28
	.byte	'Ifx_CAN_N_IPR',0,10,252,6,3
	.word	10180
	.byte	28
	.byte	'Ifx_CAN_N_PCR',0,10,132,7,3
	.word	10323
	.byte	28
	.byte	'Ifx_CAN_N_SR',0,10,140,7,3
	.word	10003
	.byte	28
	.byte	'Ifx_CAN_N_TCCR',0,10,148,7,3
	.word	11308
	.byte	28
	.byte	'Ifx_CAN_N_TDCR',0,10,156,7,3
	.word	11953
	.byte	28
	.byte	'Ifx_CAN_N_TRTR',0,10,164,7,3
	.word	11470
	.byte	28
	.byte	'Ifx_CAN_N_TTTR',0,10,172,7,3
	.word	11611
	.byte	28
	.byte	'Ifx_CAN_OCS',0,10,180,7,3
	.word	12963
	.byte	28
	.byte	'Ifx_CAN_PANCTR',0,10,188,7,3
	.word	14590
	.byte	13
	.word	18625
	.byte	28
	.byte	'Ifx_CAN_MO',0,10,248,7,3
	.word	54352
	.byte	13
	.word	12004
	.byte	28
	.byte	'Ifx_CAN_N',0,10,146,8,3
	.word	54377
	.byte	13
	.word	18742
	.byte	28
	.byte	'Ifx_CAN',0,10,188,8,3
	.word	54401
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	7522
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	7435
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4485
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2538
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3533
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2666
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3313
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	2881
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3096
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,8,200,1,3
	.word	6065
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,8,210,1,3
	.word	6589
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,8,221,1,3
	.word	6239
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,8,232,1,3
	.word	6413
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,8,254,1,3
	.word	7078
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,8,163,2,3
	.word	1967
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,8,173,2,3
	.word	5402
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,8,184,2,3
	.word	5890
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,8,195,2,3
	.word	5549
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,8,206,2,3
	.word	5718
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,8,228,2,3
	.word	6745
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,8,250,2,3
	.word	1651
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,8,135,3,3
	.word	5191
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,8,157,3,3
	.word	4825
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,8,178,3,3
	.word	3856
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,8,199,3,3
	.word	4160
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,8,212,3,3
	.word	8049
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,8,220,3,3
	.word	7482
	.byte	28
	.byte	'Ifx_P_ESR',0,8,228,3,3
	.word	4776
	.byte	28
	.byte	'Ifx_P_ID',0,8,236,3,3
	.word	2617
	.byte	28
	.byte	'Ifx_P_IN',0,8,244,3,3
	.word	3807
	.byte	28
	.byte	'Ifx_P_IOCR0',0,8,252,3,3
	.word	2841
	.byte	28
	.byte	'Ifx_P_IOCR12',0,8,132,4,3
	.word	3493
	.byte	28
	.byte	'Ifx_P_IOCR4',0,8,140,4,3
	.word	3056
	.byte	28
	.byte	'Ifx_P_IOCR8',0,8,148,4,3
	.word	3273
	.byte	28
	.byte	'Ifx_P_OMCR',0,8,156,4,3
	.word	7386
	.byte	28
	.byte	'Ifx_P_OMCR0',0,8,164,4,3
	.word	6199
	.byte	28
	.byte	'Ifx_P_OMCR12',0,8,172,4,3
	.word	6705
	.byte	28
	.byte	'Ifx_P_OMCR4',0,8,180,4,3
	.word	6373
	.byte	28
	.byte	'Ifx_P_OMCR8',0,8,188,4,3
	.word	6549
	.byte	28
	.byte	'Ifx_P_OMR',0,8,196,4,3
	.word	2498
	.byte	28
	.byte	'Ifx_P_OMSR',0,8,204,4,3
	.word	7038
	.byte	28
	.byte	'Ifx_P_OMSR0',0,8,212,4,3
	.word	5509
	.byte	28
	.byte	'Ifx_P_OMSR12',0,8,220,4,3
	.word	6025
	.byte	28
	.byte	'Ifx_P_OMSR4',0,8,228,4,3
	.word	5678
	.byte	28
	.byte	'Ifx_P_OMSR8',0,8,236,4,3
	.word	5850
	.byte	28
	.byte	'Ifx_P_OUT',0,8,244,4,3
	.word	1927
	.byte	28
	.byte	'Ifx_P_PCSR',0,8,252,4,3
	.word	5362
	.byte	28
	.byte	'Ifx_P_PDISC',0,8,132,5,3
	.word	5151
	.byte	28
	.byte	'Ifx_P_PDR0',0,8,140,5,3
	.word	4120
	.byte	28
	.byte	'Ifx_P_PDR1',0,8,148,5,3
	.word	4436
	.byte	13
	.word	8089
	.byte	28
	.byte	'Ifx_P',0,8,193,5,3
	.word	55570
	.byte	17,30,139,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,30,143,10,3
	.word	55590
	.byte	17,30,153,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,30,158,10,3
	.word	55687
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	55809
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	56366
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	56443
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	56579
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	56861
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	57099
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,149,1,3
	.word	57227
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,163,1,3
	.word	57454
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,172,1,3
	.word	57673
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,179,1,3
	.word	57801
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	305
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,193,1,3
	.word	57901
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,196,1,16,4,10
	.byte	'PWD',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	282
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,204,1,3
	.word	58109
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,216,1,3
	.word	58274
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,226,1,3
	.word	58457
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,6,248,1,3
	.word	58611
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,6,134,2,3
	.word	58975
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,137,2,16,4,10
	.byte	'POL',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,6,150,2,3
	.word	59186
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,158,2,3
	.word	59438
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,161,2,16,4,10
	.byte	'ARI',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,166,2,3
	.word	59556
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,176,2,3
	.word	59667
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,186,2,3
	.word	59830
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,201,2,3
	.word	59992
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,212,2,3
	.word	60270
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,222,2,3
	.word	60449
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,232,2,3
	.word	60609
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,244,2,3
	.word	60770
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,134,3,3
	.word	60962
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,147,3,3
	.word	61258
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,164,3,3
	.word	61473
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,175,3,3
	.word	61762
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,178,3,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	305
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	305
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,189,3,3
	.word	61941
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,192,3,16,4,10
	.byte	'STEP',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,6,200,3,3
	.word	62159
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,203,3,16,4,10
	.byte	'FS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,6,223,3,3
	.word	62322
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,6,231,3,3
	.word	62658
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,6,130,4,3
	.word	62765
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,133,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,6,138,4,3
	.word	63217
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,6,148,4,3
	.word	63316
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,157,4,3
	.word	63466
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,160,4,16,4,10
	.byte	'SEED',0,4
	.word	282
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,167,4,3
	.word	63615
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,175,4,3
	.word	63776
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,184,4,3
	.word	63906
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,192,4,3
	.word	64040
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	856
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,6,200,4,3
	.word	64155
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,203,4,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,6,211,4,3
	.word	64266
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	305
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,231,4,3
	.word	64424
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,234,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,6,239,4,3
	.word	64764
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,255,4,3
	.word	64865
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,136,5,3
	.word	65132
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,6,144,5,3
	.word	65268
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,147,5,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,6,154,5,3
	.word	65379
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,6,168,5,3
	.word	65512
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,188,5,3
	.word	65715
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,199,5,3
	.word	66071
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,206,5,3
	.word	66249
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,226,5,3
	.word	66349
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,237,5,3
	.word	66719
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,249,5,3
	.word	66905
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,135,6,3
	.word	67103
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,145,6,3
	.word	67336
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	305
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,174,6,3
	.word	67488
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,185,6,3
	.word	68047
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,6,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,6,196,6,3
	.word	68230
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,226,6,3
	.word	68399
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,242,6,3
	.word	68966
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,6,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,6,250,6,3
	.word	69282
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,135,7,3
	.word	69401
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,149,7,3
	.word	69610
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,175,7,3
	.word	69821
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,178,7,16,4,10
	.byte	'HBT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,182,7,3
	.word	70253
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,198,7,3
	.word	70349
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,206,7,3
	.word	70609
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,218,7,3
	.word	70734
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,228,7,3
	.word	70931
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,238,7,3
	.word	71084
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,248,7,3
	.word	71237
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,130,8,3
	.word	71390
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,139,8,3
	.word	720
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,154,8,3
	.word	878
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,170,8,3
	.word	1122
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,179,8,3
	.word	71645
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,195,8,3
	.word	71771
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,198,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,211,8,3
	.word	72023
	.byte	11,6,219,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55809
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,6,224,8,3
	.word	72242
	.byte	11,6,227,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56366
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,6,232,8,3
	.word	72306
	.byte	11,6,235,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56443
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,6,240,8,3
	.word	72370
	.byte	11,6,243,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56579
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,6,248,8,3
	.word	72435
	.byte	11,6,251,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56861
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,6,128,9,3
	.word	72500
	.byte	11,6,131,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57099
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,6,136,9,3
	.word	72565
	.byte	11,6,139,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57227
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,6,144,9,3
	.word	72630
	.byte	11,6,147,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57454
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,6,152,9,3
	.word	72695
	.byte	11,6,155,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57673
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,6,160,9,3
	.word	72760
	.byte	11,6,163,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57801
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,6,168,9,3
	.word	72825
	.byte	11,6,171,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57901
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,6,176,9,3
	.word	72890
	.byte	11,6,179,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58109
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,6,184,9,3
	.word	72954
	.byte	11,6,187,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58274
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,6,192,9,3
	.word	73018
	.byte	11,6,195,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58457
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,6,200,9,3
	.word	73082
	.byte	11,6,203,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58611
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,6,208,9,3
	.word	73147
	.byte	11,6,211,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58975
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,6,216,9,3
	.word	73209
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59186
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,6,224,9,3
	.word	73271
	.byte	11,6,227,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59438
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,6,232,9,3
	.word	73333
	.byte	11,6,235,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59556
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,6,240,9,3
	.word	73397
	.byte	11,6,243,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59667
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,6,248,9,3
	.word	73462
	.byte	11,6,251,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59830
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,128,10,3
	.word	73528
	.byte	11,6,131,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59992
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,136,10,3
	.word	73596
	.byte	11,6,139,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60270
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,6,144,10,3
	.word	73664
	.byte	11,6,147,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60449
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,6,152,10,3
	.word	73730
	.byte	11,6,155,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60609
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,160,10,3
	.word	73797
	.byte	11,6,163,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60770
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,168,10,3
	.word	73866
	.byte	11,6,171,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60962
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,176,10,3
	.word	73934
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61258
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,184,10,3
	.word	74002
	.byte	11,6,187,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61473
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,6,192,10,3
	.word	74070
	.byte	11,6,195,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61762
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,6,200,10,3
	.word	74135
	.byte	11,6,203,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61941
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,6,208,10,3
	.word	74201
	.byte	11,6,211,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62159
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,6,216,10,3
	.word	74265
	.byte	11,6,219,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62322
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,6,224,10,3
	.word	74326
	.byte	11,6,227,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,6,232,10,3
	.word	74387
	.byte	11,6,235,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62765
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,6,240,10,3
	.word	74447
	.byte	11,6,243,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63217
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,6,248,10,3
	.word	74509
	.byte	11,6,251,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63316
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,6,128,11,3
	.word	74569
	.byte	11,6,131,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63466
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,136,11,3
	.word	74631
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63615
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,144,11,3
	.word	74699
	.byte	11,6,147,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63776
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,152,11,3
	.word	74767
	.byte	11,6,155,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63906
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,6,160,11,3
	.word	74835
	.byte	11,6,163,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64040
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,6,168,11,3
	.word	74900
	.byte	11,6,171,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64155
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,6,176,11,3
	.word	74965
	.byte	11,6,179,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64266
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,6,184,11,3
	.word	75028
	.byte	11,6,187,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64424
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,6,192,11,3
	.word	75089
	.byte	11,6,195,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64764
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,6,200,11,3
	.word	75153
	.byte	11,6,203,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64865
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,6,208,11,3
	.word	75214
	.byte	11,6,211,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65132
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,6,216,11,3
	.word	75278
	.byte	11,6,219,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65268
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,6,224,11,3
	.word	75345
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65379
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,6,232,11,3
	.word	75408
	.byte	11,6,235,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65512
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,6,240,11,3
	.word	75469
	.byte	11,6,243,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65715
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,6,248,11,3
	.word	75531
	.byte	11,6,251,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66071
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,6,128,12,3
	.word	75596
	.byte	11,6,131,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66249
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,6,136,12,3
	.word	75661
	.byte	11,6,139,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66349
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,144,12,3
	.word	75726
	.byte	11,6,147,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66719
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,152,12,3
	.word	75795
	.byte	11,6,155,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66905
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,160,12,3
	.word	75864
	.byte	11,6,163,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67103
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,6,168,12,3
	.word	75933
	.byte	11,6,171,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67336
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,6,176,12,3
	.word	75998
	.byte	11,6,179,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67488
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,6,184,12,3
	.word	76061
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68047
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,6,192,12,3
	.word	76126
	.byte	11,6,195,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68230
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR3',0,6,200,12,3
	.word	76191
	.byte	11,6,203,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68399
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,6,208,12,3
	.word	76256
	.byte	11,6,211,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68966
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,216,12,3
	.word	76322
	.byte	11,6,219,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69282
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWUTCNT',0,6,224,12,3
	.word	76391
	.byte	11,6,227,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69610
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,6,232,12,3
	.word	76458
	.byte	11,6,235,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69401
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,6,240,12,3
	.word	76522
	.byte	11,6,243,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69821
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,6,248,12,3
	.word	76587
	.byte	11,6,251,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70253
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,6,128,13,3
	.word	76652
	.byte	11,6,131,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70349
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,6,136,13,3
	.word	76717
	.byte	11,6,139,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70609
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,6,144,13,3
	.word	76781
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70734
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,6,152,13,3
	.word	76847
	.byte	11,6,155,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70931
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,6,160,13,3
	.word	76911
	.byte	11,6,163,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71084
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,6,168,13,3
	.word	76976
	.byte	11,6,171,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71237
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,6,176,13,3
	.word	77041
	.byte	11,6,179,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71390
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,6,184,13,3
	.word	77106
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,192,13,3
	.word	816
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,200,13,3
	.word	1082
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,208,13,3
	.word	1313
	.byte	11,6,211,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71645
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,6,216,13,3
	.word	77257
	.byte	11,6,219,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71771
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,6,224,13,3
	.word	77324
	.byte	11,6,227,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72023
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,6,232,13,3
	.word	77391
	.byte	13
	.word	1353
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,6,248,13,3
	.word	77456
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,251,13,25,12,12
	.byte	'CON0',0
	.word	77257
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	77324
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	77391
	.byte	4,2,35,8,0,13
	.word	77485
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,6,128,14,3
	.word	77546
	.byte	14,8
	.word	73333
	.byte	15,1,0,14,4
	.word	75998
	.byte	15,0,0,13
	.word	77485
	.byte	14,12
	.word	1353
	.byte	15,0,0,13
	.word	77596
	.byte	14,16
	.word	305
	.byte	15,15,0,14,16
	.word	73147
	.byte	15,3,0,14,16
	.word	74447
	.byte	15,3,0,14,188,1
	.word	305
	.byte	15,187,1,0,14,244,1
	.word	305
	.byte	15,243,1,0,9
	.byte	'_Ifx_SCU',0,6,141,14,25,128,8,12
	.byte	'reserved_0',0
	.word	4476
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	74387
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	75089
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	75933
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	75531
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	75596
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	75661
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	75864
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	75726
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	75795
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	72435
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	72500
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	74265
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	74201
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	72565
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	72630
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	72695
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	72760
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	76587
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2657
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	76458
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	72370
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	76781
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	76522
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2657
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	73730
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	77573
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	73397
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	76847
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	72825
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	3847
	.byte	24,3,35,132,1,12
	.byte	'PDR',0
	.word	75408
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	74569
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	75153
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	75028
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	74509
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	74070
	.byte	4,3,35,176,1,12
	.byte	'reserved_B4',0
	.word	2657
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	73462
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	2657
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	76717
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2657
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	76061
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	76256
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	76322
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	77582
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	4476
	.byte	8,3,35,216,1,12
	.byte	'DTSSTAT',0
	.word	73082
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	72954
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	76126
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2657
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	77591
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	73271
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	77605
	.byte	12,3,35,128,2,12
	.byte	'reserved_10C',0
	.word	3847
	.byte	24,3,35,140,2,12
	.byte	'TRAPSTAT',0
	.word	77106
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	77041
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	76911
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	76976
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	74835
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	2657
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	74900
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	72890
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	74965
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4476
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	76652
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	77610
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	74631
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	74699
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	74767
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	21300
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	75345
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4816
	.byte	12,3,35,144,3,12
	.byte	'EVRADCSTAT',0
	.word	73528
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	74135
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	73664
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	73596
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2657
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	73866
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	73934
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	74002
	.byte	4,3,35,184,3,12
	.byte	'reserved_1BC',0
	.word	4476
	.byte	8,3,35,188,3,12
	.byte	'EVRSDCOEFF2',0
	.word	73797
	.byte	4,3,35,196,3,12
	.byte	'reserved_1C8',0
	.word	21023
	.byte	20,3,35,200,3,12
	.byte	'PMSWUTCNT',0
	.word	76391
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	75278
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	75214
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	15304
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	77619
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	73209
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	74326
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	75469
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	77628
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2657
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	73018
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	77637
	.byte	188,1,3,35,196,4,12
	.byte	'PMSWCR3',0
	.word	76191
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	77648
	.byte	244,1,3,35,132,6,12
	.byte	'ACCEN1',0
	.word	72306
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	72242
	.byte	4,3,35,252,7,0,13
	.word	77659
	.byte	28
	.byte	'Ifx_SCU',0,6,244,14,3
	.word	79555
	.byte	28
	.byte	'IfxPort_InputMode',0,7,60,3
	.word	8757
	.byte	28
	.byte	'IfxPort_OutputIdx',0,7,101,3
	.word	9031
	.byte	28
	.byte	'IfxPort_OutputMode',0,7,109,3
	.word	8962
	.byte	17,7,115,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,7,125,3
	.word	79656
	.byte	28
	.byte	'IfxPort_State',0,7,137,1,3
	.word	9344
	.byte	28
	.byte	'IfxPort_Pin',0,7,153,1,3
	.word	43601
	.byte	21
	.word	43758
	.byte	28
	.byte	'IfxMultican_Rxd_In',0,24,45,3
	.word	80016
	.byte	21
	.word	43835
	.byte	28
	.byte	'IfxMultican_Txd_Out',0,24,54,3
	.word	80048
	.byte	21
	.word	43758
	.byte	30
	.byte	'IfxMultican_RXD1B_P14_1_IN',0,24,79,31
	.word	80081
	.byte	1,1,21
	.word	43835
	.byte	30
	.byte	'IfxMultican_TXD1_P14_0_OUT',0,24,105,32
	.word	80123
	.byte	1,1,28
	.byte	'IfxMultican_MsgObjId',0,9,59,16
	.word	20268
	.byte	28
	.byte	'IfxMultican_ClockSelect',0,9,75,3
	.word	42856
	.byte	28
	.byte	'IfxMultican_DataLengthCode',0,9,98,3
	.word	19427
	.byte	28
	.byte	'IfxMultican_Frame',0,9,108,3
	.word	45184
	.byte	17,9,113,9,1,18
	.byte	'IfxMultican_FrameCounterMode_frameCountMode',0,0,18
	.byte	'IfxMultican_FrameCounterMode_timeStampMode',0,1,18
	.byte	'IfxMultican_FrameCounterMode_bitTimingMode',0,2,18
	.byte	'IfxMultican_FrameCounterMode_errorCountMode',0,3,0,28
	.byte	'IfxMultican_FrameCounterMode',0,9,124,3
	.word	80287
	.byte	17,9,129,1,9,1,18
	.byte	'IfxMultican_MsgObjGroup_0',0,0,18
	.byte	'IfxMultican_MsgObjGroup_1',0,1,18
	.byte	'IfxMultican_MsgObjGroup_2',0,2,18
	.byte	'IfxMultican_MsgObjGroup_3',0,3,18
	.byte	'IfxMultican_MsgObjGroup_4',0,4,18
	.byte	'IfxMultican_MsgObjGroup_5',0,5,18
	.byte	'IfxMultican_MsgObjGroup_6',0,6,18
	.byte	'IfxMultican_MsgObjGroup_7',0,7,0,28
	.byte	'IfxMultican_MsgObjGroup',0,9,139,1,3
	.word	80512
	.byte	17,9,143,1,9,1,18
	.byte	'IfxMultican_MsgObjMode_standard',0,0,18
	.byte	'IfxMultican_MsgObjMode_receiveFifoBase',0,1,18
	.byte	'IfxMultican_MsgObjMode_transmitFifoBase',0,2,18
	.byte	'IfxMultican_MsgObjMode_transmitFifoSlave',0,3,18
	.byte	'IfxMultican_MsgObjMode_gatewaySource',0,4,18
	.byte	'IfxMultican_MsgObjMode_canFD64',0,5,0,28
	.byte	'IfxMultican_MsgObjMode',0,9,151,1,3
	.word	80776
	.byte	28
	.byte	'IfxMultican_Priority',0,9,178,1,3
	.word	45314
	.byte	17,9,183,1,9,1,18
	.byte	'IfxMultican_SleepMode_enable',0,0,18
	.byte	'IfxMultican_SleepMode_disable',0,1,0,28
	.byte	'IfxMultican_SleepMode',0,9,187,1,3
	.word	81077
	.byte	28
	.byte	'IfxMultican_Status',0,9,204,1,3
	.word	42471
	.byte	28
	.byte	'IfxMultican_Message',0,9,220,1,3
	.word	19945
	.byte	11,9,224,1,9,4,12
	.byte	'B',0
	.word	18269
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,0,28
	.byte	'IfxMultican_MsgObjStat',0,9,228,1,3
	.word	81235
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,31,45,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,31,48,3
	.word	81296
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,31,51,16,4,10
	.byte	'VSS',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,31,55,3
	.word	81357
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,31,58,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,31,62,3
	.word	81436
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,31,65,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,31,69,3
	.word	81522
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,31,72,16,4,10
	.byte	'CM',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	704
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	704
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,31,80,3
	.word	81611
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,31,83,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,31,89,3
	.word	81757
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,31,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,31,96,3
	.word	81884
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,31,99,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,31,103,3
	.word	81982
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,31,106,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,31,110,3
	.word	82075
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,31,113,16,4,10
	.byte	'MODREV',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,31,118,3
	.word	82168
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,31,121,16,4,10
	.byte	'XE',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,31,125,3
	.word	82275
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,31,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,31,136,1,3
	.word	82362
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,31,139,1,16,4,10
	.byte	'CID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,31,143,1,3
	.word	82516
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,31,146,1,16,4,10
	.byte	'DATA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,31,149,1,3
	.word	82610
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,31,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,31,163,1,3
	.word	82673
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,31,166,1,16,4,10
	.byte	'DE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	704
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	704
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,31,177,1,3
	.word	82891
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,31,180,1,16,4,10
	.byte	'DTA',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,31,184,1,3
	.word	83106
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,31,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,31,192,1,3
	.word	83200
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,31,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,31,199,1,3
	.word	83316
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,31,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	704
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,31,206,1,3
	.word	83417
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,31,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,31,212,1,3
	.word	83510
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,31,215,1,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,31,218,1,3
	.word	83590
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,31,221,1,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,31,233,1,3
	.word	83659
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,31,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,31,240,1,3
	.word	83888
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,31,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,31,247,1,3
	.word	83981
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,31,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,31,254,1,3
	.word	84076
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,31,129,2,16,4,10
	.byte	'RE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,31,133,2,3
	.word	84171
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,31,136,2,16,4,10
	.byte	'WE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,31,140,2,3
	.word	84261
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,31,143,2,16,4,10
	.byte	'SRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	704
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,31,161,2,3
	.word	84351
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,31,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,31,172,2,3
	.word	84675
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,31,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,31,180,2,3
	.word	84829
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,31,183,2,16,4,10
	.byte	'TST',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	704
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,31,202,2,3
	.word	84935
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,31,205,2,16,4,10
	.byte	'OPC',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,31,212,2,3
	.word	85284
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,31,215,2,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,31,218,2,3
	.word	85444
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,31,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,31,224,2,3
	.word	85525
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,31,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,31,230,2,3
	.word	85612
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,31,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,31,236,2,3
	.word	85699
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,31,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,31,243,2,3
	.word	85786
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,31,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	704
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	704
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	704
	.byte	6,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICR_Bits',0,31,253,2,3
	.word	85877
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,31,128,3,16,4,10
	.byte	'ISP',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,31,131,3,3
	.word	86020
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,31,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,31,139,3,3
	.word	86086
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,31,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,31,146,3,3
	.word	86192
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,31,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,31,153,3,3
	.word	86285
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,31,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,31,160,3,3
	.word	86378
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,31,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,31,167,3,3
	.word	86471
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,31,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,31,175,3,3
	.word	86556
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,31,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,31,183,3,3
	.word	86672
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,31,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,31,190,3,3
	.word	86783
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,31,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	704
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,31,200,3,3
	.word	86884
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,31,203,3,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,31,206,3,3
	.word	87014
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,31,209,3,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,31,221,3,3
	.word	87083
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,31,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	704
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,31,229,3,3
	.word	87312
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,31,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,31,237,3,3
	.word	87425
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,31,240,3,16,4,10
	.byte	'PSI',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,31,244,3,3
	.word	87538
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,31,247,3,16,4,10
	.byte	'FRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,31,129,4,3
	.word	87629
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,31,132,4,16,4,10
	.byte	'CDC',0,4
	.word	704
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	704
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	704
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,31,147,4,3
	.word	87832
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,31,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,31,156,4,3
	.word	88075
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,31,159,4,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,31,171,4,3
	.word	88203
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,31,174,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,31,177,4,3
	.word	88444
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,31,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,31,183,4,3
	.word	88527
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,31,186,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,31,189,4,3
	.word	88618
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,31,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,31,195,4,3
	.word	88709
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,31,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,31,202,4,3
	.word	88808
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,31,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,31,209,4,3
	.word	88915
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,31,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,31,220,4,3
	.word	89022
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,31,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,31,231,4,3
	.word	89176
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,31,234,4,16,4,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,31,238,4,3
	.word	89337
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,31,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	704
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,31,249,4,3
	.word	89435
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,31,252,4,16,4,10
	.byte	'Timer',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,31,255,4,3
	.word	89607
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,31,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,31,133,5,3
	.word	89687
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,31,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	704
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,31,153,5,3
	.word	89760
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,31,156,5,16,4,10
	.byte	'T0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,31,167,5,3
	.word	90078
	.byte	11,31,175,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81296
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,31,180,5,3
	.word	90273
	.byte	11,31,183,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81357
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,31,188,5,3
	.word	90332
	.byte	11,31,191,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81436
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,31,196,5,3
	.word	90393
	.byte	11,31,199,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81522
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,31,204,5,3
	.word	90454
	.byte	11,31,207,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81611
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,31,212,5,3
	.word	90516
	.byte	11,31,215,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81757
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,31,220,5,3
	.word	90579
	.byte	11,31,223,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,31,228,5,3
	.word	90643
	.byte	11,31,231,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81982
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,31,236,5,3
	.word	90708
	.byte	11,31,239,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82075
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,31,244,5,3
	.word	90771
	.byte	11,31,247,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82168
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,31,252,5,3
	.word	90834
	.byte	11,31,255,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82275
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,31,132,6,3
	.word	90898
	.byte	11,31,135,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82362
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,31,140,6,3
	.word	90960
	.byte	11,31,143,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82516
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,31,148,6,3
	.word	91023
	.byte	11,31,151,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82610
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,31,156,6,3
	.word	91087
	.byte	11,31,159,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82673
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,31,164,6,3
	.word	91146
	.byte	11,31,167,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82891
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,31,172,6,3
	.word	91208
	.byte	11,31,175,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83106
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,31,180,6,3
	.word	91271
	.byte	11,31,183,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83200
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,31,188,6,3
	.word	91335
	.byte	11,31,191,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83316
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,31,196,6,3
	.word	91398
	.byte	11,31,199,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83417
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,31,204,6,3
	.word	91461
	.byte	11,31,207,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83510
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,31,212,6,3
	.word	91522
	.byte	11,31,215,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83590
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,31,220,6,3
	.word	91585
	.byte	11,31,223,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83659
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,31,228,6,3
	.word	91648
	.byte	11,31,231,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83888
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,31,236,6,3
	.word	91711
	.byte	11,31,239,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83981
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,31,244,6,3
	.word	91772
	.byte	11,31,247,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84076
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,31,252,6,3
	.word	91835
	.byte	11,31,255,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84171
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,31,132,7,3
	.word	91898
	.byte	11,31,135,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84261
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,31,140,7,3
	.word	91960
	.byte	11,31,143,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84351
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,31,148,7,3
	.word	92022
	.byte	11,31,151,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84675
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,31,156,7,3
	.word	92084
	.byte	11,31,159,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84829
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,31,164,7,3
	.word	92147
	.byte	11,31,167,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84935
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,31,172,7,3
	.word	92208
	.byte	11,31,175,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85284
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,31,180,7,3
	.word	92278
	.byte	11,31,183,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85444
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,31,188,7,3
	.word	92348
	.byte	11,31,191,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85525
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,31,196,7,3
	.word	92417
	.byte	11,31,199,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85612
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,31,204,7,3
	.word	92488
	.byte	11,31,207,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85699
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,31,212,7,3
	.word	92559
	.byte	11,31,215,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85786
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,31,220,7,3
	.word	92630
	.byte	11,31,223,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85877
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICR',0,31,228,7,3
	.word	92692
	.byte	11,31,231,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86020
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,31,236,7,3
	.word	92753
	.byte	11,31,239,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86086
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,31,244,7,3
	.word	92814
	.byte	11,31,247,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86192
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,31,252,7,3
	.word	92875
	.byte	11,31,255,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86285
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,31,132,8,3
	.word	92938
	.byte	11,31,135,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86378
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,31,140,8,3
	.word	93001
	.byte	11,31,143,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86471
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,31,148,8,3
	.word	93064
	.byte	11,31,151,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86556
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,31,156,8,3
	.word	93124
	.byte	11,31,159,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86672
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,31,164,8,3
	.word	93187
	.byte	11,31,167,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86783
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,31,172,8,3
	.word	93250
	.byte	11,31,175,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,31,180,8,3
	.word	93313
	.byte	11,31,183,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87014
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,31,188,8,3
	.word	93375
	.byte	11,31,191,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87083
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,31,196,8,3
	.word	93438
	.byte	11,31,199,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87312
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,31,204,8,3
	.word	93501
	.byte	11,31,207,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87425
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,31,212,8,3
	.word	93563
	.byte	11,31,215,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87538
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,31,220,8,3
	.word	93625
	.byte	11,31,223,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87629
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,31,228,8,3
	.word	93687
	.byte	11,31,231,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87832
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,31,236,8,3
	.word	93749
	.byte	11,31,239,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88075
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,31,244,8,3
	.word	93810
	.byte	11,31,247,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88203
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,31,252,8,3
	.word	93873
	.byte	11,31,255,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88444
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,31,132,9,3
	.word	93937
	.byte	11,31,135,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88527
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,31,140,9,3
	.word	94007
	.byte	11,31,143,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88618
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,31,148,9,3
	.word	94077
	.byte	11,31,151,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88709
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,31,156,9,3
	.word	94151
	.byte	11,31,159,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88808
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,31,164,9,3
	.word	94225
	.byte	11,31,167,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88915
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,31,172,9,3
	.word	94295
	.byte	11,31,175,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89022
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,31,180,9,3
	.word	94365
	.byte	11,31,183,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89176
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,31,188,9,3
	.word	94428
	.byte	11,31,191,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89337
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,31,196,9,3
	.word	94492
	.byte	11,31,199,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89435
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,31,204,9,3
	.word	94558
	.byte	11,31,207,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89607
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,31,212,9,3
	.word	94623
	.byte	11,31,215,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89687
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,31,220,9,3
	.word	94690
	.byte	11,31,223,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89760
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,31,228,9,3
	.word	94754
	.byte	11,31,231,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90078
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,31,236,9,3
	.word	94818
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,31,247,9,25,8,12
	.byte	'L',0
	.word	90708
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	90771
	.byte	4,2,35,4,0,13
	.word	94884
	.byte	28
	.byte	'Ifx_CPU_CPR',0,31,251,9,3
	.word	94926
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,31,254,9,25,8,12
	.byte	'L',0
	.word	91772
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	91835
	.byte	4,2,35,4,0,13
	.word	94952
	.byte	28
	.byte	'Ifx_CPU_DPR',0,31,130,10,3
	.word	94994
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,31,133,10,25,16,12
	.byte	'LA',0
	.word	94225
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	94295
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	94077
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	94151
	.byte	4,2,35,12,0,13
	.word	95020
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,31,139,10,3
	.word	95102
	.byte	14,12
	.word	94623
	.byte	15,2,0,9
	.byte	'_Ifx_CPU_TPS',0,31,142,10,25,16,12
	.byte	'CON',0
	.word	94558
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	95134
	.byte	12,2,35,4,0,13
	.word	95143
	.byte	28
	.byte	'Ifx_CPU_TPS',0,31,146,10,3
	.word	95191
	.byte	9
	.byte	'_Ifx_CPU_TR',0,31,149,10,25,8,12
	.byte	'EVT',0
	.word	94754
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	94690
	.byte	4,2,35,4,0,13
	.word	95217
	.byte	28
	.byte	'Ifx_CPU_TR',0,31,153,10,3
	.word	95262
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,13,87,3
	.word	20356
	.byte	17,12,118,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,12,122,3
	.word	95314
	.byte	20,12,132,1,9,6,12
	.byte	'counter',0
	.word	19406
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	305
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,12,136,1,3
	.word	95401
	.byte	20,12,144,1,9,32,12
	.byte	'instruction',0
	.word	95401
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	95401
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	95401
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	95401
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	95401
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,12,151,1,3
	.word	95467
	.byte	28
	.byte	'Ifx_STM_ACCEN0_Bits',0,21,79,3
	.word	40911
	.byte	28
	.byte	'Ifx_STM_ACCEN1_Bits',0,21,85,3
	.word	40822
	.byte	28
	.byte	'Ifx_STM_CAP_Bits',0,21,91,3
	.word	39352
	.byte	28
	.byte	'Ifx_STM_CAPSV_Bits',0,21,97,3
	.word	40229
	.byte	28
	.byte	'Ifx_STM_CLC_Bits',0,21,107,3
	.word	38475
	.byte	28
	.byte	'Ifx_STM_CMCON_Bits',0,21,120,3
	.word	39530
	.byte	28
	.byte	'Ifx_STM_CMP_Bits',0,21,126,3
	.word	39439
	.byte	28
	.byte	'Ifx_STM_ICR_Bits',0,21,139,1,3
	.word	39761
	.byte	28
	.byte	'Ifx_STM_ID_Bits',0,21,147,1,3
	.word	38631
	.byte	28
	.byte	'Ifx_STM_ISCR_Bits',0,21,157,1,3
	.word	39978
	.byte	28
	.byte	'Ifx_STM_KRST0_Bits',0,21,165,1,3
	.word	40699
	.byte	28
	.byte	'Ifx_STM_KRST1_Bits',0,21,172,1,3
	.word	40595
	.byte	28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,21,179,1,3
	.word	40489
	.byte	28
	.byte	'Ifx_STM_OCS_Bits',0,21,189,1,3
	.word	40329
	.byte	28
	.byte	'Ifx_STM_TIM0_Bits',0,21,195,1,3
	.word	38753
	.byte	28
	.byte	'Ifx_STM_TIM0SV_Bits',0,21,201,1,3
	.word	40142
	.byte	28
	.byte	'Ifx_STM_TIM1_Bits',0,21,207,1,3
	.word	38838
	.byte	28
	.byte	'Ifx_STM_TIM2_Bits',0,21,213,1,3
	.word	38923
	.byte	28
	.byte	'Ifx_STM_TIM3_Bits',0,21,219,1,3
	.word	39008
	.byte	28
	.byte	'Ifx_STM_TIM4_Bits',0,21,225,1,3
	.word	39094
	.byte	28
	.byte	'Ifx_STM_TIM5_Bits',0,21,231,1,3
	.word	39180
	.byte	28
	.byte	'Ifx_STM_TIM6_Bits',0,21,237,1,3
	.word	39266
	.byte	28
	.byte	'Ifx_STM_ACCEN0',0,21,250,1,3
	.word	41440
	.byte	28
	.byte	'Ifx_STM_ACCEN1',0,21,130,2,3
	.word	40871
	.byte	28
	.byte	'Ifx_STM_CAP',0,21,138,2,3
	.word	39399
	.byte	28
	.byte	'Ifx_STM_CAPSV',0,21,146,2,3
	.word	40278
	.byte	28
	.byte	'Ifx_STM_CLC',0,21,154,2,3
	.word	38591
	.byte	28
	.byte	'Ifx_STM_CMCON',0,21,162,2,3
	.word	39721
	.byte	28
	.byte	'Ifx_STM_CMP',0,21,170,2,3
	.word	39481
	.byte	28
	.byte	'Ifx_STM_ICR',0,21,178,2,3
	.word	39938
	.byte	28
	.byte	'Ifx_STM_ID',0,21,186,2,3
	.word	38713
	.byte	28
	.byte	'Ifx_STM_ISCR',0,21,194,2,3
	.word	40102
	.byte	28
	.byte	'Ifx_STM_KRST0',0,21,202,2,3
	.word	40782
	.byte	28
	.byte	'Ifx_STM_KRST1',0,21,210,2,3
	.word	40659
	.byte	28
	.byte	'Ifx_STM_KRSTCLR',0,21,218,2,3
	.word	40555
	.byte	28
	.byte	'Ifx_STM_OCS',0,21,226,2,3
	.word	40449
	.byte	28
	.byte	'Ifx_STM_TIM0',0,21,234,2,3
	.word	38798
	.byte	28
	.byte	'Ifx_STM_TIM0SV',0,21,242,2,3
	.word	40189
	.byte	28
	.byte	'Ifx_STM_TIM1',0,21,250,2,3
	.word	38883
	.byte	28
	.byte	'Ifx_STM_TIM2',0,21,130,3,3
	.word	38968
	.byte	28
	.byte	'Ifx_STM_TIM3',0,21,138,3,3
	.word	39054
	.byte	28
	.byte	'Ifx_STM_TIM4',0,21,146,3,3
	.word	39140
	.byte	28
	.byte	'Ifx_STM_TIM5',0,21,154,3,3
	.word	39226
	.byte	28
	.byte	'Ifx_STM_TIM6',0,21,162,3,3
	.word	39312
	.byte	13
	.word	41480
	.byte	28
	.byte	'Ifx_STM',0,21,201,3,3
	.word	96668
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,32,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,32,79,3
	.word	96690
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,32,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,32,85,3
	.word	97251
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,32,88,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,32,95,3
	.word	97332
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,32,98,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,32,111,3
	.word	97485
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,32,114,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,32,121,3
	.word	97733
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,32,124,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,32,128,1,3
	.word	97879
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,32,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,32,136,1,3
	.word	97977
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,32,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,32,144,1,3
	.word	98093
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,32,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,32,153,1,3
	.word	98209
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,32,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,32,162,1,3
	.word	98349
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,32,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,32,171,1,3
	.word	98489
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,32,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	856
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,32,193,1,3
	.word	98628
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,32,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,32,218,1,3
	.word	98990
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,32,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,32,254,1,3
	.word	99431
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,32,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,32,137,2,3
	.word	100035
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,32,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,32,156,2,3
	.word	100215
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,32,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,32,167,2,3
	.word	100537
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,32,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,32,174,2,3
	.word	100718
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,32,177,2,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,32,188,2,3
	.word	100818
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,32,191,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,32,194,2,3
	.word	101034
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,32,197,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,32,200,2,3
	.word	101113
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,32,203,2,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,32,208,2,3
	.word	101192
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,32,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	856
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,32,221,2,3
	.word	101303
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,32,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,32,233,2,3
	.word	101517
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,32,236,2,16,4,10
	.byte	'L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'RES8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RES9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RES10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RES11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'RES12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'RES13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'RES14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'RES15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,32,254,2,3
	.word	101703
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,32,129,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,32,135,3,3
	.word	102038
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,32,138,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,32,146,3,3
	.word	102181
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,32,149,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	305
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'BOOTSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,32,166,3,3
	.word	102370
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,32,169,3,16,4,10
	.byte	'S0ROM',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,32,201,3,3
	.word	102729
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,32,204,3,16,4,10
	.byte	'S0L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,32,235,3,3
	.word	103324
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,32,238,3,16,4,10
	.byte	'S0WOP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,32,141,4,3
	.word	103848
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,32,144,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,32,148,4,3
	.word	104430
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,32,151,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,32,155,4,3
	.word	104532
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,32,158,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,32,162,4,3
	.word	104634
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,32,165,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,32,169,4,3
	.word	104736
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,32,172,4,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,32,183,4,3
	.word	104830
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,32,186,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,32,189,4,3
	.word	105040
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,32,192,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,32,195,4,3
	.word	105113
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,32,198,4,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,32,205,4,3
	.word	105186
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,32,208,4,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,32,212,4,3
	.word	105341
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,32,215,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,32,222,4,3
	.word	105446
	.byte	11,32,230,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96690
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,32,235,4,3
	.word	105594
	.byte	11,32,238,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97251
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,32,243,4,3
	.word	105660
	.byte	11,32,246,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97332
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,32,251,4,3
	.word	105726
	.byte	11,32,254,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97485
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,32,131,5,3
	.word	105794
	.byte	11,32,134,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97733
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,32,139,5,3
	.word	105863
	.byte	11,32,142,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97879
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,32,147,5,3
	.word	105931
	.byte	11,32,150,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,32,155,5,3
	.word	105996
	.byte	11,32,158,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98093
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,32,163,5,3
	.word	106061
	.byte	11,32,166,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98209
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,32,171,5,3
	.word	106126
	.byte	11,32,174,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98349
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,32,179,5,3
	.word	106191
	.byte	11,32,182,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98489
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,32,187,5,3
	.word	106256
	.byte	11,32,190,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98628
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,32,195,5,3
	.word	106320
	.byte	11,32,198,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98990
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,32,203,5,3
	.word	106384
	.byte	11,32,206,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99431
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,32,211,5,3
	.word	106448
	.byte	11,32,214,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100035
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,32,219,5,3
	.word	106511
	.byte	11,32,222,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100215
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,32,227,5,3
	.word	106578
	.byte	11,32,230,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100537
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,32,235,5,3
	.word	106644
	.byte	11,32,238,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100718
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,32,243,5,3
	.word	106711
	.byte	11,32,246,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100818
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,32,251,5,3
	.word	106778
	.byte	11,32,254,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101034
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,32,131,6,3
	.word	106845
	.byte	11,32,134,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101113
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,32,139,6,3
	.word	106912
	.byte	11,32,142,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101192
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,32,147,6,3
	.word	106979
	.byte	11,32,150,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101303
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,32,155,6,3
	.word	107041
	.byte	11,32,158,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101517
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,32,163,6,3
	.word	107105
	.byte	11,32,166,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101703
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,32,171,6,3
	.word	107169
	.byte	11,32,174,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102038
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,32,179,6,3
	.word	107236
	.byte	11,32,182,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102181
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,32,187,6,3
	.word	107305
	.byte	11,32,190,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102370
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,32,195,6,3
	.word	107374
	.byte	11,32,198,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102729
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,32,203,6,3
	.word	107447
	.byte	11,32,206,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103324
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,32,211,6,3
	.word	107516
	.byte	11,32,214,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103848
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,32,219,6,3
	.word	107583
	.byte	11,32,222,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104430
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,32,227,6,3
	.word	107652
	.byte	11,32,230,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104532
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,32,235,6,3
	.word	107720
	.byte	11,32,238,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104634
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,32,243,6,3
	.word	107788
	.byte	11,32,246,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104736
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,32,251,6,3
	.word	107856
	.byte	11,32,254,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104830
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,32,131,7,3
	.word	107920
	.byte	11,32,134,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105040
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,32,139,7,3
	.word	107984
	.byte	11,32,142,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105113
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,32,147,7,3
	.word	108048
	.byte	11,32,150,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105186
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,32,155,7,3
	.word	108112
	.byte	11,32,158,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105341
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,32,163,7,3
	.word	108180
	.byte	11,32,166,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105446
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,32,171,7,3
	.word	108249
	.byte	14,36
	.word	305
	.byte	15,35,0,9
	.byte	'_Ifx_FLASH_CBAB',0,32,182,7,25,48,12
	.byte	'CFG',0
	.word	105726
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	105794
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	105863
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	108317
	.byte	36,2,35,12,0,13
	.word	108326
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,32,188,7,3
	.word	108409
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,32,191,7,25,48,12
	.byte	'CFG0',0
	.word	107652
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	107720
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	107788
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	108317
	.byte	36,2,35,12,0,13
	.word	108438
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,32,197,7,3
	.word	108522
	.byte	14,80
	.word	305
	.byte	15,79,0,9
	.byte	'_Ifx_FLASH_UBAB',0,32,200,7,25,92,12
	.byte	'CFG',0
	.word	108112
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	108180
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	108249
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	108550
	.byte	80,2,35,12,0,13
	.word	108559
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,32,206,7,3
	.word	108642
	.byte	31,1,1,6
	.word	108671
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,14,129,1,16
	.word	108674
	.byte	20,14,197,5,9,8,12
	.byte	'value',0
	.word	19406
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	19406
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,14,201,5,3
	.word	108719
	.byte	20,14,206,5,9,8,12
	.byte	'pDivider',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	305
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	305
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	20695
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,14,212,5,3
	.word	108790
	.byte	20,14,216,5,9,12,12
	.byte	'k2Step',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	20695
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	108679
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,14,221,5,3
	.word	108907
	.byte	6
	.word	108671
	.byte	20,14,229,5,9,40,12
	.byte	'ccucon0',0
	.word	108719
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	108719
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	108719
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	108719
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	108719
	.byte	8,2,35,32,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,14,236,5,3
	.word	109009
	.byte	20,14,240,5,9,8,12
	.byte	'value',0
	.word	19406
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	19406
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,14,244,5,3
	.word	109144
	.byte	6
	.word	108907
	.byte	20,14,249,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	109220
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	108790
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,14,254,5,3
	.word	109225
	.byte	28
	.byte	'IfxMultican_Can_FdConfig',0,22,132,6,3
	.word	43410
	.byte	28
	.byte	'IfxMultican_Can_GatewayConfig',0,22,143,6,3
	.word	45384
	.byte	28
	.byte	'IfxMultican_Can_InterruptConfig',0,22,151,6,3
	.word	43035
	.byte	28
	.byte	'IfxMultican_Can_InterruptSource',0,22,159,6,3
	.word	44276
	.byte	28
	.byte	'IfxMultican_Can_MsgObjControl',0,22,173,6,3
	.word	44981
	.byte	28
	.byte	'IfxMultican_Can_Node',0,22,183,6,3
	.word	43336
	.byte	28
	.byte	'IfxMultican_Can',0,22,194,6,3
	.word	42830
	.byte	28
	.byte	'IfxMultican_Can_Config',0,22,204,6,3
	.word	43092
	.byte	28
	.byte	'IfxMultican_Can_MsgObj',0,22,214,6,3
	.word	44895
	.byte	28
	.byte	'IfxMultican_Can_MsgObjConfig',0,22,233,6,3
	.word	45510
	.byte	28
	.byte	'IfxMultican_Can_NodeConfig',0,22,130,7,3
	.word	44315
	.byte	28
	.byte	'IfxDma_ChannelId',0,17,100,3
	.word	31396
	.byte	28
	.byte	'Ifx_DMA_ACCEN00_Bits',0,16,79,3
	.word	21309
	.byte	28
	.byte	'Ifx_DMA_ACCEN01_Bits',0,16,85,3
	.word	21879
	.byte	28
	.byte	'Ifx_DMA_ACCEN10_Bits',0,16,122,3
	.word	21969
	.byte	28
	.byte	'Ifx_DMA_ACCEN11_Bits',0,16,128,1,3
	.word	22539
	.byte	28
	.byte	'Ifx_DMA_ACCEN20_Bits',0,16,165,1,3
	.word	22629
	.byte	28
	.byte	'Ifx_DMA_ACCEN21_Bits',0,16,171,1,3
	.word	23200
	.byte	28
	.byte	'Ifx_DMA_ACCEN30_Bits',0,16,208,1,3
	.word	23291
	.byte	28
	.byte	'Ifx_DMA_ACCEN31_Bits',0,16,214,1,3
	.word	23862
	.byte	28
	.byte	'Ifx_DMA_BLK_CLRE_Bits',0,16,230,1,3
	.word	24469
	.byte	28
	.byte	'Ifx_DMA_BLK_EER_Bits',0,16,243,1,3
	.word	23953
	.byte	28
	.byte	'Ifx_DMA_BLK_ERRSR_Bits',0,16,132,2,3
	.word	24177
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_ADICR_Bits',0,16,152,2,3
	.word	26372
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_CHCR_Bits',0,16,168,2,3
	.word	26688
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_CHSR_Bits',0,16,184,2,3
	.word	27058
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_DADR_Bits',0,16,190,2,3
	.word	26283
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R0_Bits',0,16,199,2,3
	.word	24932
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R1_Bits',0,16,208,2,3
	.word	25067
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R2_Bits',0,16,217,2,3
	.word	25202
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R3_Bits',0,16,226,2,3
	.word	25337
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R4_Bits',0,16,235,2,3
	.word	25472
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R5_Bits',0,16,244,2,3
	.word	25607
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R6_Bits',0,16,253,2,3
	.word	25742
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R7_Bits',0,16,134,3,3
	.word	25877
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_RDCRC_Bits',0,16,140,3,3
	.word	26012
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SADR_Bits',0,16,146,3,3
	.word	26194
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SDCRC_Bits',0,16,152,3,3
	.word	26103
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SHADR_Bits',0,16,158,3,3
	.word	26967
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SR_Bits',0,16,169,3,3
	.word	24752
	.byte	28
	.byte	'Ifx_DMA_CH_ADICR_Bits',0,16,189,3,3
	.word	29495
	.byte	28
	.byte	'Ifx_DMA_CH_CHCFGR_Bits',0,16,205,3,3
	.word	29807
	.byte	28
	.byte	'Ifx_DMA_CH_CHCSR_Bits',0,16,226,3,3
	.word	30171
	.byte	28
	.byte	'Ifx_DMA_CH_DADR_Bits',0,16,232,3,3
	.word	29410
	.byte	28
	.byte	'Ifx_DMA_CH_RDCRCR_Bits',0,16,238,3,3
	.word	29149
	.byte	28
	.byte	'Ifx_DMA_CH_SADR_Bits',0,16,244,3,3
	.word	29325
	.byte	28
	.byte	'Ifx_DMA_CH_SDCRCR_Bits',0,16,250,3,3
	.word	29237
	.byte	28
	.byte	'Ifx_DMA_CH_SHADR_Bits',0,16,128,4,3
	.word	30084
	.byte	28
	.byte	'Ifx_DMA_CLC_Bits',0,16,138,4,3
	.word	20744
	.byte	28
	.byte	'Ifx_DMA_ERRINTR_Bits',0,16,145,4,3
	.word	27879
	.byte	28
	.byte	'Ifx_DMA_HRR_Bits',0,16,152,4,3
	.word	28471
	.byte	28
	.byte	'Ifx_DMA_ID_Bits',0,16,160,4,3
	.word	20901
	.byte	28
	.byte	'Ifx_DMA_MEMCON_Bits',0,16,175,4,3
	.word	21032
	.byte	28
	.byte	'Ifx_DMA_MODE_Bits',0,16,182,4,3
	.word	28347
	.byte	28
	.byte	'Ifx_DMA_OTSS_Bits',0,16,191,4,3
	.word	27740
	.byte	28
	.byte	'Ifx_DMA_PRR0_Bits',0,16,200,4,3
	.word	27985
	.byte	28
	.byte	'Ifx_DMA_PRR1_Bits',0,16,209,4,3
	.word	28119
	.byte	28
	.byte	'Ifx_DMA_SUSACR_Bits',0,16,216,4,3
	.word	28709
	.byte	28
	.byte	'Ifx_DMA_SUSENR_Bits',0,16,223,4,3
	.word	28593
	.byte	28
	.byte	'Ifx_DMA_TIME_Bits',0,16,229,4,3
	.word	28253
	.byte	28
	.byte	'Ifx_DMA_TSR_Bits',0,16,248,4,3
	.word	28825
	.byte	28
	.byte	'Ifx_DMA_ACCEN00',0,16,133,5,3
	.word	21839
	.byte	28
	.byte	'Ifx_DMA_ACCEN01',0,16,141,5,3
	.word	21929
	.byte	28
	.byte	'Ifx_DMA_ACCEN10',0,16,149,5,3
	.word	22499
	.byte	28
	.byte	'Ifx_DMA_ACCEN11',0,16,157,5,3
	.word	22589
	.byte	28
	.byte	'Ifx_DMA_ACCEN20',0,16,165,5,3
	.word	23160
	.byte	28
	.byte	'Ifx_DMA_ACCEN21',0,16,173,5,3
	.word	23251
	.byte	28
	.byte	'Ifx_DMA_ACCEN30',0,16,181,5,3
	.word	23822
	.byte	28
	.byte	'Ifx_DMA_ACCEN31',0,16,189,5,3
	.word	23913
	.byte	28
	.byte	'Ifx_DMA_BLK_CLRE',0,16,197,5,3
	.word	24712
	.byte	28
	.byte	'Ifx_DMA_BLK_EER',0,16,205,5,3
	.word	24137
	.byte	28
	.byte	'Ifx_DMA_BLK_ERRSR',0,16,213,5,3
	.word	24429
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_ADICR',0,16,221,5,3
	.word	26648
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_CHCR',0,16,229,5,3
	.word	26927
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_CHSR',0,16,237,5,3
	.word	27291
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_DADR',0,16,245,5,3
	.word	26332
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R0',0,16,253,5,3
	.word	25027
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R1',0,16,133,6,3
	.word	25162
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R2',0,16,141,6,3
	.word	25297
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R3',0,16,149,6,3
	.word	25432
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R4',0,16,157,6,3
	.word	25567
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R5',0,16,165,6,3
	.word	25702
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R6',0,16,173,6,3
	.word	25837
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_R7',0,16,181,6,3
	.word	25972
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_RDCRC',0,16,189,6,3
	.word	26063
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SADR',0,16,197,6,3
	.word	26243
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SDCRC',0,16,205,6,3
	.word	26154
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SHADR',0,16,213,6,3
	.word	27018
	.byte	28
	.byte	'Ifx_DMA_BLK_ME_SR',0,16,221,6,3
	.word	24892
	.byte	28
	.byte	'Ifx_DMA_CH_ADICR',0,16,229,6,3
	.word	29767
	.byte	28
	.byte	'Ifx_DMA_CH_CHCFGR',0,16,237,6,3
	.word	30044
	.byte	28
	.byte	'Ifx_DMA_CH_CHCSR',0,16,245,6,3
	.word	30478
	.byte	28
	.byte	'Ifx_DMA_CH_DADR',0,16,253,6,3
	.word	29455
	.byte	28
	.byte	'Ifx_DMA_CH_RDCRCR',0,16,133,7,3
	.word	29197
	.byte	28
	.byte	'Ifx_DMA_CH_SADR',0,16,141,7,3
	.word	29370
	.byte	28
	.byte	'Ifx_DMA_CH_SDCRCR',0,16,149,7,3
	.word	29285
	.byte	28
	.byte	'Ifx_DMA_CH_SHADR',0,16,157,7,3
	.word	30131
	.byte	28
	.byte	'Ifx_DMA_CLC',0,16,165,7,3
	.word	20861
	.byte	28
	.byte	'Ifx_DMA_ERRINTR',0,16,173,7,3
	.word	27945
	.byte	28
	.byte	'Ifx_DMA_HRR',0,16,181,7,3
	.word	28533
	.byte	28
	.byte	'Ifx_DMA_ID',0,16,189,7,3
	.word	20983
	.byte	28
	.byte	'Ifx_DMA_MEMCON',0,16,197,7,3
	.word	21260
	.byte	28
	.byte	'Ifx_DMA_MODE',0,16,205,7,3
	.word	28411
	.byte	28
	.byte	'Ifx_DMA_OTSS',0,16,213,7,3
	.word	27839
	.byte	28
	.byte	'Ifx_DMA_PRR0',0,16,221,7,3
	.word	28079
	.byte	28
	.byte	'Ifx_DMA_PRR1',0,16,229,7,3
	.word	28213
	.byte	28
	.byte	'Ifx_DMA_SUSACR',0,16,237,7,3
	.word	28776
	.byte	28
	.byte	'Ifx_DMA_SUSENR',0,16,245,7,3
	.word	28660
	.byte	28
	.byte	'Ifx_DMA_TIME',0,16,253,7,3
	.word	28296
	.byte	28
	.byte	'Ifx_DMA_TSR',0,16,133,8,3
	.word	29100
	.byte	13
	.word	27331
	.byte	28
	.byte	'Ifx_DMA_BLK_ME',0,16,165,8,3
	.word	112508
	.byte	13
	.word	27624
	.byte	28
	.byte	'Ifx_DMA_BLK',0,16,185,8,3
	.word	112537
	.byte	13
	.word	30518
	.byte	28
	.byte	'Ifx_DMA_CH',0,16,198,8,3
	.word	112563
	.byte	13
	.word	30684
	.byte	28
	.byte	'Ifx_DMA',0,16,250,8,3
	.word	112588
	.byte	17,15,74,9,1,18
	.byte	'IfxDma_ChannelBusPriority_low',0,0,18
	.byte	'IfxDma_ChannelBusPriority_medium',0,1,18
	.byte	'IfxDma_ChannelBusPriority_high',0,2,0,28
	.byte	'IfxDma_ChannelBusPriority',0,15,79,3
	.word	112610
	.byte	17,15,84,9,1,18
	.byte	'IfxDma_ChannelIncrementCircular_none',0,0,18
	.byte	'IfxDma_ChannelIncrementCircular_2',0,1,18
	.byte	'IfxDma_ChannelIncrementCircular_4',0,2,18
	.byte	'IfxDma_ChannelIncrementCircular_8',0,3,18
	.byte	'IfxDma_ChannelIncrementCircular_16',0,4,18
	.byte	'IfxDma_ChannelIncrementCircular_32',0,5,18
	.byte	'IfxDma_ChannelIncrementCircular_64',0,6,18
	.byte	'IfxDma_ChannelIncrementCircular_128',0,7,18
	.byte	'IfxDma_ChannelIncrementCircular_256',0,8,18
	.byte	'IfxDma_ChannelIncrementCircular_512',0,9,18
	.byte	'IfxDma_ChannelIncrementCircular_1024',0,10,18
	.byte	'IfxDma_ChannelIncrementCircular_2048',0,11,18
	.byte	'IfxDma_ChannelIncrementCircular_4096',0,12,18
	.byte	'IfxDma_ChannelIncrementCircular_8192',0,13,18
	.byte	'IfxDma_ChannelIncrementCircular_16384',0,14,18
	.byte	'IfxDma_ChannelIncrementCircular_32768',0,15,0,28
	.byte	'IfxDma_ChannelIncrementCircular',0,15,102,3
	.word	112750
	.byte	17,15,107,9,1,18
	.byte	'IfxDma_ChannelIncrementDirection_negative',0,0,18
	.byte	'IfxDma_ChannelIncrementDirection_positive',0,1,0,28
	.byte	'IfxDma_ChannelIncrementDirection',0,15,111,3
	.word	113404
	.byte	17,15,116,9,1,18
	.byte	'IfxDma_ChannelIncrementStep_1',0,0,18
	.byte	'IfxDma_ChannelIncrementStep_2',0,1,18
	.byte	'IfxDma_ChannelIncrementStep_4',0,2,18
	.byte	'IfxDma_ChannelIncrementStep_8',0,3,18
	.byte	'IfxDma_ChannelIncrementStep_16',0,4,18
	.byte	'IfxDma_ChannelIncrementStep_32',0,5,18
	.byte	'IfxDma_ChannelIncrementStep_64',0,6,18
	.byte	'IfxDma_ChannelIncrementStep_128',0,7,0,28
	.byte	'IfxDma_ChannelIncrementStep',0,15,126,3
	.word	113539
	.byte	17,15,131,1,9,1,18
	.byte	'IfxDma_ChannelInterruptControl_thresholdLimitMatch',0,0,18
	.byte	'IfxDma_ChannelInterruptControl_transferCountDecremented',0,1,0,28
	.byte	'IfxDma_ChannelInterruptControl',0,15,135,1,3
	.word	113842
	.byte	17,15,140,1,9,1,18
	.byte	'IfxDma_ChannelMove_1',0,0,18
	.byte	'IfxDma_ChannelMove_2',0,1,18
	.byte	'IfxDma_ChannelMove_4',0,2,18
	.byte	'IfxDma_ChannelMove_8',0,3,18
	.byte	'IfxDma_ChannelMove_16',0,4,18
	.byte	'IfxDma_ChannelMove_3',0,5,18
	.byte	'IfxDma_ChannelMove_5',0,6,18
	.byte	'IfxDma_ChannelMove_9',0,7,0,28
	.byte	'IfxDma_ChannelMove',0,15,150,1,3
	.word	114000
	.byte	17,15,155,1,9,1,18
	.byte	'IfxDma_ChannelMoveSize_8bit',0,0,18
	.byte	'IfxDma_ChannelMoveSize_16bit',0,1,18
	.byte	'IfxDma_ChannelMoveSize_32bit',0,2,18
	.byte	'IfxDma_ChannelMoveSize_64bit',0,3,18
	.byte	'IfxDma_ChannelMoveSize_128bit',0,4,18
	.byte	'IfxDma_ChannelMoveSize_256bit',0,5,0,28
	.byte	'IfxDma_ChannelMoveSize',0,15,163,1,3
	.word	114220
	.byte	17,15,168,1,9,1,18
	.byte	'IfxDma_ChannelOperationMode_single',0,0,18
	.byte	'IfxDma_ChannelOperationMode_continuous',0,1,0,28
	.byte	'IfxDma_ChannelOperationMode',0,15,172,1,3
	.word	114446
	.byte	17,15,177,1,9,1,18
	.byte	'IfxDma_ChannelPattern_0_disable',0,0,18
	.byte	'IfxDma_ChannelPattern_0_mode1',0,1,18
	.byte	'IfxDma_ChannelPattern_0_mode2',0,2,18
	.byte	'IfxDma_ChannelPattern_0_mode3',0,3,18
	.byte	'IfxDma_ChannelPattern_1_disable',0,4,18
	.byte	'IfxDma_ChannelPattern_1_mode1',0,5,18
	.byte	'IfxDma_ChannelPattern_1_mode2',0,6,18
	.byte	'IfxDma_ChannelPattern_1_mode3',0,7,0,28
	.byte	'IfxDma_ChannelPattern',0,15,187,1,3
	.word	114568
	.byte	17,15,201,1,9,1,18
	.byte	'IfxDma_ChannelRequestMode_oneTransferPerRequest',0,0,18
	.byte	'IfxDma_ChannelRequestMode_completeTransactionPerRequest',0,1,0,28
	.byte	'IfxDma_ChannelRequestMode',0,15,205,1,3
	.word	114866
	.byte	17,15,210,1,9,1,18
	.byte	'IfxDma_ChannelRequestSource_peripheral',0,0,18
	.byte	'IfxDma_ChannelRequestSource_daisyChain',0,1,0,28
	.byte	'IfxDma_ChannelRequestSource',0,15,214,1,3
	.word	115016
	.byte	17,15,219,1,9,1,18
	.byte	'IfxDma_ChannelShadow_none',0,0,18
	.byte	'IfxDma_ChannelShadow_src',0,1,18
	.byte	'IfxDma_ChannelShadow_dst',0,2,18
	.byte	'IfxDma_ChannelShadow_srcDirectWrite',0,5,18
	.byte	'IfxDma_ChannelShadow_dstDirectWrite',0,6,18
	.byte	'IfxDma_ChannelShadow_doubleSourceBufferingSwSwitch',0,8,18
	.byte	'IfxDma_ChannelShadow_doubleSourceBufferingHwSwSwitch',0,9,18
	.byte	'IfxDma_ChannelShadow_doubleDestinationBufferingSwSwitch',0,10,18
	.byte	'IfxDma_ChannelShadow_doubleDestinationBufferingHwSwSwitch',0,11,18
	.byte	'IfxDma_ChannelShadow_linkedList',0,12,18
	.byte	'IfxDma_ChannelShadow_accumulatedLinkedList',0,13,18
	.byte	'IfxDma_ChannelShadow_safeLinkedList',0,14,18
	.byte	'IfxDma_ChannelShadow_conditionalLinkedList',0,15,0,28
	.byte	'IfxDma_ChannelShadow',0,15,234,1,3
	.word	115142
	.byte	17,15,246,1,9,1,18
	.byte	'IfxDma_MoveEngine_0',0,0,0,28
	.byte	'IfxDma_MoveEngine',0,15,249,1,3
	.word	115725
	.byte	17,15,254,1,9,1,18
	.byte	'IfxDma_SleepMode_enable',0,0,18
	.byte	'IfxDma_SleepMode_disable',0,1,0,28
	.byte	'IfxDma_SleepMode',0,15,130,2,3
	.word	115781
	.byte	20,33,187,3,9,4,12
	.byte	'dma',0
	.word	31391
	.byte	4,2,35,0,0,28
	.byte	'IfxDma_Dma',0,33,190,3,3
	.word	115867
	.byte	13
	.word	30518
	.byte	6
	.word	115907
	.byte	20,33,198,3,9,12,12
	.byte	'dma',0
	.word	31391
	.byte	4,2,35,0,12
	.byte	'channelId',0
	.word	31396
	.byte	1,2,35,4,12
	.byte	'channel',0
	.word	115912
	.byte	4,2,35,8,0,28
	.byte	'IfxDma_Dma_Channel',0,33,203,3,3
	.word	115917
	.byte	17,34,59,9,1,18
	.byte	'SpiIf_Status_ok',0,0,18
	.byte	'SpiIf_Status_busy',0,1,18
	.byte	'SpiIf_Status_unknown',0,2,0,28
	.byte	'SpiIf_Status',0,34,64,3
	.word	116001
	.byte	17,34,80,9,1,18
	.byte	'SpiIf_DataHeading_lsbFirst',0,0,18
	.byte	'SpiIf_DataHeading_msbFirst',0,1,0,28
	.byte	'SpiIf_DataHeading',0,34,84,3
	.word	116089
	.byte	17,34,87,9,1,18
	.byte	'SpiIf_ShiftClock_shiftTransmitDataOnLeadingEdge',0,0,18
	.byte	'SpiIf_ShiftClock_shiftTransmitDataOnTrailingEdge',0,1,0,28
	.byte	'SpiIf_ShiftClock',0,34,91,3
	.word	116179
	.byte	17,34,94,9,1,18
	.byte	'SpiIf_ClockPolarity_idleLow',0,0,18
	.byte	'SpiIf_ClockPolarity_idleHigh',0,1,0,28
	.byte	'SpiIf_ClockPolarity',0,34,98,3
	.word	116311
	.byte	6
	.word	.L139-.L17
	.byte	6
	.word	.L139-.L17
	.byte	32
	.word	116001
	.byte	1,1,33
	.word	116411
	.byte	33
	.word	32022
	.byte	33
	.word	201
	.byte	33
	.word	46771
	.byte	0,6
	.word	116416
	.byte	28
	.byte	'SpiIf_Exchange',0,34,128,1,24
	.word	116444
	.byte	32
	.word	116001
	.byte	1,1,33
	.word	116411
	.byte	0,6
	.word	116473
	.byte	28
	.byte	'SpiIf_GetStatus',0,34,129,1,24
	.word	116486
	.byte	6
	.word	.L140-.L17
	.byte	34,1,1,33
	.word	116516
	.byte	0,6
	.word	116521
	.byte	28
	.byte	'SpiIf_OnEvent',0,34,130,1,24
	.word	116530
	.byte	20,34,132,1,9,20,12
	.byte	'exchange',0
	.word	116449
	.byte	4,2,35,0,12
	.byte	'getStatus',0
	.word	116491
	.byte	4,2,35,4,12
	.byte	'onTx',0
	.word	116535
	.byte	4,2,35,8,12
	.byte	'onRx',0
	.word	116535
	.byte	4,2,35,12,12
	.byte	'onError',0
	.word	116535
	.byte	4,2,35,16,0
.L140:
	.byte	9
	.byte	'SpiIf_',0,34,141,1,8,40,12
	.byte	'driver',0
	.word	47076
	.byte	4,2,35,0,12
	.byte	'sending',0
	.word	19406
	.byte	4,2,35,4,12
	.byte	'activeChannel',0
	.word	116406
	.byte	4,2,35,8,12
	.byte	'txCount',0
	.word	19406
	.byte	4,2,35,12,12
	.byte	'rxCount',0
	.word	19406
	.byte	4,2,35,16,12
	.byte	'functions',0
	.word	116558
	.byte	20,2,35,20,0,6
	.word	116647
	.byte	20,34,108,18,1,10
	.byte	'onTransfer',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'byteAccess',0,1
	.word	305
	.byte	1,6,2,35,0,0,13
	.word	116775
	.byte	20,34,167,1,9,4,10
	.byte	'baudrate',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'phase',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'receive',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'transmit',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved',0,4
	.word	19406
	.byte	28,0,2,35,0,0,20,34,114,9,8,12
	.byte	'data',0
	.word	201
	.byte	4,2,35,0,12
	.byte	'remaining',0
	.word	46771
	.byte	2,2,35,4,0,34,1,1,33
	.word	201
	.byte	0,6
	.word	116972
	.byte	28
	.byte	'SpiIf_Cbk',0,34,196,1,16
	.word	116981
	.byte	34,1,1,33
	.word	116411
	.byte	0,6
	.word	117005
	.byte	28
	.byte	'TxRxHandler',0,34,197,1,16
	.word	117014
.L139:
	.byte	9
	.byte	'SpiIf_Ch_',0,34,199,1,8,48,12
	.byte	'driver',0
	.word	116770
	.byte	4,2,35,0,12
	.byte	'flags',0
	.word	116825
	.byte	1,2,35,4,12
	.byte	'errorChecks',0
	.word	116830
	.byte	4,2,35,6,12
	.byte	'baudrate',0
	.word	20268
	.byte	4,2,35,10,12
	.byte	'tx',0
	.word	116933
	.byte	8,2,35,16,12
	.byte	'rx',0
	.word	116933
	.byte	8,2,35,24,12
	.byte	'onExchangeEnd',0
	.word	116986
	.byte	4,2,35,32,12
	.byte	'callbackData',0
	.word	201
	.byte	4,2,35,36,12
	.byte	'txHandler',0
	.word	117019
	.byte	4,2,35,40,12
	.byte	'rxHandler',0
	.word	117019
	.byte	4,2,35,44,0,28
	.byte	'SpiIf_Ch',0,34,104,32
	.word	117040
	.byte	6
	.word	195
	.byte	6
	.word	116416
	.byte	6
	.word	116473
	.byte	6
	.word	116521
	.byte	6
	.word	116972
	.byte	6
	.word	117005
	.byte	20,34,177,1,9,4,10
	.byte	'enabled',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'autoCS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'loopback',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'clockPolarity',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'shiftClock',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'dataHeading',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'dataWidth',0,2
	.word	856
	.byte	6,4,2,35,0,10
	.byte	'csActiveLevel',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'csLeadDelay',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'csTrailDelay',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'csInactiveDelay',0,1
	.word	305
	.byte	3,2,2,35,2,10
	.byte	'parityCheck',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'parityMode',0,1
	.word	305
	.byte	1,0,2,35,2,0,9
	.byte	'SpiIf_ChConfig_',0,34,213,1,8,16,12
	.byte	'driver',0
	.word	116770
	.byte	4,2,35,0,12
	.byte	'baudrate',0
	.word	20695
	.byte	4,2,35,4,12
	.byte	'mode',0
	.word	117281
	.byte	4,2,35,8,12
	.byte	'errorChecks',0
	.word	116830
	.byte	4,2,35,12,0,28
	.byte	'SpiIf_ChConfig',0,34,105,32
	.word	117580
	.byte	28
	.byte	'SpiIf',0,34,106,32
	.word	116647
	.byte	13
	.word	116775
	.byte	28
	.byte	'SpiIf_Flags',0,34,112,3
	.word	117709
	.byte	28
	.byte	'SpiIf_Job',0,34,118,3
	.word	116933
	.byte	17,34,121,9,1,18
	.byte	'SpiIf_Mode_master',0,0,18
	.byte	'SpiIf_Mode_slave',0,1,18
	.byte	'SpiIf_Mode_undefined',0,2,0,28
	.byte	'SpiIf_Mode',0,34,126,3
	.word	117752
	.byte	28
	.byte	'SpiIf_funcs',0,34,139,1,3
	.word	116558
	.byte	20,34,151,1,9,20,12
	.byte	'mode',0
	.word	117752
	.byte	1,2,35,0,12
	.byte	'rxPriority',0
	.word	856
	.byte	2,2,35,2,12
	.byte	'txPriority',0
	.word	856
	.byte	2,2,35,4,12
	.byte	'erPriority',0
	.word	856
	.byte	2,2,35,6,12
	.byte	'isrProvider',0
	.word	42994
	.byte	1,2,35,8,12
	.byte	'bufferSize',0
	.word	46771
	.byte	2,2,35,10,12
	.byte	'buffer',0
	.word	201
	.byte	4,2,35,12,12
	.byte	'maximumBaudrate',0
	.word	20695
	.byte	4,2,35,16,0,28
	.byte	'SpiIf_Config',0,34,165,1,3
	.word	117860
	.byte	28
	.byte	'Spi_ErrorChecks',0,34,174,1,3
	.word	116830
	.byte	28
	.byte	'SpiIf_ChMode',0,34,193,1,3
	.word	117281
	.byte	28
	.byte	'Ifx_QSPI_ACCEN0_Bits',0,19,79,3
	.word	36286
	.byte	28
	.byte	'Ifx_QSPI_ACCEN1_Bits',0,19,85,3
	.word	36196
	.byte	28
	.byte	'Ifx_QSPI_BACON_Bits',0,19,103,3
	.word	33638
	.byte	28
	.byte	'Ifx_QSPI_BACONENTRY_Bits',0,19,109,3
	.word	35111
	.byte	28
	.byte	'Ifx_QSPI_CAPCON_Bits',0,19,124,3
	.word	35455
	.byte	28
	.byte	'Ifx_QSPI_CLC_Bits',0,19,134,1,3
	.word	32505
	.byte	28
	.byte	'Ifx_QSPI_DATAENTRY_Bits',0,19,140,1,3
	.word	35196
	.byte	28
	.byte	'Ifx_QSPI_ECON_Bits',0,19,154,1,3
	.word	33911
	.byte	28
	.byte	'Ifx_QSPI_FLAGSCLEAR_Bits',0,19,167,1,3
	.word	34702
	.byte	28
	.byte	'Ifx_QSPI_GLOBALCON1_Bits',0,19,186,1,3
	.word	33312
	.byte	28
	.byte	'Ifx_QSPI_GLOBALCON_Bits',0,19,205,1,3
	.word	33008
	.byte	28
	.byte	'Ifx_QSPI_ID_Bits',0,19,213,1,3
	.word	32885
	.byte	28
	.byte	'Ifx_QSPI_KRST0_Bits',0,19,221,1,3
	.word	36072
	.byte	28
	.byte	'Ifx_QSPI_KRST1_Bits',0,19,228,1,3
	.word	35967
	.byte	28
	.byte	'Ifx_QSPI_KRSTCLR_Bits',0,19,235,1,3
	.word	35860
	.byte	28
	.byte	'Ifx_QSPI_MIXENTRY_Bits',0,19,241,1,3
	.word	35027
	.byte	28
	.byte	'Ifx_QSPI_OCS_Bits',0,19,251,1,3
	.word	35699
	.byte	28
	.byte	'Ifx_QSPI_PISEL_Bits',0,19,136,2,3
	.word	32662
	.byte	28
	.byte	'Ifx_QSPI_RXEXIT_Bits',0,19,142,2,3
	.word	35290
	.byte	28
	.byte	'Ifx_QSPI_RXEXITD_Bits',0,19,148,2,3
	.word	35372
	.byte	28
	.byte	'Ifx_QSPI_SSOC_Bits',0,19,155,2,3
	.word	34605
	.byte	28
	.byte	'Ifx_QSPI_STATUS1_Bits',0,19,166,2,3
	.word	34429
	.byte	28
	.byte	'Ifx_QSPI_STATUS_Bits',0,19,184,2,3
	.word	34124
	.byte	28
	.byte	'Ifx_QSPI_XXLCON_Bits',0,19,191,2,3
	.word	34922
	.byte	28
	.byte	'Ifx_QSPI_ACCEN0',0,19,204,2,3
	.word	36816
	.byte	28
	.byte	'Ifx_QSPI_ACCEN1',0,19,212,2,3
	.word	36246
	.byte	28
	.byte	'Ifx_QSPI_BACON',0,19,220,2,3
	.word	33871
	.byte	28
	.byte	'Ifx_QSPI_BACONENTRY',0,19,228,2,3
	.word	35156
	.byte	28
	.byte	'Ifx_QSPI_CAPCON',0,19,236,2,3
	.word	35650
	.byte	28
	.byte	'Ifx_QSPI_CLC',0,19,244,2,3
	.word	32622
	.byte	28
	.byte	'Ifx_QSPI_DATAENTRY',0,19,252,2,3
	.word	35241
	.byte	28
	.byte	'Ifx_QSPI_ECON',0,19,132,3,3
	.word	34075
	.byte	28
	.byte	'Ifx_QSPI_FLAGSCLEAR',0,19,140,3,3
	.word	34882
	.byte	28
	.byte	'Ifx_QSPI_GLOBALCON',0,19,148,3,3
	.word	33272
	.byte	28
	.byte	'Ifx_QSPI_GLOBALCON1',0,19,156,3,3
	.word	33598
	.byte	28
	.byte	'Ifx_QSPI_ID',0,19,164,3,3
	.word	32968
	.byte	28
	.byte	'Ifx_QSPI_KRST0',0,19,172,3,3
	.word	36156
	.byte	28
	.byte	'Ifx_QSPI_KRST1',0,19,180,3,3
	.word	36032
	.byte	28
	.byte	'Ifx_QSPI_KRSTCLR',0,19,188,3,3
	.word	35927
	.byte	28
	.byte	'Ifx_QSPI_MIXENTRY',0,19,196,3,3
	.word	35071
	.byte	28
	.byte	'Ifx_QSPI_OCS',0,19,204,3,3
	.word	35820
	.byte	28
	.byte	'Ifx_QSPI_PISEL',0,19,212,3,3
	.word	32845
	.byte	28
	.byte	'Ifx_QSPI_RXEXIT',0,19,220,3,3
	.word	35332
	.byte	28
	.byte	'Ifx_QSPI_RXEXITD',0,19,228,3,3
	.word	35415
	.byte	28
	.byte	'Ifx_QSPI_SSOC',0,19,236,3,3
	.word	34662
	.byte	28
	.byte	'Ifx_QSPI_STATUS',0,19,244,3,3
	.word	34389
	.byte	28
	.byte	'Ifx_QSPI_STATUS1',0,19,252,3,3
	.word	34565
	.byte	28
	.byte	'Ifx_QSPI_XXLCON',0,19,132,4,3
	.word	34987
	.byte	13
	.word	36856
	.byte	28
	.byte	'Ifx_QSPI',0,19,175,4,3
	.word	119417
	.byte	20,35,39,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	43640
	.byte	1,2,35,12,0,21
	.word	119440
	.byte	28
	.byte	'IfxQspi_Mrst_In',0,35,44,3
	.word	119491
	.byte	20,35,47,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	43640
	.byte	1,2,35,12,0,21
	.word	119520
	.byte	28
	.byte	'IfxQspi_Mtsr_In',0,35,52,3
	.word	119571
	.byte	20,35,55,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	43640
	.byte	1,2,35,12,0,21
	.word	119600
	.byte	28
	.byte	'IfxQspi_Sclk_In',0,35,60,3
	.word	119651
	.byte	20,35,63,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	43640
	.byte	1,2,35,12,0,21
	.word	119680
	.byte	28
	.byte	'IfxQspi_Slsi_In',0,35,68,3
	.word	119731
	.byte	20,35,79,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	9031
	.byte	1,2,35,12,0,21
	.word	119760
	.byte	28
	.byte	'IfxQspi_Mrst_Out',0,35,84,3
	.word	119811
	.byte	20,35,87,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	9031
	.byte	1,2,35,12,0,21
	.word	119841
	.byte	28
	.byte	'IfxQspi_Mtsr_Out',0,35,92,3
	.word	119892
	.byte	20,35,95,15,16,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	9031
	.byte	1,2,35,12,0,21
	.word	119922
	.byte	28
	.byte	'IfxQspi_Sclk_Out',0,35,100,3
	.word	119973
	.byte	20,35,103,15,20,12
	.byte	'module',0
	.word	37405
	.byte	4,2,35,0,12
	.byte	'slsoNr',0
	.word	20268
	.byte	4,2,35,4,12
	.byte	'pin',0
	.word	43601
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	9031
	.byte	1,2,35,16,0,21
	.word	120003
	.byte	28
	.byte	'IfxQspi_Slso_Out',0,35,109,3
	.word	120070
	.byte	28
	.byte	'IfxQspi_ChannelId',0,18,76,3
	.word	37914
	.byte	17,18,126,9,1,18
	.byte	'IfxQspi_Mode_master',0,0,18
	.byte	'IfxQspi_Mode_pwmOverQspi',0,1,18
	.byte	'IfxQspi_Mode_slave',0,2,0,28
	.byte	'IfxQspi_Mode',0,18,131,1,3
	.word	120126
	.byte	17,18,135,1,9,1,18
	.byte	'IfxQspi_PauseRunTransition_pause',0,0,18
	.byte	'IfxQspi_PauseRunTransition_run',0,1,0,28
	.byte	'IfxQspi_PauseRunTransition',0,18,139,1,3
	.word	120224
	.byte	28
	.byte	'IfxQspi_Phase',0,18,154,1,3
	.word	37581
	.byte	17,18,158,1,9,1,18
	.byte	'IfxQspi_PhaseTransitionEvent_endOfWait',0,0,18
	.byte	'IfxQspi_PhaseTransitionEvent_serialClockPolarityChange',0,1,18
	.byte	'IfxQspi_PhaseTransitionEvent_startOfFrame',0,2,18
	.byte	'IfxQspi_PhaseTransitionEvent_transmitBufferEmptied',0,3,18
	.byte	'IfxQspi_PhaseTransitionEvent_receiveBufferFilled',0,4,18
	.byte	'IfxQspi_PhaseTransitionEvent_endOfFrame',0,5,18
	.byte	'IfxQspi_PhaseTransitionEvent_dataNotAvailable',0,6,18
	.byte	'IfxQspi_PhaseTransitionEvent_endOfExpect',0,7,0,28
	.byte	'IfxQspi_PhaseTransitionEvent',0,18,168,1,3
	.word	120358
	.byte	17,18,172,1,9,1,18
	.byte	'IfxQspi_Reset_none',0,0,18
	.byte	'IfxQspi_Reset_stateMachineAndFifo',0,1,18
	.byte	'IfxQspi_Reset_registers',0,2,18
	.byte	'IfxQspi_Reset_kernel',0,3,0,28
	.byte	'IfxQspi_Reset',0,18,178,1,3
	.word	120782
	.byte	17,18,182,1,9,1,18
	.byte	'IfxQspi_RxFifoInt_0',0,0,18
	.byte	'IfxQspi_RxFifoInt_1',0,1,18
	.byte	'IfxQspi_RxFifoInt_2',0,2,18
	.byte	'IfxQspi_RxFifoInt_3',0,3,0,28
	.byte	'IfxQspi_RxFifoInt',0,18,188,1,3
	.word	120918
	.byte	17,18,193,1,9,1,18
	.byte	'IfxQspi_SleepMode_enable',0,0,18
	.byte	'IfxQspi_SleepMode_disable',0,1,0,28
	.byte	'IfxQspi_SleepMode',0,18,197,1,3
	.word	121040
	.byte	17,18,239,1,9,1,18
	.byte	'IfxQspi_Suspend_none',0,0,18
	.byte	'IfxQspi_Suspend_hard',0,1,18
	.byte	'IfxQspi_Suspend_soft',0,2,0,28
	.byte	'IfxQspi_Suspend',0,18,244,1,3
	.word	121129
	.byte	17,18,248,1,9,1,18
	.byte	'IfxQspi_TxFifoInt_1',0,0,18
	.byte	'IfxQspi_TxFifoInt_2',0,1,18
	.byte	'IfxQspi_TxFifoInt_3',0,2,18
	.byte	'IfxQspi_TxFifoInt_4',0,3,0,28
	.byte	'IfxQspi_TxFifoInt',0,18,254,1,3
	.word	121230
	.byte	6
	.word	.L141-.L17
	.byte	34,1,1,33
	.word	121352
	.byte	0,6
	.word	121357
	.byte	28
	.byte	'IfxQspi_SpiMaster_AutoSlso',0,36,236,3,44
	.word	121366
	.byte	17,36,244,3,9,1,18
	.byte	'IfxQspi_SpiMaster_ChannelBasedCs_disabled',0,0,18
	.byte	'IfxQspi_SpiMaster_ChannelBasedCs_enabled',0,1,0,17,36,250,3,9,1,18
	.byte	'IfxQspi_SpiMaster_Mode_short',0,0,18
	.byte	'IfxQspi_SpiMaster_Mode_long',0,1,18
	.byte	'IfxQspi_SpiMaster_Mode_shortContinuous',0,2,18
	.byte	'IfxQspi_SpiMaster_Mode_longContinuous',0,3,18
	.byte	'IfxQspi_SpiMaster_Mode_xxl',0,4,0,20,36,182,4,9,1,10
	.byte	'parityError',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'configurationError',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'baudrateError',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'txFifoOverflowError',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'txFifoUnderflowError',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'rxFifoOverflowError',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'rxFifoUnderflowError',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'expectTimeoutError',0,1
	.word	305
	.byte	1,0,2,35,0,0
.L141:
	.byte	9
	.byte	'IfxQspi_SpiMaster_Channel_s',0,36,240,4,8,76,12
	.byte	'base',0
	.word	117040
	.byte	48,2,35,0,12
	.byte	'bacon',0
	.word	33871
	.byte	4,2,35,48,12
	.byte	'slso',0
	.word	43601
	.byte	8,2,35,52,12
	.byte	'activateSlso',0
	.word	121371
	.byte	4,2,35,60,12
	.byte	'deactivateSlso',0
	.word	121371
	.byte	4,2,35,64,12
	.byte	'channelId',0
	.word	37914
	.byte	1,2,35,68,12
	.byte	'slsoActiveState',0
	.word	47150
	.byte	1,2,35,69,12
	.byte	'dataWidth',0
	.word	305
	.byte	1,2,35,70,12
	.byte	'firstWrite',0
	.word	305
	.byte	1,2,35,71,12
	.byte	'channelBasedCs',0
	.word	121407
	.byte	1,2,35,72,12
	.byte	'mode',0
	.word	121501
	.byte	1,2,35,73,12
	.byte	'errorFlags',0
	.word	121679
	.byte	1,2,35,74,0,28
	.byte	'IfxQspi_SpiMaster_Channel',0,36,234,3,44
	.word	121920
	.byte	6
	.word	121357
	.byte	28
	.byte	'IfxQspi_SpiMaster_ChannelBasedCs',0,36,248,3,3
	.word	121407
	.byte	28
	.byte	'IfxQspi_SpiMaster_Mode',0,36,129,4,3
	.word	121501
	.byte	21
	.word	119680
	.byte	6
	.word	122299
	.byte	20,36,141,4,9,8,12
	.byte	'pin',0
	.word	122304
	.byte	4,2,35,0,12
	.byte	'mode',0
	.word	8757
	.byte	1,2,35,4,0,28
	.byte	'IfxQspi_SpiMaster_Input',0,36,145,4,3
	.word	122309
	.byte	21
	.word	120003
	.byte	6
	.word	122376
	.byte	20,36,149,4,9,8,12
	.byte	'pin',0
	.word	122381
	.byte	4,2,35,0,12
	.byte	'mode',0
	.word	8962
	.byte	1,2,35,4,12
	.byte	'driver',0
	.word	79656
	.byte	1,2,35,5,0,28
	.byte	'IfxQspi_SpiMaster_Output',0,36,154,4,3
	.word	122386
	.byte	20,36,162,4,9,28,12
	.byte	'rxDmaChannel',0
	.word	115917
	.byte	12,2,35,0,12
	.byte	'txDmaChannel',0
	.word	115917
	.byte	12,2,35,12,12
	.byte	'rxDmaChannelId',0
	.word	31396
	.byte	1,2,35,24,12
	.byte	'txDmaChannelId',0
	.word	31396
	.byte	1,2,35,25,12
	.byte	'useDma',0
	.word	305
	.byte	1,2,35,26,0,28
	.byte	'IfxQspi_SpiMaster_Dma',0,36,169,4,3
	.word	122470
	.byte	20,36,173,4,9,4,12
	.byte	'rxDmaChannelId',0
	.word	31396
	.byte	1,2,35,0,12
	.byte	'txDmaChannelId',0
	.word	31396
	.byte	1,2,35,1,12
	.byte	'useDma',0
	.word	305
	.byte	1,2,35,2,0,28
	.byte	'IfxQspi_SpiMaster_DmaConfig',0,36,178,4,3
	.word	122616
	.byte	28
	.byte	'IfxQspi_SpiMaster_ErrorFlags',0,36,192,4,3
	.word	121679
	.byte	11,36,196,4,9,8,12
	.byte	'input',0
	.word	122309
	.byte	8,2,35,0,12
	.byte	'output',0
	.word	122386
	.byte	8,2,35,0,0,28
	.byte	'IfxQspi_SpiMaster_InputOutput',0,36,200,4,3
	.word	122762
	.byte	21
	.word	119922
	.byte	6
	.word	122839
	.byte	21
	.word	119841
	.byte	6
	.word	122849
	.byte	21
	.word	119440
	.byte	6
	.word	122859
	.byte	20,36,204,4,9,24,12
	.byte	'sclk',0
	.word	122844
	.byte	4,2,35,0,12
	.byte	'sclkMode',0
	.word	8962
	.byte	1,2,35,4,12
	.byte	'mtsr',0
	.word	122854
	.byte	4,2,35,8,12
	.byte	'mtsrMode',0
	.word	8962
	.byte	1,2,35,12,12
	.byte	'mrst',0
	.word	122864
	.byte	4,2,35,16,12
	.byte	'mrstMode',0
	.word	8757
	.byte	1,2,35,20,12
	.byte	'pinDriver',0
	.word	79656
	.byte	1,2,35,21,0,28
	.byte	'IfxQspi_SpiMaster_Pins',0,36,213,4,3
	.word	122869
	.byte	20,36,221,4,9,72,12
	.byte	'base',0
	.word	116647
	.byte	40,2,35,0,12
	.byte	'qspi',0
	.word	37405
	.byte	4,2,35,40,12
	.byte	'dma',0
	.word	122470
	.byte	28,2,35,44,0,28
	.byte	'IfxQspi_SpiMaster',0,36,226,4,3
	.word	123023
	.byte	20,37,172,2,9,28,12
	.byte	'rxDmaChannel',0
	.word	115917
	.byte	12,2,35,0,12
	.byte	'txDmaChannel',0
	.word	115917
	.byte	12,2,35,12,12
	.byte	'rxDmaChannelId',0
	.word	31396
	.byte	1,2,35,24,12
	.byte	'txDmaChannelId',0
	.word	31396
	.byte	1,2,35,25,12
	.byte	'useDma',0
	.word	305
	.byte	1,2,35,26,0,28
	.byte	'IfxQspi_SpiSlave_Dma',0,37,179,2,3
	.word	123098
	.byte	20,37,183,2,9,4,12
	.byte	'rxDmaChannelId',0
	.word	31396
	.byte	1,2,35,0,12
	.byte	'txDmaChannelId',0
	.word	31396
	.byte	1,2,35,1,12
	.byte	'useDma',0
	.word	305
	.byte	1,2,35,2,0,28
	.byte	'IfxQspi_SpiSlave_DmaConfig',0,37,188,2,3
	.word	123243
	.byte	20,37,192,2,9,2,10
	.byte	'parityError',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'configurationError',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'baudrateError',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'txFifoOverflowError',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'txFifoUnderflowError',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'rxFifoOverflowError',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'rxFifoUnderflowError',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'expectTimeoutError',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'slsiMisplacedInactivation',0,1
	.word	305
	.byte	1,7,2,35,1,0,28
	.byte	'IfxQspi_SpiSlave_ErrorFlags',0,37,203,2,3
	.word	123350
	.byte	21
	.word	119600
	.byte	6
	.word	123665
	.byte	21
	.word	119520
	.byte	6
	.word	123675
	.byte	21
	.word	119760
	.byte	6
	.word	123685
	.byte	20,37,207,2,9,32,12
	.byte	'sclk',0
	.word	123670
	.byte	4,2,35,0,12
	.byte	'sclkMode',0
	.word	8757
	.byte	1,2,35,4,12
	.byte	'mtsr',0
	.word	123680
	.byte	4,2,35,8,12
	.byte	'mtsrMode',0
	.word	8757
	.byte	1,2,35,12,12
	.byte	'mrst',0
	.word	123690
	.byte	4,2,35,16,12
	.byte	'mrstMode',0
	.word	8962
	.byte	1,2,35,20,12
	.byte	'slsi',0
	.word	122304
	.byte	4,2,35,24,12
	.byte	'slsiMode',0
	.word	8757
	.byte	1,2,35,28,12
	.byte	'pinDriver',0
	.word	79656
	.byte	1,2,35,29,0,28
	.byte	'IfxQspi_SpiSlave_Pins',0,37,218,2,3
	.word	123695
	.byte	20,37,222,2,9,6,12
	.byte	'clockPolarity',0
	.word	116311
	.byte	1,2,35,0,12
	.byte	'shiftClock',0
	.word	116179
	.byte	1,2,35,1,12
	.byte	'dataHeading',0
	.word	116089
	.byte	1,2,35,2,12
	.byte	'dataWidth',0
	.word	305
	.byte	1,2,35,3,12
	.byte	'parityMode',0
	.word	47225
	.byte	1,2,35,4,0,28
	.byte	'IfxQspi_SpiSlave_Protocol',0,37,229,2,3
	.word	123880
	.byte	20,37,237,2,9,100,12
	.byte	'base',0
	.word	116647
	.byte	40,2,35,0,12
	.byte	'qspi',0
	.word	37405
	.byte	4,2,35,40,12
	.byte	'dataWidth',0
	.word	305
	.byte	1,2,35,44,12
	.byte	'rxJob',0
	.word	116933
	.byte	8,2,35,48,12
	.byte	'txJob',0
	.word	116933
	.byte	8,2,35,56,12
	.byte	'onTransfer',0
	.word	305
	.byte	1,2,35,64,12
	.byte	'dma',0
	.word	123098
	.byte	28,2,35,68,12
	.byte	'errorFlags',0
	.word	123350
	.byte	2,2,35,96,0,28
	.byte	'IfxQspi_SpiSlave',0,37,247,2,3
	.word	124025
	.byte	14,32
	.word	305
	.byte	15,31,0,20,38,52,9,160,1,12
	.byte	'spi1TxBuffer',0
	.word	124188
	.byte	32,2,35,0,12
	.byte	'spi1RxBuffer',0
	.word	124188
	.byte	32,2,35,32,12
	.byte	'spi0TxBuffer',0
	.word	124188
	.byte	32,2,35,64,12
	.byte	'spi0RxBuffer',0
	.word	124188
	.byte	32,2,35,96,12
	.byte	'spi0RxBuffer_temp',0
	.word	124188
	.byte	32,3,35,128,1,0,28
	.byte	'AppQspiBuffer',0,38,62,3
	.word	124197
	.byte	20,26,23,5,92,12
	.byte	'can',0
	.word	42830
	.byte	4,2,35,0,12
	.byte	'canSrcNode',0
	.word	43336
	.byte	12,2,35,4,12
	.byte	'canDstNode',0
	.word	43336
	.byte	12,2,35,16,12
	.byte	'canMsgObj_367',0
	.word	44895
	.byte	16,2,35,28,12
	.byte	'canMsgObj_2B0',0
	.word	44895
	.byte	16,2,35,44,12
	.byte	'canMsgObj_316',0
	.word	44895
	.byte	16,2,35,60,12
	.byte	'canMsgObj_329',0
	.word	44895
	.byte	16,2,35,76,0
.L129:
	.byte	20,26,21,9,92,12
	.byte	'drivers',0
	.word	124342
	.byte	92,2,35,0,0,28
	.byte	'App_Ccan_struct',0,26,35,3
	.word	124493
	.byte	28
	.byte	'CCAN_CGW_PC5_High',0,26,43,2
	.word	46311
	.byte	28
	.byte	'CCAN_EMS_329_HIGH',0,26,52,2
	.word	46358
	.byte	28
	.byte	'CCAN_EMS_316_LOW',0,26,60,2
	.word	46467
	.byte	28
	.byte	'CCAN_EMS_316_HIGH',0,26,67,2
	.word	46553
	.byte	17,20,131,1,9,1,18
	.byte	'IfxStm_Comparator_0',0,0,18
	.byte	'IfxStm_Comparator_1',0,1,0,28
	.byte	'IfxStm_Comparator',0,20,135,1,3
	.word	124643
	.byte	17,20,139,1,9,1,18
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,18
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,28
	.byte	'IfxStm_ComparatorInterrupt',0,20,143,1,3
	.word	124721
	.byte	17,20,147,1,9,1,18
	.byte	'IfxStm_ComparatorOffset_0',0,0,18
	.byte	'IfxStm_ComparatorOffset_1',0,1,18
	.byte	'IfxStm_ComparatorOffset_2',0,2,18
	.byte	'IfxStm_ComparatorOffset_3',0,3,18
	.byte	'IfxStm_ComparatorOffset_4',0,4,18
	.byte	'IfxStm_ComparatorOffset_5',0,5,18
	.byte	'IfxStm_ComparatorOffset_6',0,6,18
	.byte	'IfxStm_ComparatorOffset_7',0,7,18
	.byte	'IfxStm_ComparatorOffset_8',0,8,18
	.byte	'IfxStm_ComparatorOffset_9',0,9,18
	.byte	'IfxStm_ComparatorOffset_10',0,10,18
	.byte	'IfxStm_ComparatorOffset_11',0,11,18
	.byte	'IfxStm_ComparatorOffset_12',0,12,18
	.byte	'IfxStm_ComparatorOffset_13',0,13,18
	.byte	'IfxStm_ComparatorOffset_14',0,14,18
	.byte	'IfxStm_ComparatorOffset_15',0,15,18
	.byte	'IfxStm_ComparatorOffset_16',0,16,18
	.byte	'IfxStm_ComparatorOffset_17',0,17,18
	.byte	'IfxStm_ComparatorOffset_18',0,18,18
	.byte	'IfxStm_ComparatorOffset_19',0,19,18
	.byte	'IfxStm_ComparatorOffset_20',0,20,18
	.byte	'IfxStm_ComparatorOffset_21',0,21,18
	.byte	'IfxStm_ComparatorOffset_22',0,22,18
	.byte	'IfxStm_ComparatorOffset_23',0,23,18
	.byte	'IfxStm_ComparatorOffset_24',0,24,18
	.byte	'IfxStm_ComparatorOffset_25',0,25,18
	.byte	'IfxStm_ComparatorOffset_26',0,26,18
	.byte	'IfxStm_ComparatorOffset_27',0,27,18
	.byte	'IfxStm_ComparatorOffset_28',0,28,18
	.byte	'IfxStm_ComparatorOffset_29',0,29,18
	.byte	'IfxStm_ComparatorOffset_30',0,30,18
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,28
	.byte	'IfxStm_ComparatorOffset',0,20,181,1,3
	.word	124830
	.byte	17,20,185,1,9,1,18
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,18
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,18
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,18
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,18
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,18
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,18
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,18
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,18
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,18
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,18
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,18
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,18
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,18
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,18
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,18
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,18
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,18
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,18
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,18
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,18
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,18
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,18
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,18
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,18
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,18
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,18
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,18
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,18
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,18
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,18
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,18
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,28
	.byte	'IfxStm_ComparatorSize',0,20,219,1,3
	.word	125788
	.byte	17,20,224,1,9,1,18
	.byte	'IfxStm_SleepMode_enable',0,0,18
	.byte	'IfxStm_SleepMode_disable',0,1,0,28
	.byte	'IfxStm_SleepMode',0,20,228,1,3
	.word	126808
	.byte	14,16
	.word	305
	.byte	15,15,0,20,39,25,9,80,12
	.byte	'spi_data_tx',0
	.word	126894
	.byte	16,2,35,0,12
	.byte	'spi_data_rx',0
	.word	126894
	.byte	16,2,35,16,12
	.byte	'spi_data_field_tx',0
	.word	126894
	.byte	16,2,35,32,12
	.byte	'spi_data_rx_2',0
	.word	124188
	.byte	32,2,35,48,0,28
	.byte	'App_spi_msg',0,39,35,2
	.word	126903
	.byte	20,39,37,9,1,10
	.byte	'Mcu_ver',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'Wakup_src',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'CurVehicleState',0,1
	.word	305
	.byte	2,0,2,35,0,0,28
	.byte	'DATA0_STRUCT',0,39,42,2
	.word	127021
	.byte	20,39,44,9,1,10
	.byte	'Veh_ACC',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'Veh_bat_out',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'Emg_mode',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'Impact_rec',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'Soc_off_req',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'Rear_Cam_input',0,1
	.word	305
	.byte	2,1,2,35,0,0,28
	.byte	'DATA4_STRUCT',0,39,53,2
	.word	127115
	.byte	20,39,55,9,1,10
	.byte	'SoC_OFF_Flag',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PRK_AX_SENS',0,1
	.word	305
	.byte	3,4,2,35,0,10
	.byte	'DRV_AX_SENS',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'Reserved',0,1
	.word	305
	.byte	1,0,2,35,0,0,28
	.byte	'RX_DATA0',0,39,62,2
	.word	127275
	.byte	20,39,74,9,1,10
	.byte	'VEH_GEAR',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'VEH_BRAKE',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'RESERVED',0,1
	.word	305
	.byte	2,0,2,35,0,0,28
	.byte	'DATA5_STRUCT',0,39,80,2
	.word	127388
	.byte	30
	.byte	'g_spi_msg',0,39,95,20
	.word	126903
	.byte	1,1,30
	.byte	'veh_gear_disp',0,39,96,14
	.word	305
	.byte	1,1,30
	.byte	'veh_break',0,39,109,14
	.word	305
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L18:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,11,1,0,0,17,4,1,58,15,59,15,57,15
	.byte	11,15,0,0,18,40,0,3,8,28,13,0,0,19,13,0,73,19,11,15,56,9,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38
	.byte	0,73,19,0,0,22,46,1,49,19,0,0,23,5,0,49,19,0,0,24,29,1,49,19,0,0,25,11,0,49,19,0,0,26,46,1,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,29,21,0,54,15,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12
	.byte	0,0,31,21,0,54,15,39,12,0,0,32,21,1,73,19,54,15,39,12,0,0,33,5,0,73,19,0,0,34,21,1,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L19:
	.word	.L143-.L142
.L142:
	.half	3
	.word	.L145-.L144
.L144:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0
	.byte	'IfxCan_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxMultican_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Dma\\Std\\IfxDma.h',0
	.byte	0,0,0
	.byte	'IfxDma_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxDma_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Qspi\\Std\\IfxQspi.h',0
	.byte	0,0,0
	.byte	'IfxQspi_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Can\\IfxMultican_Can.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxMultican_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'Ccan.h',0,2,0,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'stdio.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Dma\\Dma\\IfxDma_Dma.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\If\\SpiIf.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxQspi_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Qspi\\SpiMaster\\IfxQspi_SpiMaster.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Qspi\\SpiSlave\\IfxQspi_SpiSlave.h',0
	.byte	0,0,0
	.byte	'QspiCpuDemo.h',0,2,0,0
	.byte	'Spisoc.h',0,2,0,0,0
.L145:
.L143:
	.sdecl	'.debug_info',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_info'
.L20:
	.word	288
	.half	3
	.word	.L21
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L23,.L22
	.byte	2
	.word	.L16
	.byte	3
	.byte	'init_Ccan_Trans',0,1,18,6,1,1,1
	.word	.L3,.L65,.L2
	.byte	4
	.word	.L3,.L65
	.byte	5
	.word	.L66,.L3,.L67
	.byte	6
	.word	.L68,.L69
	.byte	6
	.word	.L70,.L71
	.byte	7
	.word	.L72,.L3,.L67
	.byte	5
	.word	.L73,.L3,.L67
	.byte	6
	.word	.L74,.L75
	.byte	6
	.word	.L76,.L77
	.byte	6
	.word	.L78,.L79
	.byte	8
	.word	.L80,.L81
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_abbrev'
.L21:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_line'
.L22:
	.word	.L147-.L146
.L146:
	.half	3
	.word	.L149-.L148
.L148:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L149:
	.byte	4,2,5,26,7,0,5,2
	.word	.L3
	.byte	3,144,4,1,5,17,9
	.half	.L150-.L3
	.byte	1,4,1,5,1,9
	.half	.L67-.L150
	.byte	3,137,124,1,7,9
	.half	.L24-.L67
	.byte	0,1,1
.L147:
	.sdecl	'.debug_ranges',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_ranges'
.L23:
	.word	-1,.L3,0,.L24-.L3,0,0
.L81:
	.word	-1,.L3,0,.L67-.L3,-1,.L5,0,.L54-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('init_Ccan')
	.sect	'.debug_info'
.L25:
	.word	396
	.half	3
	.word	.L26
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L28,.L27
	.byte	2
	.word	.L16
	.byte	3
	.byte	'init_Ccan',0,1,38,6,1,1,1
	.word	.L9,.L82,.L8
	.byte	4
	.word	.L9,.L82
	.byte	5
	.byte	'canConfig',0,1,41,29
	.word	.L83,.L84
	.byte	4
	.word	.L85,.L82
	.byte	5
	.byte	'canNodeConfig',0,1,48,33
	.word	.L86,.L87
	.byte	4
	.word	.L88,.L89
	.byte	5
	.byte	'canMsgObjConfig',0,1,68,39
	.word	.L90,.L91
	.byte	0,4
	.word	.L89,.L92
	.byte	5
	.byte	'canMsgObjConfig',0,1,85,39
	.word	.L90,.L93
	.byte	0,4
	.word	.L92,.L94
	.byte	5
	.byte	'canMsgObjConfig',0,1,101,39
	.word	.L90,.L95
	.byte	0,4
	.word	.L94,.L82
	.byte	5
	.byte	'canMsgObjConfig',0,1,117,39
	.word	.L90,.L96
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Ccan')
	.sect	'.debug_abbrev'
.L26:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Ccan')
	.sect	'.debug_line'
.L27:
	.word	.L152-.L151
.L151:
	.half	3
	.word	.L154-.L153
.L153:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0,0
.L154:
	.byte	5,52,7,0,5,2
	.word	.L9
	.byte	3,41,1,5,6,9
	.half	.L155-.L9
	.byte	3,124,1,5,52,9
	.half	.L131-.L155
	.byte	3,4,1,5,40,9
	.half	.L156-.L131
	.byte	1,5,52,9
	.half	.L157-.L156
	.byte	1,5,34,9
	.half	.L158-.L157
	.byte	3,3,1,5,55,9
	.half	.L159-.L158
	.byte	1,5,39,9
	.half	.L85-.L159
	.byte	3,4,1,5,69,9
	.half	.L160-.L85
	.byte	1,5,31,9
	.half	.L161-.L160
	.byte	3,2,1,5,29,9
	.half	.L162-.L161
	.byte	1,5,36,9
	.half	.L163-.L162
	.byte	3,5,1,5,34,1,5,37,9
	.half	.L164-.L163
	.byte	3,1,1,5,34,9
	.half	.L165-.L164
	.byte	1,5,36,9
	.half	.L166-.L165
	.byte	3,1,1,5,34,1,5,37,9
	.half	.L167-.L166
	.byte	3,1,1,5,34,9
	.half	.L168-.L167
	.byte	1,5,36,9
	.half	.L169-.L168
	.byte	3,1,1,5,34,1,5,51,9
	.half	.L170-.L169
	.byte	3,2,1,5,65,9
	.half	.L171-.L170
	.byte	1,5,45,9
	.half	.L88-.L171
	.byte	3,7,1,5,77,9
	.half	.L172-.L88
	.byte	1,5,50,9
	.half	.L173-.L172
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L174-.L173
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L175-.L174
	.byte	3,1,1,5,48,9
	.half	.L176-.L175
	.byte	1,9
	.half	.L177-.L176
	.byte	3,1,1,5,50,9
	.half	.L178-.L177
	.byte	3,1,1,5,48,1,5,53,9
	.half	.L179-.L178
	.byte	3,5,1,5,25,9
	.half	.L180-.L179
	.byte	3,124,1,5,70,9
	.half	.L181-.L180
	.byte	3,4,1,5,48,9
	.half	.L182-.L181
	.byte	3,124,1,5,70,9
	.half	.L183-.L182
	.byte	3,4,1,5,45,9
	.half	.L89-.L183
	.byte	3,6,1,5,77,9
	.half	.L184-.L89
	.byte	1,5,50,9
	.half	.L185-.L184
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L186-.L185
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L187-.L186
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L188-.L187
	.byte	3,1,1,5,50,9
	.half	.L189-.L188
	.byte	3,1,1,5,48,1,5,53,9
	.half	.L190-.L189
	.byte	3,5,1,5,25,9
	.half	.L191-.L190
	.byte	3,124,1,5,70,9
	.half	.L192-.L191
	.byte	3,4,1,5,48,9
	.half	.L193-.L192
	.byte	3,124,1,5,70,9
	.half	.L194-.L193
	.byte	3,4,1,5,45,9
	.half	.L92-.L194
	.byte	3,5,1,5,77,9
	.half	.L195-.L92
	.byte	1,5,50,9
	.half	.L196-.L195
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L197-.L196
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L198-.L197
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L199-.L198
	.byte	3,1,1,5,50,9
	.half	.L200-.L199
	.byte	3,1,1,5,48,1,5,53,9
	.half	.L201-.L200
	.byte	3,5,1,5,25,9
	.half	.L202-.L201
	.byte	3,124,1,5,70,9
	.half	.L203-.L202
	.byte	3,4,1,5,48,9
	.half	.L204-.L203
	.byte	3,124,1,5,70,9
	.half	.L205-.L204
	.byte	3,4,1,5,45,9
	.half	.L94-.L205
	.byte	3,5,1,5,77,9
	.half	.L206-.L94
	.byte	1,5,50,9
	.half	.L207-.L206
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L208-.L207
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L209-.L208
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L210-.L209
	.byte	3,1,1,5,50,9
	.half	.L211-.L210
	.byte	3,1,1,5,48,1,5,53,9
	.half	.L212-.L211
	.byte	3,5,1,5,25,9
	.half	.L213-.L212
	.byte	3,124,1,5,70,9
	.half	.L214-.L213
	.byte	3,4,1,5,48,9
	.half	.L215-.L214
	.byte	3,124,1,5,70,9
	.half	.L216-.L215
	.byte	3,4,1,5,1,7,9
	.half	.L29-.L216
	.byte	3,4,0,1,1
.L152:
	.sdecl	'.debug_ranges',debug,cluster('init_Ccan')
	.sect	'.debug_ranges'
.L28:
	.word	-1,.L9,0,.L29-.L9,0,0
	.sdecl	'.debug_info',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_info'
.L30:
	.word	293
	.half	3
	.word	.L31
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L33,.L32
	.byte	2
	.word	.L16
	.byte	3
	.byte	'sleep_Ccan_Trans',0,1,28,6,1,1,1
	.word	.L7,.L97,.L6
	.byte	4
	.word	.L7,.L97
	.byte	5
	.word	.L98,.L7,.L99
	.byte	6
	.word	.L100,.L101
	.byte	6
	.word	.L102,.L103
	.byte	7
	.word	.L104,.L7,.L99
	.byte	5
	.word	.L73,.L7,.L99
	.byte	6
	.word	.L74,.L105
	.byte	6
	.word	.L76,.L106
	.byte	6
	.word	.L78,.L107
	.byte	8
	.word	.L80,.L7,.L99
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_abbrev'
.L31:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_line'
.L32:
	.word	.L218-.L217
.L217:
	.half	3
	.word	.L220-.L219
.L219:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L220:
	.byte	4,2,5,26,7,0,5,2
	.word	.L7
	.byte	3,144,4,1,5,17,9
	.half	.L221-.L7
	.byte	1,4,1,5,1,9
	.half	.L99-.L221
	.byte	3,147,124,1,7,9
	.half	.L34-.L99
	.byte	0,1,1
.L218:
	.sdecl	'.debug_ranges',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_ranges'
.L33:
	.word	-1,.L7,0,.L34-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('init_Ccan_msg')
	.sect	'.debug_info'
.L35:
	.word	475
	.half	3
	.word	.L36
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L38,.L37
	.byte	2
	.word	.L16
	.byte	3
	.byte	'init_Ccan_msg',0,1,135,1,6,1,1,1
	.word	.L11,.L108,.L10
	.byte	4
	.word	.L11,.L108
	.byte	5
	.word	.L109,.L11,.L110
	.byte	6
	.word	.L111,.L112
	.byte	6
	.word	.L113,.L114
	.byte	6
	.word	.L115,.L116
	.byte	6
	.word	.L117,.L118
	.byte	6
	.word	.L119,.L120
	.byte	7
	.word	.L121,.L11,.L110
	.byte	0,5
	.word	.L109,.L110,.L122
	.byte	6
	.word	.L111,.L112
	.byte	6
	.word	.L113,.L114
	.byte	6
	.word	.L115,.L116
	.byte	6
	.word	.L117,.L118
	.byte	6
	.word	.L119,.L120
	.byte	8
	.word	.L121,.L123
	.byte	0,5
	.word	.L109,.L122,.L124
	.byte	6
	.word	.L111,.L112
	.byte	6
	.word	.L113,.L114
	.byte	6
	.word	.L115,.L116
	.byte	6
	.word	.L117,.L118
	.byte	6
	.word	.L119,.L120
	.byte	7
	.word	.L121,.L122,.L124
	.byte	0,5
	.word	.L109,.L124,.L125
	.byte	6
	.word	.L111,.L112
	.byte	6
	.word	.L113,.L114
	.byte	6
	.word	.L115,.L116
	.byte	6
	.word	.L117,.L118
	.byte	6
	.word	.L119,.L120
	.byte	7
	.word	.L121,.L124,.L125
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Ccan_msg')
	.sect	'.debug_abbrev'
.L36:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Ccan_msg')
	.sect	'.debug_line'
.L37:
	.word	.L223-.L222
.L222:
	.half	3
	.word	.L225-.L224
.L224:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0,0
.L225:
	.byte	5,28,7,0,5,2
	.word	.L11
	.byte	3,136,1,1,4,2,5,24,9
	.half	.L226-.L11
	.byte	3,157,7,1,5,22,1,5,24,9
	.half	.L227-.L226
	.byte	3,1,1,5,22,1,9
	.half	.L228-.L227
	.byte	3,1,1,5,24,9
	.half	.L229-.L228
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L230-.L229
	.byte	3,2,1,5,22,1,4,1,5,28,9
	.half	.L110-.L230
	.byte	3,223,120,1,4,2,5,24,9
	.half	.L231-.L110
	.byte	3,156,7,1,5,22,1,4,1,5,28,9
	.half	.L122-.L231
	.byte	3,229,120,1,4,2,5,24,9
	.half	.L232-.L122
	.byte	3,155,7,1,5,22,1,4,1,5,28,9
	.half	.L124-.L232
	.byte	3,230,120,1,4,2,5,24,9
	.half	.L233-.L124
	.byte	3,154,7,1,5,22,1,4,1,5,1,9
	.half	.L125-.L233
	.byte	3,233,120,1,7,9
	.half	.L39-.L125
	.byte	0,1,1
.L223:
	.sdecl	'.debug_ranges',debug,cluster('init_Ccan_msg')
	.sect	'.debug_ranges'
.L38:
	.word	-1,.L11,0,.L39-.L11,0,0
.L123:
	.word	-1,.L11,.L110-.L11,.L122-.L11,-1,.L13,0,.L49-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_info'
.L40:
	.word	212
	.half	3
	.word	.L41
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L43,.L42
	.byte	2
	.word	.L16
	.byte	3
	.byte	'Recieve_Ccan_10ms',0,1,145,1,6,1,1,1
	.word	.L15,.L126,.L14
	.byte	4
	.word	.L15,.L126
	.byte	5
	.byte	'msg',0,1,147,1,11
	.word	.L127,.L128
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_abbrev'
.L41:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_line'
.L42:
	.word	.L235-.L234
.L234:
	.half	3
	.word	.L237-.L236
.L236:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0,0
.L237:
	.byte	5,6,7,0,5,2
	.word	.L15
	.byte	3,144,1,1,5,102,9
	.half	.L132-.L15
	.byte	3,5,1,5,71,9
	.half	.L238-.L132
	.byte	1,5,85,9
	.half	.L239-.L238
	.byte	1,5,102,9
	.half	.L240-.L239
	.byte	1,5,82,9
	.half	.L241-.L240
	.byte	3,1,1,5,65,9
	.half	.L242-.L241
	.byte	1,5,82,9
	.half	.L243-.L242
	.byte	1,9
	.half	.L244-.L243
	.byte	3,1,1,5,65,9
	.half	.L245-.L244
	.byte	1,5,82,9
	.half	.L246-.L245
	.byte	1,9
	.half	.L247-.L246
	.byte	3,1,1,5,65,9
	.half	.L248-.L247
	.byte	1,5,82,9
	.half	.L249-.L248
	.byte	1,5,43,9
	.half	.L250-.L249
	.byte	3,3,1,5,2,9
	.half	.L251-.L250
	.byte	3,2,1,5,46,9
	.half	.L252-.L251
	.byte	3,126,1,5,16,1,5,2,9
	.half	.L253-.L252
	.byte	3,2,1,5,52,9
	.half	.L254-.L253
	.byte	1,5,33,9
	.half	.L255-.L254
	.byte	1,5,77,9
	.half	.L256-.L255
	.byte	3,1,1,5,33,1,5,31,9
	.half	.L257-.L256
	.byte	3,2,1,5,50,9
	.half	.L133-.L257
	.byte	3,1,1,5,33,1,5,50,9
	.half	.L258-.L133
	.byte	3,1,1,5,33,1,5,31,9
	.half	.L134-.L258
	.byte	3,2,1,5,51,9
	.half	.L135-.L134
	.byte	3,1,1,5,33,1,5,31,9
	.half	.L136-.L135
	.byte	3,2,1,5,51,9
	.half	.L137-.L136
	.byte	3,1,1,5,33,1,5,52,9
	.half	.L259-.L137
	.byte	3,1,1,5,34,1,5,30,9
	.half	.L260-.L259
	.byte	3,2,1,5,12,1,5,1,9
	.half	.L138-.L260
	.byte	3,3,1,7,9
	.half	.L44-.L138
	.byte	0,1,1
.L235:
	.sdecl	'.debug_ranges',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_ranges'
.L43:
	.word	-1,.L15,0,.L44-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L45:
	.word	175
	.half	3
	.word	.L46
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L48,.L47
	.byte	2
	.word	.L16
	.byte	3
	.byte	'.cocofun_7',0,1,135,1,6,1
	.word	.L13,.L49,.L12
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L47:
	.word	.L262-.L261
.L261:
	.half	3
	.word	.L264-.L263
.L263:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0,0
.L264:
	.byte	4,2,5,22,7,0,5,2
	.word	.L13
	.byte	3,165,8,1,9
	.half	.L265-.L13
	.byte	3,1,1,9
	.half	.L266-.L265
	.byte	3,1,1,9
	.half	.L267-.L266
	.byte	3,1,1,9
	.half	.L268-.L267
	.byte	3,2,1,9
	.half	.L49-.L268
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L13
	.byte	3,165,8,1,9
	.half	.L265-.L13
	.byte	3,1,1,9
	.half	.L266-.L265
	.byte	3,1,1,9
	.half	.L267-.L266
	.byte	3,1,1,9
	.half	.L268-.L267
	.byte	3,2,1,9
	.half	.L49-.L268
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L13
	.byte	3,165,8,1,9
	.half	.L265-.L13
	.byte	3,1,1,9
	.half	.L266-.L265
	.byte	3,1,1,9
	.half	.L267-.L266
	.byte	3,1,1,9
	.half	.L268-.L267
	.byte	3,2,1,9
	.half	.L49-.L268
	.byte	0,1,1
.L262:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L48:
	.word	-1,.L13,0,.L49-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L50:
	.word	174
	.half	3
	.word	.L51
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L53,.L52
	.byte	2
	.word	.L16
	.byte	3
	.byte	'.cocofun_8',0,1,18,6,1
	.word	.L5,.L54,.L4
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L52:
	.word	.L270-.L269
.L269:
	.half	3
	.word	.L272-.L271
.L271:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Ccan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L272:
	.byte	4,2,5,17,7,0,5,2
	.word	.L5
	.byte	3,144,4,1,5,26,9
	.half	.L273-.L5
	.byte	1,5,17,9
	.half	.L274-.L273
	.byte	1,9
	.half	.L54-.L274
	.byte	0,1,1,4,2,5,17,0,5,2
	.word	.L5
	.byte	3,144,4,1,5,26,9
	.half	.L273-.L5
	.byte	1,5,17,9
	.half	.L274-.L273
	.byte	1,9
	.half	.L54-.L274
	.byte	0,1,1
.L270:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L53:
	.word	-1,.L5,0,.L54-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('g_Ccan')
	.sect	'.debug_info'
.L55:
	.word	160
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L16
	.byte	3
	.byte	'g_Ccan',0,27,11,17
	.word	.L129
	.byte	1,5,3
	.word	g_Ccan
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_Ccan')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Ccan_msg_2B0')
	.sect	'.debug_info'
.L57:
	.word	166
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L16
	.byte	3
	.byte	'Ccan_msg_2B0',0,27,13,21
	.word	.L130
	.byte	1,5,3
	.word	Ccan_msg_2B0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ccan_msg_2B0')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Ccan_msg_367')
	.sect	'.debug_info'
.L59:
	.word	166
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L16
	.byte	3
	.byte	'Ccan_msg_367',0,27,14,21
	.word	.L130
	.byte	1,5,3
	.word	Ccan_msg_367
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ccan_msg_367')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Ccan_msg_316')
	.sect	'.debug_info'
.L61:
	.word	166
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L16
	.byte	3
	.byte	'Ccan_msg_316',0,27,15,21
	.word	.L130
	.byte	1,5,3
	.word	Ccan_msg_316
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ccan_msg_316')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Ccan_msg_329')
	.sect	'.debug_info'
.L63:
	.word	166
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'..\\APP\\src\\Ccan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L16
	.byte	3
	.byte	'Ccan_msg_329',0,27,16,21
	.word	.L130
	.byte	1,5,3
	.word	Ccan_msg_329
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ccan_msg_329')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L12:
	.word	-1,.L13,0,.L49-.L13
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L54-.L5
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_loc'
.L14:
	.word	-1,.L15,0,.L132-.L15
	.half	2
	.byte	138,0
	.word	.L132-.L15,.L126-.L15
	.half	2
	.byte	138,8
	.word	.L126-.L15,.L126-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L128:
	.word	-1,.L15,.L133-.L15,.L134-.L15
	.half	1
	.byte	95
	.word	.L135-.L15,.L136-.L15
	.half	1
	.byte	95
	.word	.L137-.L15,.L138-.L15
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Ccan')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L9,0,.L82-.L9
	.half	3
	.byte	145,184,126
	.word	0,0
.L91:
	.word	-1,.L9,0,.L82-.L9
	.half	2
	.byte	145,68
	.word	0,0
.L93:
	.word	-1,.L9,0,.L82-.L9
	.half	2
	.byte	145,68
	.word	0,0
.L95:
	.word	-1,.L9,0,.L82-.L9
	.half	2
	.byte	145,68
	.word	0,0
.L96:
	.word	-1,.L9,0,.L82-.L9
	.half	2
	.byte	145,68
	.word	0,0
.L87:
	.word	-1,.L9,0,.L82-.L9
	.half	3
	.byte	145,132,127
	.word	0,0
.L8:
	.word	-1,.L9,0,.L131-.L9
	.half	2
	.byte	138,0
	.word	.L131-.L9,.L82-.L9
	.half	3
	.byte	138,200,1
	.word	.L82-.L9,.L82-.L9
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_loc'
.L79:
	.word	0,0
.L2:
	.word	-1,.L3,0,.L65-.L3
	.half	2
	.byte	138,0
	.word	0,0
.L71:
	.word	0,0
.L77:
	.word	0,0
.L69:
	.word	0,0
.L75:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Ccan_msg')
	.sect	'.debug_loc'
.L118:
	.word	0,0
.L116:
	.word	0,0
.L114:
	.word	0,0
.L10:
	.word	-1,.L11,0,.L108-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	0,0
.L112:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_loc'
.L107:
	.word	0,0
.L103:
	.word	0,0
.L106:
	.word	0,0
.L101:
	.word	0,0
.L105:
	.word	0,0
.L6:
	.word	-1,.L7,0,.L97-.L7
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L275:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('init_Ccan_Trans')
	.sect	'.debug_frame'
	.word	24
	.word	.L275,.L3,.L65-.L3
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('sleep_Ccan_Trans')
	.sect	'.debug_frame'
	.word	24
	.word	.L275,.L7,.L97-.L7
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('init_Ccan')
	.sect	'.debug_frame'
	.word	36
	.word	.L275,.L9,.L82-.L9
	.byte	4
	.word	(.L131-.L9)/2
	.byte	19,200,1,22,26,4,19,138,200,1,4
	.word	(.L82-.L131)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('init_Ccan_msg')
	.sect	'.debug_frame'
	.word	24
	.word	.L275,.L11,.L108-.L11
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Recieve_Ccan_10ms')
	.sect	'.debug_frame'
	.word	36
	.word	.L275,.L15,.L126-.L15
	.byte	4
	.word	(.L132-.L15)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L126-.L132)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L276:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L276,.L5,.L54-.L5
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L276,.L13,.L49-.L13
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\APP\src\Ccan.c	   176  
; ..\APP\src\Ccan.c	   177  

	; Module end
